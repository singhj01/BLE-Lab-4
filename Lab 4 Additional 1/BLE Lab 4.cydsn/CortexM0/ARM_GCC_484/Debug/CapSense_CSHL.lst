ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,2,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 2
  23              	CapSense_sensorBaseline:
  24 0000 0000     		.space	2
  25              		.global	CapSense_sensorBaselineLow
  26 0002 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 1
  29              	CapSense_sensorBaselineLow:
  30 0004 00       		.space	1
  31              		.global	CapSense_sensorSignal
  32 0005 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 1
  35              	CapSense_sensorSignal:
  36 0008 00       		.space	1
  37              		.global	CapSense_sensorOnMask
  38 0009 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 000c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,1,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 1
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51              		.global	CapSense_enableRawFilters
  52              		.type	CapSense_enableRawFilters, %object
  53              		.size	CapSense_enableRawFilters, 1
  54              	CapSense_enableRawFilters:
  55 0001 01       		.byte	1
  56              		.comm	CapSense_fingerThreshold,1,4
  57              		.comm	CapSense_noiseThreshold,1,4
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 2


  58              		.comm	CapSense_negativeNoiseThreshold,1,4
  59              		.comm	CapSense_hysteresis,1,4
  60              		.global	CapSense_debounce
  61 0002 0000     		.align	2
  62              		.type	CapSense_debounce, %object
  63              		.size	CapSense_debounce, 1
  64              	CapSense_debounce:
  65 0004 05       		.byte	5
  66 0005 000000   		.bss
  67 000d 000000   		.align	2
  68              	CapSense_debounceCounter:
  69 0010 0000     		.space	2
  70              		.global	CapSense_rawDataIndex
  71 0012 0000     		.section	.rodata
  72              		.align	2
  73              		.type	CapSense_rawDataIndex, %object
  74              		.size	CapSense_rawDataIndex, 1
  75              	CapSense_rawDataIndex:
  76 0000 00       		.space	1
  77              		.global	CapSense_numberOfSensors
  78 0001 000000   		.align	2
  79              		.type	CapSense_numberOfSensors, %object
  80              		.size	CapSense_numberOfSensors, 1
  81              	CapSense_numberOfSensors:
  82 0004 01       		.byte	1
  83 0005 000000   		.section	.text.CapSense_BaseInit,"ax",%progbits
  84              		.align	2
  85              		.global	CapSense_BaseInit
  86              		.code	16
  87              		.thumb_func
  88              		.type	CapSense_BaseInit, %function
  89              	CapSense_BaseInit:
  90              	.LFB35:
  91              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 3


  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_10 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 4


  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  92              		.loc 1 135 0
  93              		.cfi_startproc
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 5


  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 84B0     		sub	sp, sp, #16
  99              		.cfi_def_cfa_offset 24
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 102 0006 7860     		str	r0, [r7, #4]
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 103              		.loc 1 138 0
 104 0008 3B1C     		mov	r3, r7
 105 000a 0F33     		add	r3, r3, #15
 106 000c 1549     		ldr	r1, .L2
 107 000e 7A68     		ldr	r2, [r7, #4]
 108 0010 8A18     		add	r2, r1, r2
 109 0012 1278     		ldrb	r2, [r2]
 110 0014 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 111              		.loc 1 152 0
 112 0016 144B     		ldr	r3, .L2+4
 113 0018 7A68     		ldr	r2, [r7, #4]
 114 001a 5200     		lsl	r2, r2, #1
 115 001c D15A     		ldrh	r1, [r2, r3]
 116 001e 134B     		ldr	r3, .L2+8
 117 0020 7A68     		ldr	r2, [r7, #4]
 118 0022 5200     		lsl	r2, r2, #1
 119 0024 D152     		strh	r1, [r2, r3]
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 120              		.loc 1 153 0
 121 0026 124A     		ldr	r2, .L2+12
 122 0028 7B68     		ldr	r3, [r7, #4]
 123 002a D318     		add	r3, r2, r3
 124 002c 0022     		mov	r2, #0
 125 002e 1A70     		strb	r2, [r3]
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 126              		.loc 1 154 0
 127 0030 104A     		ldr	r2, .L2+16
 128 0032 7B68     		ldr	r3, [r7, #4]
 129 0034 D318     		add	r3, r2, r3
 130 0036 0022     		mov	r2, #0
 131 0038 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 6


 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 132              		.loc 1 156 0
 133 003a 3B1C     		mov	r3, r7
 134 003c 0F33     		add	r3, r3, #15
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 3A1C     		mov	r2, r7
 137 0042 0F32     		add	r2, r2, #15
 138 0044 1278     		ldrb	r2, [r2]
 139 0046 0C49     		ldr	r1, .L2+20
 140 0048 895C     		ldrb	r1, [r1, r2]
 141 004a 0C4A     		ldr	r2, .L2+24
 142 004c D154     		strb	r1, [r2, r3]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 143              		.loc 1 171 0
 144 004e 064B     		ldr	r3, .L2+4
 145 0050 7A68     		ldr	r2, [r7, #4]
 146 0052 5200     		lsl	r2, r2, #1
 147 0054 D15A     		ldrh	r1, [r2, r3]
 148 0056 0A4B     		ldr	r3, .L2+28
 149 0058 7A68     		ldr	r2, [r7, #4]
 150 005a 5200     		lsl	r2, r2, #1
 151 005c D152     		strh	r1, [r2, r3]
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 152              		.loc 1 183 0
 153 005e BD46     		mov	sp, r7
 154 0060 04B0     		add	sp, sp, #16
 155              		@ sp needed
 156 0062 80BD     		pop	{r7, pc}
 157              	.L3:
 158              		.align	2
 159              	.L2:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 7


 160 0064 00000000 		.word	CapSense_widgetNumber
 161 0068 00000000 		.word	CapSense_sensorRaw
 162 006c 00000000 		.word	CapSense_sensorBaseline
 163 0070 00000000 		.word	CapSense_sensorBaselineLow
 164 0074 00000000 		.word	CapSense_sensorSignal
 165 0078 00000000 		.word	CapSense_debounce
 166 007c 10000000 		.word	CapSense_debounceCounter
 167 0080 00000000 		.word	CapSense_rawFilterData1
 168              		.cfi_endproc
 169              	.LFE35:
 170              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 171              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 172              		.align	2
 173              		.global	CapSense_InitializeSensorBaseline
 174              		.code	16
 175              		.thumb_func
 176              		.type	CapSense_InitializeSensorBaseline, %function
 177              	CapSense_InitializeSensorBaseline:
 178              	.LFB36:
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 179              		.loc 1 211 0
 180              		.cfi_startproc
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 8


 189 0006 7860     		str	r0, [r7, #4]
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 190              		.loc 1 213 0
 191 0008 7B68     		ldr	r3, [r7, #4]
 192 000a 181C     		mov	r0, r3
 193 000c FFF7FEFF 		bl	CapSense_ScanSensor
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 194              		.loc 1 214 0
 195 0010 C046     		mov	r8, r8
 196              	.L5:
 197              		.loc 1 214 0 is_stmt 0 discriminator 1
 198 0012 FFF7FEFF 		bl	CapSense_IsBusy
 199 0016 031C     		mov	r3, r0
 200 0018 002B     		cmp	r3, #0
 201 001a FAD1     		bne	.L5
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 202              		.loc 1 220 0 is_stmt 1
 203 001c 7B68     		ldr	r3, [r7, #4]
 204 001e 181C     		mov	r0, r3
 205 0020 FFF7FEFF 		bl	CapSense_BaseInit
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 206              		.loc 1 221 0
 207 0024 BD46     		mov	sp, r7
 208 0026 02B0     		add	sp, sp, #8
 209              		@ sp needed
 210 0028 80BD     		pop	{r7, pc}
 211              		.cfi_endproc
 212              	.LFE36:
 213              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 214 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 215              		.align	2
 216              		.global	CapSense_InitializeAllBaselines
 217              		.code	16
 218              		.thumb_func
 219              		.type	CapSense_InitializeAllBaselines, %function
 220              	CapSense_InitializeAllBaselines:
 221              	.LFB37:
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 9


 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 222              		.loc 1 248 0
 223              		.cfi_startproc
 224 0000 80B5     		push	{r7, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 82B0     		sub	sp, sp, #8
 229              		.cfi_def_cfa_offset 16
 230 0004 00AF     		add	r7, sp, #0
 231              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 232              		.loc 1 251 0
 233 0006 0023     		mov	r3, #0
 234 0008 7B60     		str	r3, [r7, #4]
 235 000a 06E0     		b	.L7
 236              	.L8:
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 237              		.loc 1 253 0 discriminator 2
 238 000c 7B68     		ldr	r3, [r7, #4]
 239 000e 181C     		mov	r0, r3
 240 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 241              		.loc 1 251 0 discriminator 2
 242 0014 7B68     		ldr	r3, [r7, #4]
 243 0016 0133     		add	r3, r3, #1
 244 0018 7B60     		str	r3, [r7, #4]
 245              	.L7:
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 246              		.loc 1 251 0 is_stmt 0 discriminator 1
 247 001a 7B68     		ldr	r3, [r7, #4]
 248 001c 002B     		cmp	r3, #0
 249 001e F5D0     		beq	.L8
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 250              		.loc 1 255 0 is_stmt 1
 251 0020 BD46     		mov	sp, r7
 252 0022 02B0     		add	sp, sp, #8
 253              		@ sp needed
 254 0024 80BD     		pop	{r7, pc}
 255              		.cfi_endproc
 256              	.LFE37:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 10


 257              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 258 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 259              		.align	2
 260              		.global	CapSense_InitializeEnabledBaselines
 261              		.code	16
 262              		.thumb_func
 263              		.type	CapSense_InitializeEnabledBaselines, %function
 264              	CapSense_InitializeEnabledBaselines:
 265              	.LFB38:
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 266              		.loc 1 283 0
 267              		.cfi_startproc
 268 0000 80B5     		push	{r7, lr}
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 82B0     		sub	sp, sp, #8
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 276              		.loc 1 287 0
 277 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 278              		.loc 1 288 0
 279 000a C046     		mov	r8, r8
 280              	.L10:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 11


 281              		.loc 1 288 0 is_stmt 0 discriminator 1
 282 000c FFF7FEFF 		bl	CapSense_IsBusy
 283 0010 031C     		mov	r3, r0
 284 0012 002B     		cmp	r3, #0
 285 0014 FAD1     		bne	.L10
 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 286              		.loc 1 293 0 is_stmt 1
 287 0016 0023     		mov	r3, #0
 288 0018 7B60     		str	r3, [r7, #4]
 289 001a 11E0     		b	.L11
 290              	.L13:
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 291              		.loc 1 295 0
 292 001c 0B4A     		ldr	r2, .L14
 293 001e 7B68     		ldr	r3, [r7, #4]
 294 0020 101C     		mov	r0, r2
 295 0022 191C     		mov	r1, r3
 296 0024 FFF7FEFF 		bl	CapSense_GetBitValue
 297 0028 031C     		mov	r3, r0
 298 002a 3B60     		str	r3, [r7]
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 299              		.loc 1 298 0
 300 002c 3B68     		ldr	r3, [r7]
 301 002e 002B     		cmp	r3, #0
 302 0030 03D0     		beq	.L12
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 303              		.loc 1 301 0
 304 0032 7B68     		ldr	r3, [r7, #4]
 305 0034 181C     		mov	r0, r3
 306 0036 FFF7FEFF 		bl	CapSense_BaseInit
 307              	.L12:
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 308              		.loc 1 293 0
 309 003a 7B68     		ldr	r3, [r7, #4]
 310 003c 0133     		add	r3, r3, #1
 311 003e 7B60     		str	r3, [r7, #4]
 312              	.L11:
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 313              		.loc 1 293 0 is_stmt 0 discriminator 1
 314 0040 7B68     		ldr	r3, [r7, #4]
 315 0042 002B     		cmp	r3, #0
 316 0044 EAD0     		beq	.L13
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 317              		.loc 1 304 0 is_stmt 1
 318 0046 BD46     		mov	sp, r7
 319 0048 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 12


 320              		@ sp needed
 321 004a 80BD     		pop	{r7, pc}
 322              	.L15:
 323              		.align	2
 324              	.L14:
 325 004c 00000000 		.word	CapSense_sensorEnableMask
 326              		.cfi_endproc
 327              	.LFE38:
 328              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 329              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 330              		.align	2
 331              		.global	CapSense_UpdateBaselineNoThreshold
 332              		.code	16
 333              		.thumb_func
 334              		.type	CapSense_UpdateBaselineNoThreshold, %function
 335              	CapSense_UpdateBaselineNoThreshold:
 336              	.LFB39:
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 13


 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 337              		.loc 1 348 0
 338              		.cfi_startproc
 339 0000 90B5     		push	{r4, r7, lr}
 340              		.cfi_def_cfa_offset 12
 341              		.cfi_offset 4, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 87B0     		sub	sp, sp, #28
 345              		.cfi_def_cfa_offset 40
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 349              		.loc 1 353 0
 350 0008 3B1C     		mov	r3, r7
 351 000a 0F33     		add	r3, r3, #15
 352 000c 7A49     		ldr	r1, .L29
 353 000e 7A68     		ldr	r2, [r7, #4]
 354 0010 8A18     		add	r2, r1, r2
 355 0012 1278     		ldrb	r2, [r2]
 356 0014 1A70     		strb	r2, [r3]
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 357              		.loc 1 354 0
 358 0016 3B1C     		mov	r3, r7
 359 0018 0F33     		add	r3, r3, #15
 360 001a 1A78     		ldrb	r2, [r3]
 361 001c 3B1C     		mov	r3, r7
 362 001e 0E33     		add	r3, r3, #14
 363 0020 7649     		ldr	r1, .L29+4
 364 0022 8A5C     		ldrb	r2, [r1, r2]
 365 0024 1A70     		strb	r2, [r3]
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 366              		.loc 1 362 0
 367 0026 3B1C     		mov	r3, r7
 368 0028 1033     		add	r3, r3, #16
 369 002a 754A     		ldr	r2, .L29+8
 370 002c 7968     		ldr	r1, [r7, #4]
 371 002e 4900     		lsl	r1, r1, #1
 372 0030 8A5A     		ldrh	r2, [r1, r2]
 373 0032 1A80     		strh	r2, [r3]
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 14


 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 374              		.loc 1 365 0
 375 0034 734B     		ldr	r3, .L29+12
 376 0036 1B78     		ldrb	r3, [r3]
 377 0038 002B     		cmp	r3, #0
 378 003a 15D0     		beq	.L17
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 379              		.loc 1 386 0
 380 003c 724B     		ldr	r3, .L29+16
 381 003e 7A68     		ldr	r2, [r7, #4]
 382 0040 5200     		lsl	r2, r2, #1
 383 0042 D35A     		ldrh	r3, [r2, r3]
 384 0044 3C1C     		mov	r4, r7
 385 0046 1034     		add	r4, r4, #16
 386 0048 3A1C     		mov	r2, r7
 387 004a 1032     		add	r2, r2, #16
 388 004c 1288     		ldrh	r2, [r2]
 389 004e 101C     		mov	r0, r2
 390 0050 191C     		mov	r1, r3
 391 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 392 0056 031C     		mov	r3, r0
 393 0058 2380     		strh	r3, [r4]
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 394              		.loc 1 387 0
 395 005a 6B4B     		ldr	r3, .L29+16
 396 005c 7A68     		ldr	r2, [r7, #4]
 397 005e 5200     		lsl	r2, r2, #1
 398 0060 391C     		mov	r1, r7
 399 0062 1031     		add	r1, r1, #16
 400 0064 0988     		ldrh	r1, [r1]
 401 0066 D152     		strh	r1, [r2, r3]
 402              	.L17:
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 15


 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 403              		.loc 1 408 0
 404 0068 7B68     		ldr	r3, [r7, #4]
 405 006a DAB2     		uxtb	r2, r3
 406 006c 6749     		ldr	r1, .L29+20
 407 006e 644B     		ldr	r3, .L29+8
 408 0070 081C     		mov	r0, r1
 409 0072 111C     		mov	r1, r2
 410 0074 1A1C     		mov	r2, r3
 411 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_10
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 412              		.loc 1 413 0
 413 007a 654B     		ldr	r3, .L29+24
 414 007c 7A68     		ldr	r2, [r7, #4]
 415 007e 5200     		lsl	r2, r2, #1
 416 0080 D35A     		ldrh	r3, [r2, r3]
 417 0082 3A1C     		mov	r2, r7
 418 0084 1032     		add	r2, r2, #16
 419 0086 1288     		ldrh	r2, [r2]
 420 0088 9A42     		cmp	r2, r3
 421 008a 12D3     		bcc	.L18
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 422              		.loc 1 415 0
 423 008c 614A     		ldr	r2, .L29+28
 424 008e 7B68     		ldr	r3, [r7, #4]
 425 0090 D318     		add	r3, r2, r3
 426 0092 0022     		mov	r2, #0
 427 0094 1A70     		strb	r2, [r3]
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 428              		.loc 1 416 0
 429 0096 5E4B     		ldr	r3, .L29+24
 430 0098 7A68     		ldr	r2, [r7, #4]
 431 009a 5200     		lsl	r2, r2, #1
 432 009c D25A     		ldrh	r2, [r2, r3]
 433 009e 3B1C     		mov	r3, r7
 434 00a0 1233     		add	r3, r3, #18
 435 00a2 391C     		mov	r1, r7
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 16


 436 00a4 1031     		add	r1, r1, #16
 437 00a6 0988     		ldrh	r1, [r1]
 438 00a8 8A1A     		sub	r2, r1, r2
 439 00aa 1A80     		strh	r2, [r3]
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 440              		.loc 1 417 0
 441 00ac 0123     		mov	r3, #1
 442 00ae 7B61     		str	r3, [r7, #20]
 443 00b0 0CE0     		b	.L19
 444              	.L18:
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 445              		.loc 1 421 0
 446 00b2 574B     		ldr	r3, .L29+24
 447 00b4 7A68     		ldr	r2, [r7, #4]
 448 00b6 5200     		lsl	r2, r2, #1
 449 00b8 D15A     		ldrh	r1, [r2, r3]
 450 00ba 3B1C     		mov	r3, r7
 451 00bc 1233     		add	r3, r3, #18
 452 00be 3A1C     		mov	r2, r7
 453 00c0 1032     		add	r2, r2, #16
 454 00c2 1288     		ldrh	r2, [r2]
 455 00c4 8A1A     		sub	r2, r1, r2
 456 00c6 1A80     		strh	r2, [r3]
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 457              		.loc 1 422 0
 458 00c8 0023     		mov	r3, #0
 459 00ca 7B61     		str	r3, [r7, #20]
 460              	.L19:
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 461              		.loc 1 426 0
 462 00cc 7B69     		ldr	r3, [r7, #20]
 463 00ce 002B     		cmp	r3, #0
 464 00d0 28D1     		bne	.L20
 465              		.loc 1 426 0 is_stmt 0 discriminator 1
 466 00d2 3B1C     		mov	r3, r7
 467 00d4 0F33     		add	r3, r3, #15
 468 00d6 1B78     		ldrb	r3, [r3]
 469 00d8 4F4A     		ldr	r2, .L29+32
 470 00da D35C     		ldrb	r3, [r2, r3]
 471 00dc 3A1C     		mov	r2, r7
 472 00de 1232     		add	r2, r2, #18
 473 00e0 1288     		ldrh	r2, [r2]
 474 00e2 9A42     		cmp	r2, r3
 475 00e4 1ED9     		bls	.L20
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 476              		.loc 1 431 0 is_stmt 1
 477 00e6 4B4A     		ldr	r2, .L29+28
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 17


 478 00e8 7B68     		ldr	r3, [r7, #4]
 479 00ea D318     		add	r3, r2, r3
 480 00ec 1A78     		ldrb	r2, [r3]
 481 00ee 4B49     		ldr	r1, .L29+36
 482 00f0 7B68     		ldr	r3, [r7, #4]
 483 00f2 CB18     		add	r3, r1, r3
 484 00f4 1B78     		ldrb	r3, [r3]
 485 00f6 9A42     		cmp	r2, r3
 486 00f8 09D3     		bcc	.L21
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 487              		.loc 1 433 0
 488 00fa 7B68     		ldr	r3, [r7, #4]
 489 00fc 181C     		mov	r0, r3
 490 00fe FFF7FEFF 		bl	CapSense_BaseInit
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 491              		.loc 1 434 0
 492 0102 444A     		ldr	r2, .L29+28
 493 0104 7B68     		ldr	r3, [r7, #4]
 494 0106 D318     		add	r3, r2, r3
 495 0108 0022     		mov	r2, #0
 496 010a 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 497              		.loc 1 431 0
 498 010c 4CE0     		b	.L23
 499              	.L21:
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 500              		.loc 1 438 0
 501 010e 414A     		ldr	r2, .L29+28
 502 0110 7B68     		ldr	r3, [r7, #4]
 503 0112 D318     		add	r3, r2, r3
 504 0114 1B78     		ldrb	r3, [r3]
 505 0116 0133     		add	r3, r3, #1
 506 0118 DAB2     		uxtb	r2, r3
 507 011a 3E49     		ldr	r1, .L29+28
 508 011c 7B68     		ldr	r3, [r7, #4]
 509 011e CB18     		add	r3, r1, r3
 510 0120 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 511              		.loc 1 431 0
 512 0122 41E0     		b	.L23
 513              	.L20:
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 514              		.loc 1 446 0
 515 0124 3B1C     		mov	r3, r7
 516 0126 0E33     		add	r3, r3, #14
 517 0128 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 18


 518 012a 9BB2     		uxth	r3, r3
 519 012c 3A1C     		mov	r2, r7
 520 012e 1232     		add	r2, r2, #18
 521 0130 1288     		ldrh	r2, [r2]
 522 0132 9A42     		cmp	r2, r3
 523 0134 0CD9     		bls	.L24
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 524              		.loc 1 447 0 discriminator 1
 525 0136 3B1C     		mov	r3, r7
 526 0138 0F33     		add	r3, r3, #15
 527 013a 1B78     		ldrb	r3, [r3]
 528 013c 364A     		ldr	r2, .L29+32
 529 013e D35C     		ldrb	r3, [r2, r3]
 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 530              		.loc 1 446 0 discriminator 1
 531 0140 3A1C     		mov	r2, r7
 532 0142 1232     		add	r2, r2, #18
 533 0144 1288     		ldrh	r2, [r2]
 534 0146 9A42     		cmp	r2, r3
 535 0148 2ED2     		bcs	.L23
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 536              		.loc 1 448 0
 537 014a 7B69     		ldr	r3, [r7, #20]
 538 014c 002B     		cmp	r3, #0
 539 014e 2BD1     		bne	.L23
 540              	.L24:
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 541              		.loc 1 459 0
 542 0150 2F4B     		ldr	r3, .L29+24
 543 0152 7A68     		ldr	r2, [r7, #4]
 544 0154 5200     		lsl	r2, r2, #1
 545 0156 D35A     		ldrh	r3, [r2, r3]
 546 0158 1B02     		lsl	r3, r3, #8
 547 015a BB60     		str	r3, [r7, #8]
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 548              		.loc 1 460 0
 549 015c 304A     		ldr	r2, .L29+40
 550 015e 7B68     		ldr	r3, [r7, #4]
 551 0160 D318     		add	r3, r2, r3
 552 0162 1B78     		ldrb	r3, [r3]
 553 0164 BA68     		ldr	r2, [r7, #8]
 554 0166 1343     		orr	r3, r2
 555 0168 BB60     		str	r3, [r7, #8]
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 556              		.loc 1 463 0
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 19


 557 016a 3B1C     		mov	r3, r7
 558 016c 1033     		add	r3, r3, #16
 559 016e 1B88     		ldrh	r3, [r3]
 560 0170 BA68     		ldr	r2, [r7, #8]
 561 0172 D318     		add	r3, r2, r3
 562 0174 BB60     		str	r3, [r7, #8]
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 563              		.loc 1 466 0
 564 0176 264B     		ldr	r3, .L29+24
 565 0178 7A68     		ldr	r2, [r7, #4]
 566 017a 5200     		lsl	r2, r2, #1
 567 017c D35A     		ldrh	r3, [r2, r3]
 568 017e BA68     		ldr	r2, [r7, #8]
 569 0180 D31A     		sub	r3, r2, r3
 570 0182 BB60     		str	r3, [r7, #8]
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 571              		.loc 1 469 0
 572 0184 BB68     		ldr	r3, [r7, #8]
 573 0186 1B0A     		lsr	r3, r3, #8
 574 0188 99B2     		uxth	r1, r3
 575 018a 214B     		ldr	r3, .L29+24
 576 018c 7A68     		ldr	r2, [r7, #4]
 577 018e 5200     		lsl	r2, r2, #1
 578 0190 D152     		strh	r1, [r2, r3]
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 579              		.loc 1 470 0
 580 0192 BB68     		ldr	r3, [r7, #8]
 581 0194 DAB2     		uxtb	r2, r3
 582 0196 2249     		ldr	r1, .L29+40
 583 0198 7B68     		ldr	r3, [r7, #4]
 584 019a CB18     		add	r3, r1, r3
 585 019c 1A70     		strb	r2, [r3]
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 586              		.loc 1 472 0
 587 019e 1D4A     		ldr	r2, .L29+28
 588 01a0 7B68     		ldr	r3, [r7, #4]
 589 01a2 D318     		add	r3, r2, r3
 590 01a4 0022     		mov	r2, #0
 591 01a6 1A70     		strb	r2, [r3]
 592              	.L23:
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 593              		.loc 1 479 0
 594 01a8 3B1C     		mov	r3, r7
 595 01aa 0E33     		add	r3, r3, #14
 596 01ac 1B78     		ldrb	r3, [r3]
 597 01ae 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 20


 598 01b0 3A1C     		mov	r2, r7
 599 01b2 1232     		add	r2, r2, #18
 600 01b4 1288     		ldrh	r2, [r2]
 601 01b6 9A42     		cmp	r2, r3
 602 01b8 16D9     		bls	.L25
 603              		.loc 1 479 0 is_stmt 0 discriminator 1
 604 01ba 7B69     		ldr	r3, [r7, #20]
 605 01bc 002B     		cmp	r3, #0
 606 01be 13D0     		beq	.L25
 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 607              		.loc 1 483 0 is_stmt 1
 608 01c0 3B1C     		mov	r3, r7
 609 01c2 1233     		add	r3, r3, #18
 610 01c4 1B88     		ldrh	r3, [r3]
 611 01c6 FF2B     		cmp	r3, #255
 612 01c8 05D9     		bls	.L26
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 613              		.loc 1 485 0
 614 01ca 164A     		ldr	r2, .L29+44
 615 01cc 7B68     		ldr	r3, [r7, #4]
 616 01ce D318     		add	r3, r2, r3
 617 01d0 FF22     		mov	r2, #255
 618 01d2 1A70     		strb	r2, [r3]
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 619              		.loc 1 483 0
 620 01d4 0DE0     		b	.L16
 621              	.L26:
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 622              		.loc 1 489 0
 623 01d6 3B1C     		mov	r3, r7
 624 01d8 1233     		add	r3, r3, #18
 625 01da 1B88     		ldrh	r3, [r3]
 626 01dc DAB2     		uxtb	r2, r3
 627 01de 1149     		ldr	r1, .L29+44
 628 01e0 7B68     		ldr	r3, [r7, #4]
 629 01e2 CB18     		add	r3, r1, r3
 630 01e4 1A70     		strb	r2, [r3]
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 631              		.loc 1 483 0
 632 01e6 04E0     		b	.L16
 633              	.L25:
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 21


 634              		.loc 1 498 0
 635 01e8 0E4A     		ldr	r2, .L29+44
 636 01ea 7B68     		ldr	r3, [r7, #4]
 637 01ec D318     		add	r3, r2, r3
 638 01ee 0022     		mov	r2, #0
 639 01f0 1A70     		strb	r2, [r3]
 640              	.L16:
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 641              		.loc 1 505 0
 642 01f2 BD46     		mov	sp, r7
 643 01f4 07B0     		add	sp, sp, #28
 644              		@ sp needed
 645 01f6 90BD     		pop	{r4, r7, pc}
 646              	.L30:
 647              		.align	2
 648              	.L29:
 649 01f8 00000000 		.word	CapSense_widgetNumber
 650 01fc 00000000 		.word	CapSense_noiseThreshold
 651 0200 00000000 		.word	CapSense_sensorRaw
 652 0204 00000000 		.word	CapSense_enableRawFilters
 653 0208 00000000 		.word	CapSense_rawFilterData1
 654 020c 00000000 		.word	CapSense_config
 655 0210 00000000 		.word	CapSense_sensorBaseline
 656 0214 00000000 		.word	CapSense_lowBaselineResetCnt
 657 0218 00000000 		.word	CapSense_negativeNoiseThreshold
 658 021c 00000000 		.word	CapSense_lowBaselineReset
 659 0220 00000000 		.word	CapSense_sensorBaselineLow
 660 0224 00000000 		.word	CapSense_sensorSignal
 661              		.cfi_endproc
 662              	.LFE39:
 663              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 664              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 665              		.align	2
 666              		.global	CapSense_UpdateSensorBaseline
 667              		.code	16
 668              		.thumb_func
 669              		.type	CapSense_UpdateSensorBaseline, %function
 670              	CapSense_UpdateSensorBaseline:
 671              	.LFB40:
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 22


 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 672              		.loc 1 539 0
 673              		.cfi_startproc
 674 0000 80B5     		push	{r7, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 82B0     		sub	sp, sp, #8
 679              		.cfi_def_cfa_offset 16
 680 0004 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 682 0006 7860     		str	r0, [r7, #4]
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 683              		.loc 1 551 0
 684 0008 7B68     		ldr	r3, [r7, #4]
 685 000a 181C     		mov	r0, r3
 686 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 687              		.loc 1 554 0
 688 0010 7B68     		ldr	r3, [r7, #4]
 689 0012 181C     		mov	r0, r3
 690 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 23


 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 691              		.loc 1 560 0
 692 0018 BD46     		mov	sp, r7
 693 001a 02B0     		add	sp, sp, #8
 694              		@ sp needed
 695 001c 80BD     		pop	{r7, pc}
 696              		.cfi_endproc
 697              	.LFE40:
 698              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 699 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 700              		.align	2
 701              		.global	CapSense_UpdateEnabledBaselines
 702              		.code	16
 703              		.thumb_func
 704              		.type	CapSense_UpdateEnabledBaselines, %function
 705              	CapSense_UpdateEnabledBaselines:
 706              	.LFB41:
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 707              		.loc 1 593 0
 708              		.cfi_startproc
 709 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 24


 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 82B0     		sub	sp, sp, #8
 714              		.cfi_def_cfa_offset 16
 715 0004 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 717              		.loc 1 597 0
 718 0006 0023     		mov	r3, #0
 719 0008 7B60     		str	r3, [r7, #4]
 720 000a 11E0     		b	.L33
 721              	.L35:
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 722              		.loc 1 599 0
 723 000c 0B4A     		ldr	r2, .L36
 724 000e 7B68     		ldr	r3, [r7, #4]
 725 0010 101C     		mov	r0, r2
 726 0012 191C     		mov	r1, r3
 727 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 728 0018 031C     		mov	r3, r0
 729 001a 3B60     		str	r3, [r7]
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 730              		.loc 1 601 0
 731 001c 3B68     		ldr	r3, [r7]
 732 001e 002B     		cmp	r3, #0
 733 0020 03D0     		beq	.L34
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 734              		.loc 1 603 0
 735 0022 7B68     		ldr	r3, [r7, #4]
 736 0024 181C     		mov	r0, r3
 737 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 738              	.L34:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 739              		.loc 1 597 0
 740 002a 7B68     		ldr	r3, [r7, #4]
 741 002c 0133     		add	r3, r3, #1
 742 002e 7B60     		str	r3, [r7, #4]
 743              	.L33:
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 744              		.loc 1 597 0 is_stmt 0 discriminator 1
 745 0030 7B68     		ldr	r3, [r7, #4]
 746 0032 002B     		cmp	r3, #0
 747 0034 EAD0     		beq	.L35
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 748              		.loc 1 606 0 is_stmt 1
 749 0036 BD46     		mov	sp, r7
 750 0038 02B0     		add	sp, sp, #8
 751              		@ sp needed
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 25


 752 003a 80BD     		pop	{r7, pc}
 753              	.L37:
 754              		.align	2
 755              	.L36:
 756 003c 00000000 		.word	CapSense_sensorEnableMask
 757              		.cfi_endproc
 758              	.LFE41:
 759              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 760              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 761              		.align	2
 762              		.global	CapSense_UpdateWidgetBaseline
 763              		.code	16
 764              		.thumb_func
 765              		.type	CapSense_UpdateWidgetBaseline, %function
 766              	CapSense_UpdateWidgetBaseline:
 767              	.LFB42:
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 768              		.loc 1 638 0
 769              		.cfi_startproc
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 88B0     		sub	sp, sp, #32
 775              		.cfi_def_cfa_offset 40
 776 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 26


 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 779              		.loc 1 646 0
 780 0008 0123     		mov	r3, #1
 781 000a BB61     		str	r3, [r7, #24]
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 782              		.loc 1 649 0
 783 000c 0023     		mov	r3, #0
 784 000e 7B61     		str	r3, [r7, #20]
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 785              		.loc 1 652 0
 786 0010 0023     		mov	r3, #0
 787 0012 1A1C     		mov	r2, r3
 788 0014 BB69     		ldr	r3, [r7, #24]
 789 0016 D318     		add	r3, r2, r3
 790 0018 3B61     		str	r3, [r7, #16]
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 791              		.loc 1 654 0
 792 001a 7B69     		ldr	r3, [r7, #20]
 793 001c FB61     		str	r3, [r7, #28]
 794 001e 11E0     		b	.L39
 795              	.L41:
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 796              		.loc 1 656 0
 797 0020 0C4A     		ldr	r2, .L42
 798 0022 FB69     		ldr	r3, [r7, #28]
 799 0024 101C     		mov	r0, r2
 800 0026 191C     		mov	r1, r3
 801 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 802 002c 031C     		mov	r3, r0
 803 002e FB60     		str	r3, [r7, #12]
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 804              		.loc 1 658 0
 805 0030 FB68     		ldr	r3, [r7, #12]
 806 0032 002B     		cmp	r3, #0
 807 0034 03D0     		beq	.L40
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 808              		.loc 1 660 0
 809 0036 FB69     		ldr	r3, [r7, #28]
 810 0038 181C     		mov	r0, r3
 811 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 27


 812              	.L40:
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 813              		.loc 1 654 0
 814 003e FB69     		ldr	r3, [r7, #28]
 815 0040 0133     		add	r3, r3, #1
 816 0042 FB61     		str	r3, [r7, #28]
 817              	.L39:
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 818              		.loc 1 654 0 is_stmt 0 discriminator 1
 819 0044 FA69     		ldr	r2, [r7, #28]
 820 0046 3B69     		ldr	r3, [r7, #16]
 821 0048 9A42     		cmp	r2, r3
 822 004a E9D3     		bcc	.L41
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 823              		.loc 1 663 0 is_stmt 1
 824 004c BD46     		mov	sp, r7
 825 004e 08B0     		add	sp, sp, #32
 826              		@ sp needed
 827 0050 80BD     		pop	{r7, pc}
 828              	.L43:
 829 0052 C046     		.align	2
 830              	.L42:
 831 0054 00000000 		.word	CapSense_sensorEnableMask
 832              		.cfi_endproc
 833              	.LFE42:
 834              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 835              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 836              		.align	2
 837              		.global	CapSense_GetBaselineData
 838              		.code	16
 839              		.thumb_func
 840              		.type	CapSense_GetBaselineData, %function
 841              	CapSense_GetBaselineData:
 842              	.LFB43:
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 28


 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 843              		.loc 1 687 0
 844              		.cfi_startproc
 845 0000 80B5     		push	{r7, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              		.cfi_def_cfa_offset 16
 851 0004 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
 853 0006 7860     		str	r0, [r7, #4]
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 854              		.loc 1 688 0
 855 0008 034B     		ldr	r3, .L46
 856 000a 7A68     		ldr	r2, [r7, #4]
 857 000c 5200     		lsl	r2, r2, #1
 858 000e D35A     		ldrh	r3, [r2, r3]
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 859              		.loc 1 689 0
 860 0010 181C     		mov	r0, r3
 861 0012 BD46     		mov	sp, r7
 862 0014 02B0     		add	sp, sp, #8
 863              		@ sp needed
 864 0016 80BD     		pop	{r7, pc}
 865              	.L47:
 866              		.align	2
 867              	.L46:
 868 0018 00000000 		.word	CapSense_sensorBaseline
 869              		.cfi_endproc
 870              	.LFE43:
 871              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 872              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 873              		.align	2
 874              		.global	CapSense_SetBaselineData
 875              		.code	16
 876              		.thumb_func
 877              		.type	CapSense_SetBaselineData, %function
 878              	CapSense_SetBaselineData:
 879              	.LFB44:
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 29


 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 880              		.loc 1 714 0
 881              		.cfi_startproc
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 891 0008 0A1C     		mov	r2, r1
 892 000a BB1C     		add	r3, r7, #2
 893 000c 1A80     		strh	r2, [r3]
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 894              		.loc 1 715 0
 895 000e 044B     		ldr	r3, .L49
 896 0010 7A68     		ldr	r2, [r7, #4]
 897 0012 5200     		lsl	r2, r2, #1
 898 0014 B91C     		add	r1, r7, #2
 899 0016 0988     		ldrh	r1, [r1]
 900 0018 D152     		strh	r1, [r2, r3]
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 901              		.loc 1 716 0
 902 001a BD46     		mov	sp, r7
 903 001c 02B0     		add	sp, sp, #8
 904              		@ sp needed
 905 001e 80BD     		pop	{r7, pc}
 906              	.L50:
 907              		.align	2
 908              	.L49:
 909 0020 00000000 		.word	CapSense_sensorBaseline
 910              		.cfi_endproc
 911              	.LFE44:
 912              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 913              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 914              		.align	2
 915              		.global	CapSense_GetDiffCountData
 916              		.code	16
 917              		.thumb_func
 918              		.type	CapSense_GetDiffCountData, %function
 919              	CapSense_GetDiffCountData:
 920              	.LFB45:
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 30


 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 921              		.loc 1 741 0
 922              		.cfi_startproc
 923 0000 80B5     		push	{r7, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 82B0     		sub	sp, sp, #8
 928              		.cfi_def_cfa_offset 16
 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 931 0006 7860     		str	r0, [r7, #4]
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 932              		.loc 1 742 0
 933 0008 034A     		ldr	r2, .L53
 934 000a 7B68     		ldr	r3, [r7, #4]
 935 000c D318     		add	r3, r2, r3
 936 000e 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 937              		.loc 1 743 0
 938 0010 181C     		mov	r0, r3
 939 0012 BD46     		mov	sp, r7
 940 0014 02B0     		add	sp, sp, #8
 941              		@ sp needed
 942 0016 80BD     		pop	{r7, pc}
 943              	.L54:
 944              		.align	2
 945              	.L53:
 946 0018 00000000 		.word	CapSense_sensorSignal
 947              		.cfi_endproc
 948              	.LFE45:
 949              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 950              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 951              		.align	2
 952              		.global	CapSense_SetDiffCountData
 953              		.code	16
 954              		.thumb_func
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 31


 955              		.type	CapSense_SetDiffCountData, %function
 956              	CapSense_SetDiffCountData:
 957              	.LFB46:
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 958              		.loc 1 768 0
 959              		.cfi_startproc
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 82B0     		sub	sp, sp, #8
 965              		.cfi_def_cfa_offset 16
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 7860     		str	r0, [r7, #4]
 969 0008 0A1C     		mov	r2, r1
 970 000a FB1C     		add	r3, r7, #3
 971 000c 1A70     		strb	r2, [r3]
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 972              		.loc 1 769 0
 973 000e 044A     		ldr	r2, .L56
 974 0010 7B68     		ldr	r3, [r7, #4]
 975 0012 D318     		add	r3, r2, r3
 976 0014 FA1C     		add	r2, r7, #3
 977 0016 1278     		ldrb	r2, [r2]
 978 0018 1A70     		strb	r2, [r3]
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 979              		.loc 1 770 0
 980 001a BD46     		mov	sp, r7
 981 001c 02B0     		add	sp, sp, #8
 982              		@ sp needed
 983 001e 80BD     		pop	{r7, pc}
 984              	.L57:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 32


 985              		.align	2
 986              	.L56:
 987 0020 00000000 		.word	CapSense_sensorSignal
 988              		.cfi_endproc
 989              	.LFE46:
 990              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 991              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 992              		.align	2
 993              		.global	CapSense_GetFingerThreshold
 994              		.code	16
 995              		.thumb_func
 996              		.type	CapSense_GetFingerThreshold, %function
 997              	CapSense_GetFingerThreshold:
 998              	.LFB47:
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 999              		.loc 1 795 0
 1000              		.cfi_startproc
 1001 0000 80B5     		push	{r7, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 82B0     		sub	sp, sp, #8
 1006              		.cfi_def_cfa_offset 16
 1007 0004 00AF     		add	r7, sp, #0
 1008              		.cfi_def_cfa_register 7
 1009 0006 7860     		str	r0, [r7, #4]
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1010              		.loc 1 796 0
 1011 0008 034A     		ldr	r2, .L60
 1012 000a 7B68     		ldr	r3, [r7, #4]
 1013 000c D318     		add	r3, r2, r3
 1014 000e 1B78     		ldrb	r3, [r3]
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 33


 1015              		.loc 1 797 0
 1016 0010 181C     		mov	r0, r3
 1017 0012 BD46     		mov	sp, r7
 1018 0014 02B0     		add	sp, sp, #8
 1019              		@ sp needed
 1020 0016 80BD     		pop	{r7, pc}
 1021              	.L61:
 1022              		.align	2
 1023              	.L60:
 1024 0018 00000000 		.word	CapSense_fingerThreshold
 1025              		.cfi_endproc
 1026              	.LFE47:
 1027              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1028              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1029              		.align	2
 1030              		.global	CapSense_GetNoiseThreshold
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CapSense_GetNoiseThreshold, %function
 1034              	CapSense_GetNoiseThreshold:
 1035              	.LFB48:
 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1036              		.loc 1 822 0
 1037              		.cfi_startproc
 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 82B0     		sub	sp, sp, #8
 1043              		.cfi_def_cfa_offset 16
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 34


 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1047              		.loc 1 823 0
 1048 0008 034A     		ldr	r2, .L64
 1049 000a 7B68     		ldr	r3, [r7, #4]
 1050 000c D318     		add	r3, r2, r3
 1051 000e 1B78     		ldrb	r3, [r3]
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1052              		.loc 1 824 0
 1053 0010 181C     		mov	r0, r3
 1054 0012 BD46     		mov	sp, r7
 1055 0014 02B0     		add	sp, sp, #8
 1056              		@ sp needed
 1057 0016 80BD     		pop	{r7, pc}
 1058              	.L65:
 1059              		.align	2
 1060              	.L64:
 1061 0018 00000000 		.word	CapSense_noiseThreshold
 1062              		.cfi_endproc
 1063              	.LFE48:
 1064              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1065              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1066              		.align	2
 1067              		.global	CapSense_GetFingerHysteresis
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	CapSense_GetFingerHysteresis, %function
 1071              	CapSense_GetFingerHysteresis:
 1072              	.LFB49:
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1073              		.loc 1 850 0
 1074              		.cfi_startproc
 1075 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 35


 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 82B0     		sub	sp, sp, #8
 1080              		.cfi_def_cfa_offset 16
 1081 0004 00AF     		add	r7, sp, #0
 1082              		.cfi_def_cfa_register 7
 1083 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1084              		.loc 1 851 0
 1085 0008 034A     		ldr	r2, .L68
 1086 000a 7B68     		ldr	r3, [r7, #4]
 1087 000c D318     		add	r3, r2, r3
 1088 000e 1B78     		ldrb	r3, [r3]
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1089              		.loc 1 852 0
 1090 0010 181C     		mov	r0, r3
 1091 0012 BD46     		mov	sp, r7
 1092 0014 02B0     		add	sp, sp, #8
 1093              		@ sp needed
 1094 0016 80BD     		pop	{r7, pc}
 1095              	.L69:
 1096              		.align	2
 1097              	.L68:
 1098 0018 00000000 		.word	CapSense_hysteresis
 1099              		.cfi_endproc
 1100              	.LFE49:
 1101              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1102              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1103              		.align	2
 1104              		.global	CapSense_GetNegativeNoiseThreshold
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1108              	CapSense_GetNegativeNoiseThreshold:
 1109              	.LFB50:
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 36


 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1110              		.loc 1 878 0
 1111              		.cfi_startproc
 1112 0000 80B5     		push	{r7, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 82B0     		sub	sp, sp, #8
 1117              		.cfi_def_cfa_offset 16
 1118 0004 00AF     		add	r7, sp, #0
 1119              		.cfi_def_cfa_register 7
 1120 0006 7860     		str	r0, [r7, #4]
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1121              		.loc 1 880 0
 1122 0008 034A     		ldr	r2, .L72
 1123 000a 7B68     		ldr	r3, [r7, #4]
 1124 000c D318     		add	r3, r2, r3
 1125 000e 1B78     		ldrb	r3, [r3]
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1126              		.loc 1 884 0
 1127 0010 181C     		mov	r0, r3
 1128 0012 BD46     		mov	sp, r7
 1129 0014 02B0     		add	sp, sp, #8
 1130              		@ sp needed
 1131 0016 80BD     		pop	{r7, pc}
 1132              	.L73:
 1133              		.align	2
 1134              	.L72:
 1135 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1136              		.cfi_endproc
 1137              	.LFE50:
 1138              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1139              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1140              		.align	2
 1141              		.global	CapSense_SetFingerThreshold
 1142              		.code	16
 1143              		.thumb_func
 1144              		.type	CapSense_SetFingerThreshold, %function
 1145              	CapSense_SetFingerThreshold:
 1146              	.LFB51:
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 37


 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1147              		.loc 1 911 0
 1148              		.cfi_startproc
 1149 0000 80B5     		push	{r7, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 82B0     		sub	sp, sp, #8
 1154              		.cfi_def_cfa_offset 16
 1155 0004 00AF     		add	r7, sp, #0
 1156              		.cfi_def_cfa_register 7
 1157 0006 7860     		str	r0, [r7, #4]
 1158 0008 0A1C     		mov	r2, r1
 1159 000a FB1C     		add	r3, r7, #3
 1160 000c 1A70     		strb	r2, [r3]
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1161              		.loc 1 912 0
 1162 000e 044A     		ldr	r2, .L75
 1163 0010 7B68     		ldr	r3, [r7, #4]
 1164 0012 D318     		add	r3, r2, r3
 1165 0014 FA1C     		add	r2, r7, #3
 1166 0016 1278     		ldrb	r2, [r2]
 1167 0018 1A70     		strb	r2, [r3]
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1168              		.loc 1 913 0
 1169 001a BD46     		mov	sp, r7
 1170 001c 02B0     		add	sp, sp, #8
 1171              		@ sp needed
 1172 001e 80BD     		pop	{r7, pc}
 1173              	.L76:
 1174              		.align	2
 1175              	.L75:
 1176 0020 00000000 		.word	CapSense_fingerThreshold
 1177              		.cfi_endproc
 1178              	.LFE51:
 1179              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1180              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1181              		.align	2
 1182              		.global	CapSense_SetNoiseThreshold
 1183              		.code	16
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 38


 1184              		.thumb_func
 1185              		.type	CapSense_SetNoiseThreshold, %function
 1186              	CapSense_SetNoiseThreshold:
 1187              	.LFB52:
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1188              		.loc 1 939 0
 1189              		.cfi_startproc
 1190 0000 80B5     		push	{r7, lr}
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 82B0     		sub	sp, sp, #8
 1195              		.cfi_def_cfa_offset 16
 1196 0004 00AF     		add	r7, sp, #0
 1197              		.cfi_def_cfa_register 7
 1198 0006 7860     		str	r0, [r7, #4]
 1199 0008 0A1C     		mov	r2, r1
 1200 000a FB1C     		add	r3, r7, #3
 1201 000c 1A70     		strb	r2, [r3]
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1202              		.loc 1 940 0
 1203 000e 044A     		ldr	r2, .L78
 1204 0010 7B68     		ldr	r3, [r7, #4]
 1205 0012 D318     		add	r3, r2, r3
 1206 0014 FA1C     		add	r2, r7, #3
 1207 0016 1278     		ldrb	r2, [r2]
 1208 0018 1A70     		strb	r2, [r3]
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1209              		.loc 1 941 0
 1210 001a BD46     		mov	sp, r7
 1211 001c 02B0     		add	sp, sp, #8
 1212              		@ sp needed
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 39


 1213 001e 80BD     		pop	{r7, pc}
 1214              	.L79:
 1215              		.align	2
 1216              	.L78:
 1217 0020 00000000 		.word	CapSense_noiseThreshold
 1218              		.cfi_endproc
 1219              	.LFE52:
 1220              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1221              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1222              		.align	2
 1223              		.global	CapSense_SetFingerHysteresis
 1224              		.code	16
 1225              		.thumb_func
 1226              		.type	CapSense_SetFingerHysteresis, %function
 1227              	CapSense_SetFingerHysteresis:
 1228              	.LFB53:
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1229              		.loc 1 967 0
 1230              		.cfi_startproc
 1231 0000 80B5     		push	{r7, lr}
 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 82B0     		sub	sp, sp, #8
 1236              		.cfi_def_cfa_offset 16
 1237 0004 00AF     		add	r7, sp, #0
 1238              		.cfi_def_cfa_register 7
 1239 0006 7860     		str	r0, [r7, #4]
 1240 0008 0A1C     		mov	r2, r1
 1241 000a FB1C     		add	r3, r7, #3
 1242 000c 1A70     		strb	r2, [r3]
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 40


 1243              		.loc 1 968 0
 1244 000e 044A     		ldr	r2, .L81
 1245 0010 7B68     		ldr	r3, [r7, #4]
 1246 0012 D318     		add	r3, r2, r3
 1247 0014 FA1C     		add	r2, r7, #3
 1248 0016 1278     		ldrb	r2, [r2]
 1249 0018 1A70     		strb	r2, [r3]
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1250              		.loc 1 969 0
 1251 001a BD46     		mov	sp, r7
 1252 001c 02B0     		add	sp, sp, #8
 1253              		@ sp needed
 1254 001e 80BD     		pop	{r7, pc}
 1255              	.L82:
 1256              		.align	2
 1257              	.L81:
 1258 0020 00000000 		.word	CapSense_hysteresis
 1259              		.cfi_endproc
 1260              	.LFE53:
 1261              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1262              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1263              		.align	2
 1264              		.global	CapSense_SetNegativeNoiseThreshold
 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1268              	CapSense_SetNegativeNoiseThreshold:
 1269              	.LFB54:
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1270              		.loc 1 996 0
 1271              		.cfi_startproc
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 41


 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 82B0     		sub	sp, sp, #8
 1277              		.cfi_def_cfa_offset 16
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 1280 0006 7860     		str	r0, [r7, #4]
 1281 0008 0A1C     		mov	r2, r1
 1282 000a FB1C     		add	r3, r7, #3
 1283 000c 1A70     		strb	r2, [r3]
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1284              		.loc 1 997 0
 1285 000e 044A     		ldr	r2, .L84
 1286 0010 7B68     		ldr	r3, [r7, #4]
 1287 0012 D318     		add	r3, r2, r3
 1288 0014 FA1C     		add	r2, r7, #3
 1289 0016 1278     		ldrb	r2, [r2]
 1290 0018 1A70     		strb	r2, [r3]
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1291              		.loc 1 998 0
 1292 001a BD46     		mov	sp, r7
 1293 001c 02B0     		add	sp, sp, #8
 1294              		@ sp needed
 1295 001e 80BD     		pop	{r7, pc}
 1296              	.L85:
 1297              		.align	2
 1298              	.L84:
 1299 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1300              		.cfi_endproc
 1301              	.LFE54:
 1302              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1303              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1304              		.align	2
 1305              		.global	CapSense_SetDebounce
 1306              		.code	16
 1307              		.thumb_func
 1308              		.type	CapSense_SetDebounce, %function
 1309              	CapSense_SetDebounce:
 1310              	.LFB55:
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 42


1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1311              		.loc 1 1024 0
 1312              		.cfi_startproc
 1313 0000 80B5     		push	{r7, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 7, -8
 1316              		.cfi_offset 14, -4
 1317 0002 82B0     		sub	sp, sp, #8
 1318              		.cfi_def_cfa_offset 16
 1319 0004 00AF     		add	r7, sp, #0
 1320              		.cfi_def_cfa_register 7
 1321 0006 7860     		str	r0, [r7, #4]
 1322 0008 0A1C     		mov	r2, r1
 1323 000a FB1C     		add	r3, r7, #3
 1324 000c 1A70     		strb	r2, [r3]
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1325              		.loc 1 1025 0
 1326 000e 044A     		ldr	r2, .L87
 1327 0010 7B68     		ldr	r3, [r7, #4]
 1328 0012 D318     		add	r3, r2, r3
 1329 0014 FA1C     		add	r2, r7, #3
 1330 0016 1278     		ldrb	r2, [r2]
 1331 0018 1A70     		strb	r2, [r3]
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1332              		.loc 1 1026 0
 1333 001a BD46     		mov	sp, r7
 1334 001c 02B0     		add	sp, sp, #8
 1335              		@ sp needed
 1336 001e 80BD     		pop	{r7, pc}
 1337              	.L88:
 1338              		.align	2
 1339              	.L87:
 1340 0020 00000000 		.word	CapSense_debounce
 1341              		.cfi_endproc
 1342              	.LFE55:
 1343              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1344              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1345              		.align	2
 1346              		.global	CapSense_SetLowBaselineReset
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	CapSense_SetLowBaselineReset, %function
 1350              	CapSense_SetLowBaselineReset:
 1351              	.LFB56:
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 43


1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1352              		.loc 1 1052 0
 1353              		.cfi_startproc
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 82B0     		sub	sp, sp, #8
 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362 0006 7860     		str	r0, [r7, #4]
 1363 0008 0A1C     		mov	r2, r1
 1364 000a FB1C     		add	r3, r7, #3
 1365 000c 1A70     		strb	r2, [r3]
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1366              		.loc 1 1053 0
 1367 000e 044A     		ldr	r2, .L90
 1368 0010 7B68     		ldr	r3, [r7, #4]
 1369 0012 D318     		add	r3, r2, r3
 1370 0014 FA1C     		add	r2, r7, #3
 1371 0016 1278     		ldrb	r2, [r2]
 1372 0018 1A70     		strb	r2, [r3]
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1373              		.loc 1 1054 0
 1374 001a BD46     		mov	sp, r7
 1375 001c 02B0     		add	sp, sp, #8
 1376              		@ sp needed
 1377 001e 80BD     		pop	{r7, pc}
 1378              	.L91:
 1379              		.align	2
 1380              	.L90:
 1381 0020 00000000 		.word	CapSense_lowBaselineReset
 1382              		.cfi_endproc
 1383              	.LFE56:
 1384              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 44


 1385              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1386              		.align	2
 1387              		.global	CapSense_CheckIsSensorActive
 1388              		.code	16
 1389              		.thumb_func
 1390              		.type	CapSense_CheckIsSensorActive, %function
 1391              	CapSense_CheckIsSensorActive:
 1392              	.LFB57:
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1393              		.loc 1 1098 0
 1394              		.cfi_startproc
 1395 0000 80B5     		push	{r7, lr}
 1396              		.cfi_def_cfa_offset 8
 1397              		.cfi_offset 7, -8
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 45


 1398              		.cfi_offset 14, -4
 1399 0002 84B0     		sub	sp, sp, #16
 1400              		.cfi_def_cfa_offset 24
 1401 0004 00AF     		add	r7, sp, #0
 1402              		.cfi_def_cfa_register 7
 1403 0006 7860     		str	r0, [r7, #4]
1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1404              		.loc 1 1108 0
 1405 0008 3B1C     		mov	r3, r7
 1406 000a 0F33     		add	r3, r3, #15
 1407 000c 4349     		ldr	r1, .L101
 1408 000e 7A68     		ldr	r2, [r7, #4]
 1409 0010 8A18     		add	r2, r1, r2
 1410 0012 1278     		ldrb	r2, [r2]
 1411 0014 1A70     		strb	r2, [r3]
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1412              		.loc 1 1110 0
 1413 0016 3B1C     		mov	r3, r7
 1414 0018 0F33     		add	r3, r3, #15
 1415 001a 1A78     		ldrb	r2, [r3]
 1416 001c 3B1C     		mov	r3, r7
 1417 001e 0E33     		add	r3, r3, #14
 1418 0020 3F49     		ldr	r1, .L101+4
 1419 0022 8A5C     		ldrb	r2, [r1, r2]
 1420 0024 1A70     		strb	r2, [r3]
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1421              		.loc 1 1111 0
 1422 0026 3B1C     		mov	r3, r7
 1423 0028 0F33     		add	r3, r3, #15
 1424 002a 1A78     		ldrb	r2, [r3]
 1425 002c 3B1C     		mov	r3, r7
 1426 002e 0D33     		add	r3, r3, #13
 1427 0030 3C49     		ldr	r1, .L101+8
 1428 0032 8A5C     		ldrb	r2, [r1, r2]
 1429 0034 1A70     		strb	r2, [r3]
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 1430              		.loc 1 1112 0
 1431 0036 3B1C     		mov	r3, r7
 1432 0038 0F33     		add	r3, r3, #15
 1433 003a 1A78     		ldrb	r2, [r3]
 1434 003c 3B1C     		mov	r3, r7
 1435 003e 0C33     		add	r3, r3, #12
 1436 0040 3949     		ldr	r1, .L101+12
 1437 0042 8A5C     		ldrb	r2, [r1, r2]
 1438 0044 1A70     		strb	r2, [r3]
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 46


 1439              		.loc 1 1114 0
 1440 0046 3B1C     		mov	r3, r7
 1441 0048 0B33     		add	r3, r3, #11
 1442 004a 3A1C     		mov	r2, r7
 1443 004c 0F32     		add	r2, r2, #15
 1444 004e 1278     		ldrb	r2, [r2]
 1445 0050 1A70     		strb	r2, [r3]
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1446              		.loc 1 1118 0
 1447 0052 364A     		ldr	r2, .L101+16
 1448 0054 7B68     		ldr	r3, [r7, #4]
 1449 0056 101C     		mov	r0, r2
 1450 0058 191C     		mov	r1, r3
 1451 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1452 005e 031C     		mov	r3, r0
 1453 0060 002B     		cmp	r3, #0
 1454 0062 1DD0     		beq	.L93
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1455              		.loc 1 1121 0
 1456 0064 324A     		ldr	r2, .L101+20
 1457 0066 7B68     		ldr	r3, [r7, #4]
 1458 0068 D318     		add	r3, r2, r3
 1459 006a 1B78     		ldrb	r3, [r3]
 1460 006c 1A1C     		mov	r2, r3
 1461 006e 3B1C     		mov	r3, r7
 1462 0070 0E33     		add	r3, r3, #14
 1463 0072 1978     		ldrb	r1, [r3]
 1464 0074 3B1C     		mov	r3, r7
 1465 0076 0D33     		add	r3, r3, #13
 1466 0078 1B78     		ldrb	r3, [r3]
 1467 007a CB1A     		sub	r3, r1, r3
 1468 007c 9A42     		cmp	r2, r3
 1469 007e 3DDA     		bge	.L95
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1470              		.loc 1 1123 0
 1471 0080 2A4A     		ldr	r2, .L101+16
 1472 0082 7B68     		ldr	r3, [r7, #4]
 1473 0084 101C     		mov	r0, r2
 1474 0086 191C     		mov	r1, r3
 1475 0088 0022     		mov	r2, #0
 1476 008a FFF7FEFF 		bl	CapSense_SetBitValue
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1477              		.loc 1 1125 0
 1478 008e 3B1C     		mov	r3, r7
 1479 0090 0B33     		add	r3, r3, #11
 1480 0092 1B78     		ldrb	r3, [r3]
 1481 0094 274A     		ldr	r2, .L101+24
 1482 0096 391C     		mov	r1, r7
 1483 0098 0C31     		add	r1, r1, #12
 1484 009a 0978     		ldrb	r1, [r1]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 47


 1485 009c D154     		strb	r1, [r2, r3]
 1486 009e 2DE0     		b	.L95
 1487              	.L93:
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1488              		.loc 1 1131 0
 1489 00a0 234A     		ldr	r2, .L101+20
 1490 00a2 7B68     		ldr	r3, [r7, #4]
 1491 00a4 D318     		add	r3, r2, r3
 1492 00a6 1B78     		ldrb	r3, [r3]
 1493 00a8 1A1C     		mov	r2, r3
 1494 00aa 3B1C     		mov	r3, r7
 1495 00ac 0E33     		add	r3, r3, #14
 1496 00ae 1978     		ldrb	r1, [r3]
 1497 00b0 3B1C     		mov	r3, r7
 1498 00b2 0D33     		add	r3, r3, #13
 1499 00b4 1B78     		ldrb	r3, [r3]
 1500 00b6 CB18     		add	r3, r1, r3
 1501 00b8 9A42     		cmp	r2, r3
 1502 00ba 17DB     		blt	.L96
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1503              		.loc 1 1133 0
 1504 00bc 3B1C     		mov	r3, r7
 1505 00be 0B33     		add	r3, r3, #11
 1506 00c0 1B78     		ldrb	r3, [r3]
 1507 00c2 1C4A     		ldr	r2, .L101+24
 1508 00c4 D25C     		ldrb	r2, [r2, r3]
 1509 00c6 013A     		sub	r2, r2, #1
 1510 00c8 D1B2     		uxtb	r1, r2
 1511 00ca 1A4A     		ldr	r2, .L101+24
 1512 00cc D154     		strb	r1, [r2, r3]
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1513              		.loc 1 1135 0
 1514 00ce 3B1C     		mov	r3, r7
 1515 00d0 0B33     		add	r3, r3, #11
 1516 00d2 1B78     		ldrb	r3, [r3]
 1517 00d4 174A     		ldr	r2, .L101+24
 1518 00d6 D35C     		ldrb	r3, [r2, r3]
 1519 00d8 002B     		cmp	r3, #0
 1520 00da 0FD1     		bne	.L95
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1521              		.loc 1 1137 0
 1522 00dc 134A     		ldr	r2, .L101+16
 1523 00de 7B68     		ldr	r3, [r7, #4]
 1524 00e0 101C     		mov	r0, r2
 1525 00e2 191C     		mov	r1, r3
 1526 00e4 0122     		mov	r2, #1
 1527 00e6 FFF7FEFF 		bl	CapSense_SetBitValue
 1528 00ea 07E0     		b	.L95
 1529              	.L96:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 48


1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1530              		.loc 1 1143 0
 1531 00ec 3B1C     		mov	r3, r7
 1532 00ee 0B33     		add	r3, r3, #11
 1533 00f0 1B78     		ldrb	r3, [r3]
 1534 00f2 104A     		ldr	r2, .L101+24
 1535 00f4 391C     		mov	r1, r7
 1536 00f6 0C31     		add	r1, r1, #12
 1537 00f8 0978     		ldrb	r1, [r1]
 1538 00fa D154     		strb	r1, [r2, r3]
 1539              	.L95:
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1540              		.loc 1 1147 0
 1541 00fc 0B4A     		ldr	r2, .L101+16
 1542 00fe 7B68     		ldr	r3, [r7, #4]
 1543 0100 101C     		mov	r0, r2
 1544 0102 191C     		mov	r1, r3
 1545 0104 FFF7FEFF 		bl	CapSense_GetBitValue
 1546 0108 031C     		mov	r3, r0
 1547 010a 002B     		cmp	r3, #0
 1548 010c 01D0     		beq	.L98
 1549              		.loc 1 1147 0 is_stmt 0 discriminator 1
 1550 010e 0123     		mov	r3, #1
 1551 0110 00E0     		b	.L99
 1552              	.L98:
 1553              		.loc 1 1147 0 discriminator 2
 1554 0112 0023     		mov	r3, #0
 1555              	.L99:
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1556              		.loc 1 1148 0 is_stmt 1 discriminator 3
 1557 0114 181C     		mov	r0, r3
 1558 0116 BD46     		mov	sp, r7
 1559 0118 04B0     		add	sp, sp, #16
 1560              		@ sp needed
 1561 011a 80BD     		pop	{r7, pc}
 1562              	.L102:
 1563              		.align	2
 1564              	.L101:
 1565 011c 00000000 		.word	CapSense_widgetNumber
 1566 0120 00000000 		.word	CapSense_fingerThreshold
 1567 0124 00000000 		.word	CapSense_hysteresis
 1568 0128 00000000 		.word	CapSense_debounce
 1569 012c 00000000 		.word	CapSense_sensorOnMask
 1570 0130 00000000 		.word	CapSense_sensorSignal
 1571 0134 10000000 		.word	CapSense_debounceCounter
 1572              		.cfi_endproc
 1573              	.LFE57:
 1574              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1575              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 49


 1576              		.align	2
 1577              		.global	CapSense_CheckIsWidgetActive
 1578              		.code	16
 1579              		.thumb_func
 1580              		.type	CapSense_CheckIsWidgetActive, %function
 1581              	CapSense_CheckIsWidgetActive:
 1582              	.LFB58:
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1583              		.loc 1 1180 0
 1584              		.cfi_startproc
 1585 0000 80B5     		push	{r7, lr}
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 86B0     		sub	sp, sp, #24
 1590              		.cfi_def_cfa_offset 32
 1591 0004 00AF     		add	r7, sp, #0
 1592              		.cfi_def_cfa_register 7
 1593 0006 7860     		str	r0, [r7, #4]
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1594              		.loc 1 1181 0
 1595 0008 0023     		mov	r3, #0
 1596 000a 7B61     		str	r3, [r7, #20]
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1597              		.loc 1 1182 0
 1598 000c 0123     		mov	r3, #1
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 50


 1599 000e 1A1C     		mov	r2, r3
 1600 0010 7B69     		ldr	r3, [r7, #20]
 1601 0012 D318     		add	r3, r2, r3
 1602 0014 FB60     		str	r3, [r7, #12]
1183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1603              		.loc 1 1183 0
 1604 0016 0023     		mov	r3, #0
 1605 0018 3B61     		str	r3, [r7, #16]
 1606              	.L105:
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1607              		.loc 1 1188 0
 1608 001a 7B69     		ldr	r3, [r7, #20]
 1609 001c 181C     		mov	r0, r3
 1610 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1611 0022 031C     		mov	r3, r0
 1612 0024 002B     		cmp	r3, #0
 1613 0026 01D0     		beq	.L104
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1614              		.loc 1 1190 0
 1615 0028 0123     		mov	r3, #1
 1616 002a 3B61     		str	r3, [r7, #16]
 1617              	.L104:
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1618              		.loc 1 1192 0
 1619 002c 7B69     		ldr	r3, [r7, #20]
 1620 002e 0133     		add	r3, r3, #1
 1621 0030 7B61     		str	r3, [r7, #20]
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1622              		.loc 1 1194 0
 1623 0032 7A69     		ldr	r2, [r7, #20]
 1624 0034 FB68     		ldr	r3, [r7, #12]
 1625 0036 9A42     		cmp	r2, r3
 1626 0038 EFD3     		bcc	.L105
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1627              		.loc 1 1198 0
 1628 003a 3B69     		ldr	r3, [r7, #16]
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1629              		.loc 1 1199 0
 1630 003c 181C     		mov	r0, r3
 1631 003e BD46     		mov	sp, r7
 1632 0040 06B0     		add	sp, sp, #24
 1633              		@ sp needed
 1634 0042 80BD     		pop	{r7, pc}
 1635              		.cfi_endproc
 1636              	.LFE58:
 1637              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1638              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 51


 1639              		.align	2
 1640              		.global	CapSense_CheckIsAnyWidgetActive
 1641              		.code	16
 1642              		.thumb_func
 1643              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1644              	CapSense_CheckIsAnyWidgetActive:
 1645              	.LFB59:
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1646              		.loc 1 1226 0
 1647              		.cfi_startproc
 1648 0000 80B5     		push	{r7, lr}
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 7, -8
 1651              		.cfi_offset 14, -4
 1652 0002 82B0     		sub	sp, sp, #8
 1653              		.cfi_def_cfa_offset 16
 1654 0004 00AF     		add	r7, sp, #0
 1655              		.cfi_def_cfa_register 7
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1656              		.loc 1 1229 0
 1657 0006 0023     		mov	r3, #0
 1658 0008 3B60     		str	r3, [r7]
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1659              		.loc 1 1231 0
 1660 000a 0023     		mov	r3, #0
 1661 000c 7B60     		str	r3, [r7, #4]
 1662 000e 0BE0     		b	.L108
 1663              	.L110:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 52


1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1664              		.loc 1 1233 0
 1665 0010 7B68     		ldr	r3, [r7, #4]
 1666 0012 181C     		mov	r0, r3
 1667 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1668 0018 031C     		mov	r3, r0
 1669 001a 002B     		cmp	r3, #0
 1670 001c 01D0     		beq	.L109
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1671              		.loc 1 1235 0
 1672 001e 0123     		mov	r3, #1
 1673 0020 3B60     		str	r3, [r7]
 1674              	.L109:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1675              		.loc 1 1231 0
 1676 0022 7B68     		ldr	r3, [r7, #4]
 1677 0024 0133     		add	r3, r3, #1
 1678 0026 7B60     		str	r3, [r7, #4]
 1679              	.L108:
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1680              		.loc 1 1231 0 is_stmt 0 discriminator 1
 1681 0028 7B68     		ldr	r3, [r7, #4]
 1682 002a 002B     		cmp	r3, #0
 1683 002c F0D0     		beq	.L110
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1684              		.loc 1 1241 0 is_stmt 1
 1685 002e 3B68     		ldr	r3, [r7]
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1686              		.loc 1 1242 0
 1687 0030 181C     		mov	r0, r3
 1688 0032 BD46     		mov	sp, r7
 1689 0034 02B0     		add	sp, sp, #8
 1690              		@ sp needed
 1691 0036 80BD     		pop	{r7, pc}
 1692              		.cfi_endproc
 1693              	.LFE59:
 1694              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1695              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1696              		.align	2
 1697              		.global	CapSense_EnableWidget
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	CapSense_EnableWidget, %function
 1701              	CapSense_EnableWidget:
 1702              	.LFB60:
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 53


1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1703              		.loc 1 1273 0
 1704              		.cfi_startproc
 1705 0000 80B5     		push	{r7, lr}
 1706              		.cfi_def_cfa_offset 8
 1707              		.cfi_offset 7, -8
 1708              		.cfi_offset 14, -4
 1709 0002 84B0     		sub	sp, sp, #16
 1710              		.cfi_def_cfa_offset 24
 1711 0004 00AF     		add	r7, sp, #0
 1712              		.cfi_def_cfa_register 7
 1713 0006 7860     		str	r0, [r7, #4]
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1714              		.loc 1 1275 0
 1715 0008 3B1C     		mov	r3, r7
 1716 000a 0F33     		add	r3, r3, #15
 1717 000c 0022     		mov	r2, #0
 1718 000e 1A70     		strb	r2, [r3]
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1719              		.loc 1 1276 0
 1720 0010 0121     		mov	r1, #1
 1721 0012 3B1C     		mov	r3, r7
 1722 0014 0E33     		add	r3, r3, #14
 1723 0016 3A1C     		mov	r2, r7
 1724 0018 0F32     		add	r2, r2, #15
 1725 001a 1278     		ldrb	r2, [r2]
 1726 001c 8A18     		add	r2, r1, r2
 1727 001e 1A70     		strb	r2, [r3]
 1728              	.L113:
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 54


1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1729              		.loc 1 1281 0 discriminator 1
 1730 0020 3B1C     		mov	r3, r7
 1731 0022 0F33     		add	r3, r3, #15
 1732 0024 1B78     		ldrb	r3, [r3]
 1733 0026 0C4A     		ldr	r2, .L114
 1734 0028 101C     		mov	r0, r2
 1735 002a 191C     		mov	r1, r3
 1736 002c 0122     		mov	r2, #1
 1737 002e FFF7FEFF 		bl	CapSense_SetBitValue
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1738              		.loc 1 1282 0 discriminator 1
 1739 0032 3B1C     		mov	r3, r7
 1740 0034 0F33     		add	r3, r3, #15
 1741 0036 1A78     		ldrb	r2, [r3]
 1742 0038 3B1C     		mov	r3, r7
 1743 003a 0F33     		add	r3, r3, #15
 1744 003c 0132     		add	r2, r2, #1
 1745 003e 1A70     		strb	r2, [r3]
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1746              		.loc 1 1284 0 discriminator 1
 1747 0040 3A1C     		mov	r2, r7
 1748 0042 0F32     		add	r2, r2, #15
 1749 0044 3B1C     		mov	r3, r7
 1750 0046 0E33     		add	r3, r3, #14
 1751 0048 1278     		ldrb	r2, [r2]
 1752 004a 1B78     		ldrb	r3, [r3]
 1753 004c 9A42     		cmp	r2, r3
 1754 004e E7D3     		bcc	.L113
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1755              		.loc 1 1285 0
 1756 0050 BD46     		mov	sp, r7
 1757 0052 04B0     		add	sp, sp, #16
 1758              		@ sp needed
 1759 0054 80BD     		pop	{r7, pc}
 1760              	.L115:
 1761 0056 C046     		.align	2
 1762              	.L114:
 1763 0058 00000000 		.word	CapSense_sensorEnableMask
 1764              		.cfi_endproc
 1765              	.LFE60:
 1766              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1767              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1768              		.align	2
 1769              		.global	CapSense_DisableWidget
 1770              		.code	16
 1771              		.thumb_func
 1772              		.type	CapSense_DisableWidget, %function
 1773              	CapSense_DisableWidget:
 1774              	.LFB61:
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 55


1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1775              		.loc 1 1316 0
 1776              		.cfi_startproc
 1777 0000 80B5     		push	{r7, lr}
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 7, -8
 1780              		.cfi_offset 14, -4
 1781 0002 84B0     		sub	sp, sp, #16
 1782              		.cfi_def_cfa_offset 24
 1783 0004 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
 1785 0006 7860     		str	r0, [r7, #4]
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1786              		.loc 1 1317 0
 1787 0008 3B1C     		mov	r3, r7
 1788 000a 0F33     		add	r3, r3, #15
 1789 000c 0022     		mov	r2, #0
 1790 000e 1A70     		strb	r2, [r3]
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1791              		.loc 1 1318 0
 1792 0010 0121     		mov	r1, #1
 1793 0012 3B1C     		mov	r3, r7
 1794 0014 0E33     		add	r3, r3, #14
 1795 0016 3A1C     		mov	r2, r7
 1796 0018 0F32     		add	r2, r2, #15
 1797 001a 1278     		ldrb	r2, [r2]
 1798 001c 8A18     		add	r2, r1, r2
 1799 001e 1A70     		strb	r2, [r3]
 1800              	.L117:
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 56


1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1801              		.loc 1 1324 0 discriminator 1
 1802 0020 3B1C     		mov	r3, r7
 1803 0022 0F33     		add	r3, r3, #15
 1804 0024 1B78     		ldrb	r3, [r3]
 1805 0026 0C4A     		ldr	r2, .L118
 1806 0028 101C     		mov	r0, r2
 1807 002a 191C     		mov	r1, r3
 1808 002c 0022     		mov	r2, #0
 1809 002e FFF7FEFF 		bl	CapSense_SetBitValue
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1810              		.loc 1 1325 0 discriminator 1
 1811 0032 3B1C     		mov	r3, r7
 1812 0034 0F33     		add	r3, r3, #15
 1813 0036 1A78     		ldrb	r2, [r3]
 1814 0038 3B1C     		mov	r3, r7
 1815 003a 0F33     		add	r3, r3, #15
 1816 003c 0132     		add	r2, r2, #1
 1817 003e 1A70     		strb	r2, [r3]
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1818              		.loc 1 1327 0 discriminator 1
 1819 0040 3A1C     		mov	r2, r7
 1820 0042 0F32     		add	r2, r2, #15
 1821 0044 3B1C     		mov	r3, r7
 1822 0046 0E33     		add	r3, r3, #14
 1823 0048 1278     		ldrb	r2, [r2]
 1824 004a 1B78     		ldrb	r3, [r3]
 1825 004c 9A42     		cmp	r2, r3
 1826 004e E7D3     		bcc	.L117
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1827              		.loc 1 1328 0
 1828 0050 BD46     		mov	sp, r7
 1829 0052 04B0     		add	sp, sp, #16
 1830              		@ sp needed
 1831 0054 80BD     		pop	{r7, pc}
 1832              	.L119:
 1833 0056 C046     		.align	2
 1834              	.L118:
 1835 0058 00000000 		.word	CapSense_sensorEnableMask
 1836              		.cfi_endproc
 1837              	.LFE61:
 1838              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1839              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1840              		.align	2
 1841              		.global	CapSense_MedianFilter
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	CapSense_MedianFilter, %function
 1845              	CapSense_MedianFilter:
 1846              	.LFB62:
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 57


1332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 58


1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 59


1446:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 60


1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 61


1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 62


1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 63


1674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 64


1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 65


1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 66


1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1897:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 67


1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1954:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 68


1959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 69


2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found?? */
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 70


2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 71


2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 72


2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 73


2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 74


2301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 75


2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1847              		.loc 1 2368 0
 1848              		.cfi_startproc
 1849 0000 80B5     		push	{r7, lr}
 1850              		.cfi_def_cfa_offset 8
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
 1853 0002 84B0     		sub	sp, sp, #16
 1854              		.cfi_def_cfa_offset 24
 1855 0004 00AF     		add	r7, sp, #0
 1856              		.cfi_def_cfa_register 7
 1857 0006 BB1D     		add	r3, r7, #6
 1858 0008 1880     		strh	r0, [r3]
 1859 000a 3B1D     		add	r3, r7, #4
 1860 000c 1980     		strh	r1, [r3]
 1861 000e BB1C     		add	r3, r7, #2
 1862 0010 1A80     		strh	r2, [r3]
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1863              		.loc 1 2371 0
 1864 0012 BA1D     		add	r2, r7, #6
 1865 0014 3B1D     		add	r3, r7, #4
 1866 0016 1288     		ldrh	r2, [r2]
 1867 0018 1B88     		ldrh	r3, [r3]
 1868 001a 9A42     		cmp	r2, r3
 1869 001c 0DD9     		bls	.L121
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1870              		.loc 1 2373 0
 1871 001e 3B1C     		mov	r3, r7
 1872 0020 0E33     		add	r3, r3, #14
 1873 0022 3A1D     		add	r2, r7, #4
 1874 0024 1288     		ldrh	r2, [r2]
 1875 0026 1A80     		strh	r2, [r3]
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1876              		.loc 1 2374 0
 1877 0028 3B1D     		add	r3, r7, #4
 1878 002a BA1D     		add	r2, r7, #6
 1879 002c 1288     		ldrh	r2, [r2]
 1880 002e 1A80     		strh	r2, [r3]
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1881              		.loc 1 2375 0
 1882 0030 BB1D     		add	r3, r7, #6
 1883 0032 3A1C     		mov	r2, r7
 1884 0034 0E32     		add	r2, r2, #14
 1885 0036 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 76


 1886 0038 1A80     		strh	r2, [r3]
 1887              	.L121:
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1888              		.loc 1 2378 0
 1889 003a 3A1D     		add	r2, r7, #4
 1890 003c BB1C     		add	r3, r7, #2
 1891 003e 1288     		ldrh	r2, [r2]
 1892 0040 1B88     		ldrh	r3, [r3]
 1893 0042 9A42     		cmp	r2, r3
 1894 0044 03D9     		bls	.L122
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1895              		.loc 1 2380 0
 1896 0046 3B1D     		add	r3, r7, #4
 1897 0048 BA1C     		add	r2, r7, #2
 1898 004a 1288     		ldrh	r2, [r2]
 1899 004c 1A80     		strh	r2, [r3]
 1900              	.L122:
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1901              		.loc 1 2383 0
 1902 004e 3B1D     		add	r3, r7, #4
 1903 0050 BA1D     		add	r2, r7, #6
 1904 0052 1288     		ldrh	r2, [r2]
 1905 0054 1B88     		ldrh	r3, [r3]
 1906 0056 98B2     		uxth	r0, r3
 1907 0058 91B2     		uxth	r1, r2
 1908 005a 8842     		cmp	r0, r1
 1909 005c 00D2     		bcs	.L123
 1910 005e 131C     		add	r3, r2, #0
 1911              	.L123:
 1912 0060 9BB2     		uxth	r3, r3
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1913              		.loc 1 2384 0
 1914 0062 181C     		mov	r0, r3
 1915 0064 BD46     		mov	sp, r7
 1916 0066 04B0     		add	sp, sp, #16
 1917              		@ sp needed
 1918 0068 80BD     		pop	{r7, pc}
 1919              		.cfi_endproc
 1920              	.LFE62:
 1921              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1922 006a C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1923              		.align	2
 1924              		.global	CapSense_IIR4Filter
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	CapSense_IIR4Filter, %function
 1928              	CapSense_IIR4Filter:
 1929              	.LFB63:
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 77


2389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2441:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 78


2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1930              		.loc 1 2488 0
 1931              		.cfi_startproc
 1932 0000 80B5     		push	{r7, lr}
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 7, -8
 1935              		.cfi_offset 14, -4
 1936 0002 84B0     		sub	sp, sp, #16
 1937              		.cfi_def_cfa_offset 24
 1938 0004 00AF     		add	r7, sp, #0
 1939              		.cfi_def_cfa_register 7
 1940 0006 0A1C     		mov	r2, r1
 1941 0008 BB1D     		add	r3, r7, #6
 1942 000a 011C     		add	r1, r0, #0
 1943 000c 1980     		strh	r1, [r3]
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 79


 1944 000e 3B1D     		add	r3, r7, #4
 1945 0010 1A80     		strh	r2, [r3]
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1946              		.loc 1 2492 0
 1947 0012 BB1D     		add	r3, r7, #6
 1948 0014 1A88     		ldrh	r2, [r3]
 1949 0016 3B1D     		add	r3, r7, #4
 1950 0018 1B88     		ldrh	r3, [r3]
 1951 001a D318     		add	r3, r2, r3
 1952 001c FB60     		str	r3, [r7, #12]
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1953              		.loc 1 2493 0
 1954 001e 3B1D     		add	r3, r7, #4
 1955 0020 1B88     		ldrh	r3, [r3]
 1956 0022 5B00     		lsl	r3, r3, #1
 1957 0024 FA68     		ldr	r2, [r7, #12]
 1958 0026 D318     		add	r3, r2, r3
 1959 0028 FB60     		str	r3, [r7, #12]
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1960              		.loc 1 2494 0
 1961 002a FB68     		ldr	r3, [r7, #12]
 1962 002c 9B08     		lsr	r3, r3, #2
 1963 002e FB60     		str	r3, [r7, #12]
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1964              		.loc 1 2496 0
 1965 0030 FB68     		ldr	r3, [r7, #12]
 1966 0032 9BB2     		uxth	r3, r3
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1967              		.loc 1 2497 0
 1968 0034 181C     		mov	r0, r3
 1969 0036 BD46     		mov	sp, r7
 1970 0038 04B0     		add	sp, sp, #16
 1971              		@ sp needed
 1972 003a 80BD     		pop	{r7, pc}
 1973              		.cfi_endproc
 1974              	.LFE63:
 1975              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1976              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1977              		.align	2
 1978              		.global	CapSense_GetWidgetNumber
 1979              		.code	16
 1980              		.thumb_func
 1981              		.type	CapSense_GetWidgetNumber, %function
 1982              	CapSense_GetWidgetNumber:
 1983              	.LFB64:
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2501:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 80


2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 81


2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 82


2620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 83


2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1984              		.loc 1 2721 0
 1985              		.cfi_startproc
 1986 0000 80B5     		push	{r7, lr}
 1987              		.cfi_def_cfa_offset 8
 1988              		.cfi_offset 7, -8
 1989              		.cfi_offset 14, -4
 1990 0002 82B0     		sub	sp, sp, #8
 1991              		.cfi_def_cfa_offset 16
 1992 0004 00AF     		add	r7, sp, #0
 1993              		.cfi_def_cfa_register 7
 1994 0006 7860     		str	r0, [r7, #4]
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 84


 1995              		.loc 1 2722 0
 1996 0008 034A     		ldr	r2, .L129
 1997 000a 7B68     		ldr	r3, [r7, #4]
 1998 000c D318     		add	r3, r2, r3
 1999 000e 1B78     		ldrb	r3, [r3]
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2000              		.loc 1 2723 0
 2001 0010 181C     		mov	r0, r3
 2002 0012 BD46     		mov	sp, r7
 2003 0014 02B0     		add	sp, sp, #8
 2004              		@ sp needed
 2005 0016 80BD     		pop	{r7, pc}
 2006              	.L130:
 2007              		.align	2
 2008              	.L129:
 2009 0018 00000000 		.word	CapSense_widgetNumber
 2010              		.cfi_endproc
 2011              	.LFE64:
 2012              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2013              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2014              		.align	2
 2015              		.global	CapSense_GetLowBaselineReset
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CapSense_GetLowBaselineReset, %function
 2019              	CapSense_GetLowBaselineReset:
 2020              	.LFB65:
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2021              		.loc 1 2747 0
 2022              		.cfi_startproc
 2023 0000 80B5     		push	{r7, lr}
 2024              		.cfi_def_cfa_offset 8
 2025              		.cfi_offset 7, -8
 2026              		.cfi_offset 14, -4
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 85


 2027 0002 82B0     		sub	sp, sp, #8
 2028              		.cfi_def_cfa_offset 16
 2029 0004 00AF     		add	r7, sp, #0
 2030              		.cfi_def_cfa_register 7
 2031 0006 7860     		str	r0, [r7, #4]
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2032              		.loc 1 2748 0
 2033 0008 034A     		ldr	r2, .L133
 2034 000a 7B68     		ldr	r3, [r7, #4]
 2035 000c D318     		add	r3, r2, r3
 2036 000e 1B78     		ldrb	r3, [r3]
2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2037              		.loc 1 2749 0
 2038 0010 181C     		mov	r0, r3
 2039 0012 BD46     		mov	sp, r7
 2040 0014 02B0     		add	sp, sp, #8
 2041              		@ sp needed
 2042 0016 80BD     		pop	{r7, pc}
 2043              	.L134:
 2044              		.align	2
 2045              	.L133:
 2046 0018 00000000 		.word	CapSense_lowBaselineReset
 2047              		.cfi_endproc
 2048              	.LFE65:
 2049              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2050              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2051              		.align	2
 2052              		.global	CapSense_GetDebounce
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	CapSense_GetDebounce, %function
 2056              	CapSense_GetDebounce:
 2057              	.LFB66:
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 86


 2058              		.loc 1 2773 0
 2059              		.cfi_startproc
 2060 0000 80B5     		push	{r7, lr}
 2061              		.cfi_def_cfa_offset 8
 2062              		.cfi_offset 7, -8
 2063              		.cfi_offset 14, -4
 2064 0002 82B0     		sub	sp, sp, #8
 2065              		.cfi_def_cfa_offset 16
 2066 0004 00AF     		add	r7, sp, #0
 2067              		.cfi_def_cfa_register 7
 2068 0006 7860     		str	r0, [r7, #4]
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2069              		.loc 1 2774 0
 2070 0008 034A     		ldr	r2, .L137
 2071 000a 7B68     		ldr	r3, [r7, #4]
 2072 000c D318     		add	r3, r2, r3
 2073 000e 1B78     		ldrb	r3, [r3]
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2074              		.loc 1 2775 0
 2075 0010 181C     		mov	r0, r3
 2076 0012 BD46     		mov	sp, r7
 2077 0014 02B0     		add	sp, sp, #8
 2078              		@ sp needed
 2079 0016 80BD     		pop	{r7, pc}
 2080              	.L138:
 2081              		.align	2
 2082              	.L137:
 2083 0018 00000000 		.word	CapSense_debounce
 2084              		.cfi_endproc
 2085              	.LFE66:
 2086              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2087              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2088              		.align	2
 2089              		.global	CapSense_EnableRawDataFilters
 2090              		.code	16
 2091              		.thumb_func
 2092              		.type	CapSense_EnableRawDataFilters, %function
 2093              	CapSense_EnableRawDataFilters:
 2094              	.LFB67:
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 87


2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2095              		.loc 1 2799 0
 2096              		.cfi_startproc
 2097 0000 80B5     		push	{r7, lr}
 2098              		.cfi_def_cfa_offset 8
 2099              		.cfi_offset 7, -8
 2100              		.cfi_offset 14, -4
 2101 0002 00AF     		add	r7, sp, #0
 2102              		.cfi_def_cfa_register 7
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2103              		.loc 1 2800 0
 2104 0004 024B     		ldr	r3, .L140
 2105 0006 0122     		mov	r2, #1
 2106 0008 1A70     		strb	r2, [r3]
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2107              		.loc 1 2801 0
 2108 000a BD46     		mov	sp, r7
 2109              		@ sp needed
 2110 000c 80BD     		pop	{r7, pc}
 2111              	.L141:
 2112 000e C046     		.align	2
 2113              	.L140:
 2114 0010 00000000 		.word	CapSense_enableRawFilters
 2115              		.cfi_endproc
 2116              	.LFE67:
 2117              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2118              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2119              		.align	2
 2120              		.global	CapSense_DisableRawDataFilters
 2121              		.code	16
 2122              		.thumb_func
 2123              		.type	CapSense_DisableRawDataFilters, %function
 2124              	CapSense_DisableRawDataFilters:
 2125              	.LFB68:
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 88


2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2126              		.loc 1 2824 0
 2127              		.cfi_startproc
 2128 0000 80B5     		push	{r7, lr}
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 7, -8
 2131              		.cfi_offset 14, -4
 2132 0002 00AF     		add	r7, sp, #0
 2133              		.cfi_def_cfa_register 7
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2134              		.loc 1 2825 0
 2135 0004 024B     		ldr	r3, .L143
 2136 0006 0022     		mov	r2, #0
 2137 0008 1A70     		strb	r2, [r3]
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2138              		.loc 1 2826 0
 2139 000a BD46     		mov	sp, r7
 2140              		@ sp needed
 2141 000c 80BD     		pop	{r7, pc}
 2142              	.L144:
 2143 000e C046     		.align	2
 2144              	.L143:
 2145 0010 00000000 		.word	CapSense_enableRawFilters
 2146              		.cfi_endproc
 2147              	.LFE68:
 2148              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2149              		.text
 2150              	.Letext0:
 2151              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2152              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2153              		.section	.debug_info,"",%progbits
 2154              	.Ldebug_info0:
 2155 0000 130B0000 		.4byte	0xb13
 2156 0004 0400     		.2byte	0x4
 2157 0006 00000000 		.4byte	.Ldebug_abbrev0
 2158 000a 04       		.byte	0x4
 2159 000b 01       		.uleb128 0x1
 2160 000c F7050000 		.4byte	.LASF112
 2161 0010 01       		.byte	0x1
 2162 0011 3E040000 		.4byte	.LASF113
 2163 0015 EB080000 		.4byte	.LASF114
 2164 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2165 001d 00000000 		.4byte	0
 2166 0021 00000000 		.4byte	.Ldebug_line0
 2167 0025 02       		.uleb128 0x2
 2168 0026 01       		.byte	0x1
 2169 0027 06       		.byte	0x6
 2170 0028 C1010000 		.4byte	.LASF0
 2171 002c 02       		.uleb128 0x2
 2172 002d 01       		.byte	0x1
 2173 002e 08       		.byte	0x8
 2174 002f 90060000 		.4byte	.LASF1
 2175 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 89


 2176 0034 02       		.byte	0x2
 2177 0035 05       		.byte	0x5
 2178 0036 F7060000 		.4byte	.LASF2
 2179 003a 02       		.uleb128 0x2
 2180 003b 02       		.byte	0x2
 2181 003c 07       		.byte	0x7
 2182 003d B2030000 		.4byte	.LASF3
 2183 0041 02       		.uleb128 0x2
 2184 0042 04       		.byte	0x4
 2185 0043 05       		.byte	0x5
 2186 0044 2D020000 		.4byte	.LASF4
 2187 0048 02       		.uleb128 0x2
 2188 0049 04       		.byte	0x4
 2189 004a 07       		.byte	0x7
 2190 004b 50030000 		.4byte	.LASF5
 2191 004f 02       		.uleb128 0x2
 2192 0050 08       		.byte	0x8
 2193 0051 05       		.byte	0x5
 2194 0052 B3010000 		.4byte	.LASF6
 2195 0056 02       		.uleb128 0x2
 2196 0057 08       		.byte	0x8
 2197 0058 07       		.byte	0x7
 2198 0059 27010000 		.4byte	.LASF7
 2199 005d 03       		.uleb128 0x3
 2200 005e 04       		.byte	0x4
 2201 005f 05       		.byte	0x5
 2202 0060 696E7400 		.ascii	"int\000"
 2203 0064 02       		.uleb128 0x2
 2204 0065 04       		.byte	0x4
 2205 0066 07       		.byte	0x7
 2206 0067 43030000 		.4byte	.LASF8
 2207 006b 04       		.uleb128 0x4
 2208 006c 56020000 		.4byte	.LASF9
 2209 0070 02       		.byte	0x2
 2210 0071 A1       		.byte	0xa1
 2211 0072 2C000000 		.4byte	0x2c
 2212 0076 04       		.uleb128 0x4
 2213 0077 00000000 		.4byte	.LASF10
 2214 007b 02       		.byte	0x2
 2215 007c A2       		.byte	0xa2
 2216 007d 3A000000 		.4byte	0x3a
 2217 0081 04       		.uleb128 0x4
 2218 0082 B2020000 		.4byte	.LASF11
 2219 0086 02       		.byte	0x2
 2220 0087 A3       		.byte	0xa3
 2221 0088 48000000 		.4byte	0x48
 2222 008c 02       		.uleb128 0x2
 2223 008d 04       		.byte	0x4
 2224 008e 04       		.byte	0x4
 2225 008f D4050000 		.4byte	.LASF12
 2226 0093 02       		.uleb128 0x2
 2227 0094 08       		.byte	0x8
 2228 0095 04       		.byte	0x4
 2229 0096 95020000 		.4byte	.LASF13
 2230 009a 02       		.uleb128 0x2
 2231 009b 01       		.byte	0x1
 2232 009c 08       		.byte	0x8
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 90


 2233 009d 95070000 		.4byte	.LASF14
 2234 00a1 02       		.uleb128 0x2
 2235 00a2 04       		.byte	0x4
 2236 00a3 07       		.byte	0x7
 2237 00a4 A1040000 		.4byte	.LASF15
 2238 00a8 05       		.uleb128 0x5
 2239 00a9 38       		.byte	0x38
 2240 00aa 03       		.byte	0x3
 2241 00ab 2F       		.byte	0x2f
 2242 00ac 59010000 		.4byte	0x159
 2243 00b0 06       		.uleb128 0x6
 2244 00b1 3F050000 		.4byte	.LASF16
 2245 00b5 03       		.byte	0x3
 2246 00b6 31       		.byte	0x31
 2247 00b7 59010000 		.4byte	0x159
 2248 00bb 00       		.byte	0
 2249 00bc 06       		.uleb128 0x6
 2250 00bd 4E050000 		.4byte	.LASF17
 2251 00c1 03       		.byte	0x3
 2252 00c2 32       		.byte	0x32
 2253 00c3 59010000 		.4byte	0x159
 2254 00c7 04       		.byte	0x4
 2255 00c8 06       		.uleb128 0x6
 2256 00c9 C5030000 		.4byte	.LASF18
 2257 00cd 03       		.byte	0x3
 2258 00ce 33       		.byte	0x33
 2259 00cf 59010000 		.4byte	0x159
 2260 00d3 08       		.byte	0x8
 2261 00d4 06       		.uleb128 0x6
 2262 00d5 31040000 		.4byte	.LASF19
 2263 00d9 03       		.byte	0x3
 2264 00da 34       		.byte	0x34
 2265 00db 59010000 		.4byte	0x159
 2266 00df 0C       		.byte	0xc
 2267 00e0 06       		.uleb128 0x6
 2268 00e1 08070000 		.4byte	.LASF20
 2269 00e5 03       		.byte	0x3
 2270 00e6 35       		.byte	0x35
 2271 00e7 59010000 		.4byte	0x159
 2272 00eb 10       		.byte	0x10
 2273 00ec 06       		.uleb128 0x6
 2274 00ed FD010000 		.4byte	.LASF21
 2275 00f1 03       		.byte	0x3
 2276 00f2 36       		.byte	0x36
 2277 00f3 5F010000 		.4byte	0x15f
 2278 00f7 14       		.byte	0x14
 2279 00f8 06       		.uleb128 0x6
 2280 00f9 7D030000 		.4byte	.LASF22
 2281 00fd 03       		.byte	0x3
 2282 00fe 37       		.byte	0x37
 2283 00ff 6A010000 		.4byte	0x16a
 2284 0103 18       		.byte	0x18
 2285 0104 06       		.uleb128 0x6
 2286 0105 D6080000 		.4byte	.LASF23
 2287 0109 03       		.byte	0x3
 2288 010a 38       		.byte	0x38
 2289 010b 5F010000 		.4byte	0x15f
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 91


 2290 010f 1C       		.byte	0x1c
 2291 0110 06       		.uleb128 0x6
 2292 0111 ED010000 		.4byte	.LASF24
 2293 0115 03       		.byte	0x3
 2294 0116 39       		.byte	0x39
 2295 0117 5F010000 		.4byte	0x15f
 2296 011b 20       		.byte	0x20
 2297 011c 06       		.uleb128 0x6
 2298 011d CB000000 		.4byte	.LASF25
 2299 0121 03       		.byte	0x3
 2300 0122 3A       		.byte	0x3a
 2301 0123 7F010000 		.4byte	0x17f
 2302 0127 24       		.byte	0x24
 2303 0128 06       		.uleb128 0x6
 2304 0129 07080000 		.4byte	.LASF26
 2305 012d 03       		.byte	0x3
 2306 012e 3B       		.byte	0x3b
 2307 012f 90010000 		.4byte	0x190
 2308 0133 28       		.byte	0x28
 2309 0134 06       		.uleb128 0x6
 2310 0135 BE060000 		.4byte	.LASF27
 2311 0139 03       		.byte	0x3
 2312 013a 3C       		.byte	0x3c
 2313 013b 7F010000 		.4byte	0x17f
 2314 013f 2C       		.byte	0x2c
 2315 0140 06       		.uleb128 0x6
 2316 0141 8C030000 		.4byte	.LASF28
 2317 0145 03       		.byte	0x3
 2318 0146 3D       		.byte	0x3d
 2319 0147 AA010000 		.4byte	0x1aa
 2320 014b 30       		.byte	0x30
 2321 014c 06       		.uleb128 0x6
 2322 014d 63080000 		.4byte	.LASF29
 2323 0151 03       		.byte	0x3
 2324 0152 3E       		.byte	0x3e
 2325 0153 C5010000 		.4byte	0x1c5
 2326 0157 34       		.byte	0x34
 2327 0158 00       		.byte	0
 2328 0159 07       		.uleb128 0x7
 2329 015a 04       		.byte	0x4
 2330 015b 6B000000 		.4byte	0x6b
 2331 015f 07       		.uleb128 0x7
 2332 0160 04       		.byte	0x4
 2333 0161 65010000 		.4byte	0x165
 2334 0165 08       		.uleb128 0x8
 2335 0166 6B000000 		.4byte	0x6b
 2336 016a 07       		.uleb128 0x7
 2337 016b 04       		.byte	0x4
 2338 016c 81000000 		.4byte	0x81
 2339 0170 09       		.uleb128 0x9
 2340 0171 76000000 		.4byte	0x76
 2341 0175 7F010000 		.4byte	0x17f
 2342 0179 0A       		.uleb128 0xa
 2343 017a 81000000 		.4byte	0x81
 2344 017e 00       		.byte	0
 2345 017f 07       		.uleb128 0x7
 2346 0180 04       		.byte	0x4
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 92


 2347 0181 70010000 		.4byte	0x170
 2348 0185 0B       		.uleb128 0xb
 2349 0186 90010000 		.4byte	0x190
 2350 018a 0A       		.uleb128 0xa
 2351 018b 81000000 		.4byte	0x81
 2352 018f 00       		.byte	0
 2353 0190 07       		.uleb128 0x7
 2354 0191 04       		.byte	0x4
 2355 0192 85010000 		.4byte	0x185
 2356 0196 09       		.uleb128 0x9
 2357 0197 81000000 		.4byte	0x81
 2358 019b AA010000 		.4byte	0x1aa
 2359 019f 0A       		.uleb128 0xa
 2360 01a0 5F010000 		.4byte	0x15f
 2361 01a4 0A       		.uleb128 0xa
 2362 01a5 81000000 		.4byte	0x81
 2363 01a9 00       		.byte	0
 2364 01aa 07       		.uleb128 0x7
 2365 01ab 04       		.byte	0x4
 2366 01ac 96010000 		.4byte	0x196
 2367 01b0 0B       		.uleb128 0xb
 2368 01b1 C5010000 		.4byte	0x1c5
 2369 01b5 0A       		.uleb128 0xa
 2370 01b6 59010000 		.4byte	0x159
 2371 01ba 0A       		.uleb128 0xa
 2372 01bb 81000000 		.4byte	0x81
 2373 01bf 0A       		.uleb128 0xa
 2374 01c0 81000000 		.4byte	0x81
 2375 01c4 00       		.byte	0
 2376 01c5 07       		.uleb128 0x7
 2377 01c6 04       		.byte	0x4
 2378 01c7 B0010000 		.4byte	0x1b0
 2379 01cb 04       		.uleb128 0x4
 2380 01cc D5000000 		.4byte	.LASF30
 2381 01d0 03       		.byte	0x3
 2382 01d1 3F       		.byte	0x3f
 2383 01d2 A8000000 		.4byte	0xa8
 2384 01d6 05       		.uleb128 0x5
 2385 01d7 0C       		.byte	0xc
 2386 01d8 03       		.byte	0x3
 2387 01d9 41       		.byte	0x41
 2388 01da 27020000 		.4byte	0x227
 2389 01de 06       		.uleb128 0x6
 2390 01df 24080000 		.4byte	.LASF31
 2391 01e3 03       		.byte	0x3
 2392 01e4 43       		.byte	0x43
 2393 01e5 6B000000 		.4byte	0x6b
 2394 01e9 00       		.byte	0
 2395 01ea 06       		.uleb128 0x6
 2396 01eb 2F090000 		.4byte	.LASF32
 2397 01ef 03       		.byte	0x3
 2398 01f0 44       		.byte	0x44
 2399 01f1 6B000000 		.4byte	0x6b
 2400 01f5 01       		.byte	0x1
 2401 01f6 06       		.uleb128 0x6
 2402 01f7 05030000 		.4byte	.LASF33
 2403 01fb 03       		.byte	0x3
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 93


 2404 01fc 45       		.byte	0x45
 2405 01fd 6B000000 		.4byte	0x6b
 2406 0201 02       		.byte	0x2
 2407 0202 06       		.uleb128 0x6
 2408 0203 F5020000 		.4byte	.LASF34
 2409 0207 03       		.byte	0x3
 2410 0208 46       		.byte	0x46
 2411 0209 76000000 		.4byte	0x76
 2412 020d 04       		.byte	0x4
 2413 020e 06       		.uleb128 0x6
 2414 020f 93040000 		.4byte	.LASF35
 2415 0213 03       		.byte	0x3
 2416 0214 47       		.byte	0x47
 2417 0215 76000000 		.4byte	0x76
 2418 0219 06       		.byte	0x6
 2419 021a 06       		.uleb128 0x6
 2420 021b 81040000 		.4byte	.LASF36
 2421 021f 03       		.byte	0x3
 2422 0220 48       		.byte	0x48
 2423 0221 27020000 		.4byte	0x227
 2424 0225 08       		.byte	0x8
 2425 0226 00       		.byte	0
 2426 0227 07       		.uleb128 0x7
 2427 0228 04       		.byte	0x4
 2428 0229 2D020000 		.4byte	0x22d
 2429 022d 08       		.uleb128 0x8
 2430 022e CB010000 		.4byte	0x1cb
 2431 0232 04       		.uleb128 0x4
 2432 0233 A6050000 		.4byte	.LASF37
 2433 0237 03       		.byte	0x3
 2434 0238 49       		.byte	0x49
 2435 0239 D6010000 		.4byte	0x1d6
 2436 023d 0C       		.uleb128 0xc
 2437 023e 22070000 		.4byte	.LASF38
 2438 0242 01       		.byte	0x1
 2439 0243 86       		.byte	0x86
 2440 0244 00000000 		.4byte	.LFB35
 2441 0248 84000000 		.4byte	.LFE35-.LFB35
 2442 024c 01       		.uleb128 0x1
 2443 024d 9C       		.byte	0x9c
 2444 024e 6F020000 		.4byte	0x26f
 2445 0252 0D       		.uleb128 0xd
 2446 0253 D4030000 		.4byte	.LASF40
 2447 0257 01       		.byte	0x1
 2448 0258 86       		.byte	0x86
 2449 0259 81000000 		.4byte	0x81
 2450 025d 02       		.uleb128 0x2
 2451 025e 91       		.byte	0x91
 2452 025f 6C       		.sleb128 -20
 2453 0260 0E       		.uleb128 0xe
 2454 0261 01070000 		.4byte	.LASF42
 2455 0265 01       		.byte	0x1
 2456 0266 8A       		.byte	0x8a
 2457 0267 6B000000 		.4byte	0x6b
 2458 026b 02       		.uleb128 0x2
 2459 026c 91       		.byte	0x91
 2460 026d 77       		.sleb128 -9
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 94


 2461 026e 00       		.byte	0
 2462 026f 0F       		.uleb128 0xf
 2463 0270 E3040000 		.4byte	.LASF39
 2464 0274 01       		.byte	0x1
 2465 0275 D2       		.byte	0xd2
 2466 0276 00000000 		.4byte	.LFB36
 2467 027a 2A000000 		.4byte	.LFE36-.LFB36
 2468 027e 01       		.uleb128 0x1
 2469 027f 9C       		.byte	0x9c
 2470 0280 93020000 		.4byte	0x293
 2471 0284 0D       		.uleb128 0xd
 2472 0285 D4030000 		.4byte	.LASF40
 2473 0289 01       		.byte	0x1
 2474 028a D2       		.byte	0xd2
 2475 028b 81000000 		.4byte	0x81
 2476 028f 02       		.uleb128 0x2
 2477 0290 91       		.byte	0x91
 2478 0291 74       		.sleb128 -12
 2479 0292 00       		.byte	0
 2480 0293 0F       		.uleb128 0xf
 2481 0294 9E060000 		.4byte	.LASF41
 2482 0298 01       		.byte	0x1
 2483 0299 F7       		.byte	0xf7
 2484 029a 00000000 		.4byte	.LFB37
 2485 029e 26000000 		.4byte	.LFE37-.LFB37
 2486 02a2 01       		.uleb128 0x1
 2487 02a3 9C       		.byte	0x9c
 2488 02a4 B5020000 		.4byte	0x2b5
 2489 02a8 10       		.uleb128 0x10
 2490 02a9 6900     		.ascii	"i\000"
 2491 02ab 01       		.byte	0x1
 2492 02ac F9       		.byte	0xf9
 2493 02ad 81000000 		.4byte	0x81
 2494 02b1 02       		.uleb128 0x2
 2495 02b2 91       		.byte	0x91
 2496 02b3 74       		.sleb128 -12
 2497 02b4 00       		.byte	0
 2498 02b5 11       		.uleb128 0x11
 2499 02b6 6F010000 		.4byte	.LASF43
 2500 02ba 01       		.byte	0x1
 2501 02bb 1A01     		.2byte	0x11a
 2502 02bd 00000000 		.4byte	.LFB38
 2503 02c1 50000000 		.4byte	.LFE38-.LFB38
 2504 02c5 01       		.uleb128 0x1
 2505 02c6 9C       		.byte	0x9c
 2506 02c7 E8020000 		.4byte	0x2e8
 2507 02cb 12       		.uleb128 0x12
 2508 02cc 6900     		.ascii	"i\000"
 2509 02ce 01       		.byte	0x1
 2510 02cf 1C01     		.2byte	0x11c
 2511 02d1 81000000 		.4byte	0x81
 2512 02d5 02       		.uleb128 0x2
 2513 02d6 91       		.byte	0x91
 2514 02d7 74       		.sleb128 -12
 2515 02d8 13       		.uleb128 0x13
 2516 02d9 12070000 		.4byte	.LASF44
 2517 02dd 01       		.byte	0x1
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 95


 2518 02de 1D01     		.2byte	0x11d
 2519 02e0 81000000 		.4byte	0x81
 2520 02e4 02       		.uleb128 0x2
 2521 02e5 91       		.byte	0x91
 2522 02e6 70       		.sleb128 -16
 2523 02e7 00       		.byte	0
 2524 02e8 11       		.uleb128 0x11
 2525 02e9 C0040000 		.4byte	.LASF45
 2526 02ed 01       		.byte	0x1
 2527 02ee 5B01     		.2byte	0x15b
 2528 02f0 00000000 		.4byte	.LFB39
 2529 02f4 28020000 		.4byte	.LFE39-.LFB39
 2530 02f8 01       		.uleb128 0x1
 2531 02f9 9C       		.byte	0x9c
 2532 02fa 68030000 		.4byte	0x368
 2533 02fe 14       		.uleb128 0x14
 2534 02ff D4030000 		.4byte	.LASF40
 2535 0303 01       		.byte	0x1
 2536 0304 5B01     		.2byte	0x15b
 2537 0306 81000000 		.4byte	0x81
 2538 030a 02       		.uleb128 0x2
 2539 030b 91       		.byte	0x91
 2540 030c 5C       		.sleb128 -36
 2541 030d 13       		.uleb128 0x13
 2542 030e 2C040000 		.4byte	.LASF46
 2543 0312 01       		.byte	0x1
 2544 0313 5D01     		.2byte	0x15d
 2545 0315 81000000 		.4byte	0x81
 2546 0319 02       		.uleb128 0x2
 2547 031a 91       		.byte	0x91
 2548 031b 60       		.sleb128 -32
 2549 031c 13       		.uleb128 0x13
 2550 031d 12080000 		.4byte	.LASF47
 2551 0321 01       		.byte	0x1
 2552 0322 5E01     		.2byte	0x15e
 2553 0324 81000000 		.4byte	0x81
 2554 0328 02       		.uleb128 0x2
 2555 0329 91       		.byte	0x91
 2556 032a 6C       		.sleb128 -20
 2557 032b 13       		.uleb128 0x13
 2558 032c E3080000 		.4byte	.LASF48
 2559 0330 01       		.byte	0x1
 2560 0331 5F01     		.2byte	0x15f
 2561 0333 76000000 		.4byte	0x76
 2562 0337 02       		.uleb128 0x2
 2563 0338 91       		.byte	0x91
 2564 0339 6A       		.sleb128 -22
 2565 033a 13       		.uleb128 0x13
 2566 033b 07000000 		.4byte	.LASF49
 2567 033f 01       		.byte	0x1
 2568 0340 6001     		.2byte	0x160
 2569 0342 76000000 		.4byte	0x76
 2570 0346 02       		.uleb128 0x2
 2571 0347 91       		.byte	0x91
 2572 0348 68       		.sleb128 -24
 2573 0349 13       		.uleb128 0x13
 2574 034a 01070000 		.4byte	.LASF42
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 96


 2575 034e 01       		.byte	0x1
 2576 034f 6101     		.2byte	0x161
 2577 0351 6B000000 		.4byte	0x6b
 2578 0355 02       		.uleb128 0x2
 2579 0356 91       		.byte	0x91
 2580 0357 67       		.sleb128 -25
 2581 0358 13       		.uleb128 0x13
 2582 0359 E8060000 		.4byte	.LASF50
 2583 035d 01       		.byte	0x1
 2584 035e 6201     		.2byte	0x162
 2585 0360 6B000000 		.4byte	0x6b
 2586 0364 02       		.uleb128 0x2
 2587 0365 91       		.byte	0x91
 2588 0366 66       		.sleb128 -26
 2589 0367 00       		.byte	0
 2590 0368 11       		.uleb128 0x11
 2591 0369 0E040000 		.4byte	.LASF51
 2592 036d 01       		.byte	0x1
 2593 036e 1A02     		.2byte	0x21a
 2594 0370 00000000 		.4byte	.LFB40
 2595 0374 1E000000 		.4byte	.LFE40-.LFB40
 2596 0378 01       		.uleb128 0x1
 2597 0379 9C       		.byte	0x9c
 2598 037a 8E030000 		.4byte	0x38e
 2599 037e 14       		.uleb128 0x14
 2600 037f D4030000 		.4byte	.LASF40
 2601 0383 01       		.byte	0x1
 2602 0384 1A02     		.2byte	0x21a
 2603 0386 81000000 		.4byte	0x81
 2604 038a 02       		.uleb128 0x2
 2605 038b 91       		.byte	0x91
 2606 038c 74       		.sleb128 -12
 2607 038d 00       		.byte	0
 2608 038e 11       		.uleb128 0x11
 2609 038f 93010000 		.4byte	.LASF52
 2610 0393 01       		.byte	0x1
 2611 0394 5002     		.2byte	0x250
 2612 0396 00000000 		.4byte	.LFB41
 2613 039a 40000000 		.4byte	.LFE41-.LFB41
 2614 039e 01       		.uleb128 0x1
 2615 039f 9C       		.byte	0x9c
 2616 03a0 C1030000 		.4byte	0x3c1
 2617 03a4 12       		.uleb128 0x12
 2618 03a5 6900     		.ascii	"i\000"
 2619 03a7 01       		.byte	0x1
 2620 03a8 5202     		.2byte	0x252
 2621 03aa 81000000 		.4byte	0x81
 2622 03ae 02       		.uleb128 0x2
 2623 03af 91       		.byte	0x91
 2624 03b0 74       		.sleb128 -12
 2625 03b1 13       		.uleb128 0x13
 2626 03b2 12070000 		.4byte	.LASF44
 2627 03b6 01       		.byte	0x1
 2628 03b7 5302     		.2byte	0x253
 2629 03b9 81000000 		.4byte	0x81
 2630 03bd 02       		.uleb128 0x2
 2631 03be 91       		.byte	0x91
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 97


 2632 03bf 70       		.sleb128 -16
 2633 03c0 00       		.byte	0
 2634 03c1 11       		.uleb128 0x11
 2635 03c2 AD000000 		.4byte	.LASF53
 2636 03c6 01       		.byte	0x1
 2637 03c7 7D02     		.2byte	0x27d
 2638 03c9 00000000 		.4byte	.LFB42
 2639 03cd 58000000 		.4byte	.LFE42-.LFB42
 2640 03d1 01       		.uleb128 0x1
 2641 03d2 9C       		.byte	0x9c
 2642 03d3 30040000 		.4byte	0x430
 2643 03d7 14       		.uleb128 0x14
 2644 03d8 01070000 		.4byte	.LASF42
 2645 03dc 01       		.byte	0x1
 2646 03dd 7D02     		.2byte	0x27d
 2647 03df 81000000 		.4byte	0x81
 2648 03e3 02       		.uleb128 0x2
 2649 03e4 91       		.byte	0x91
 2650 03e5 5C       		.sleb128 -36
 2651 03e6 13       		.uleb128 0x13
 2652 03e7 34070000 		.4byte	.LASF54
 2653 03eb 01       		.byte	0x1
 2654 03ec 7F02     		.2byte	0x27f
 2655 03ee 81000000 		.4byte	0x81
 2656 03f2 02       		.uleb128 0x2
 2657 03f3 91       		.byte	0x91
 2658 03f4 70       		.sleb128 -16
 2659 03f5 13       		.uleb128 0x13
 2660 03f6 D1070000 		.4byte	.LASF55
 2661 03fa 01       		.byte	0x1
 2662 03fb 8002     		.2byte	0x280
 2663 03fd 81000000 		.4byte	0x81
 2664 0401 02       		.uleb128 0x2
 2665 0402 91       		.byte	0x91
 2666 0403 6C       		.sleb128 -20
 2667 0404 13       		.uleb128 0x13
 2668 0405 38030000 		.4byte	.LASF56
 2669 0409 01       		.byte	0x1
 2670 040a 8102     		.2byte	0x281
 2671 040c 81000000 		.4byte	0x81
 2672 0410 02       		.uleb128 0x2
 2673 0411 91       		.byte	0x91
 2674 0412 68       		.sleb128 -24
 2675 0413 12       		.uleb128 0x12
 2676 0414 6900     		.ascii	"i\000"
 2677 0416 01       		.byte	0x1
 2678 0417 8202     		.2byte	0x282
 2679 0419 81000000 		.4byte	0x81
 2680 041d 02       		.uleb128 0x2
 2681 041e 91       		.byte	0x91
 2682 041f 74       		.sleb128 -12
 2683 0420 13       		.uleb128 0x13
 2684 0421 12070000 		.4byte	.LASF44
 2685 0425 01       		.byte	0x1
 2686 0426 8302     		.2byte	0x283
 2687 0428 81000000 		.4byte	0x81
 2688 042c 02       		.uleb128 0x2
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 98


 2689 042d 91       		.byte	0x91
 2690 042e 64       		.sleb128 -28
 2691 042f 00       		.byte	0
 2692 0430 15       		.uleb128 0x15
 2693 0431 0E020000 		.4byte	.LASF59
 2694 0435 01       		.byte	0x1
 2695 0436 AE02     		.2byte	0x2ae
 2696 0438 76000000 		.4byte	0x76
 2697 043c 00000000 		.4byte	.LFB43
 2698 0440 1C000000 		.4byte	.LFE43-.LFB43
 2699 0444 01       		.uleb128 0x1
 2700 0445 9C       		.byte	0x9c
 2701 0446 5A040000 		.4byte	0x45a
 2702 044a 14       		.uleb128 0x14
 2703 044b D4030000 		.4byte	.LASF40
 2704 044f 01       		.byte	0x1
 2705 0450 AE02     		.2byte	0x2ae
 2706 0452 81000000 		.4byte	0x81
 2707 0456 02       		.uleb128 0x2
 2708 0457 91       		.byte	0x91
 2709 0458 74       		.sleb128 -12
 2710 0459 00       		.byte	0
 2711 045a 16       		.uleb128 0x16
 2712 045b CF060000 		.4byte	.LASF57
 2713 045f 01       		.byte	0x1
 2714 0460 C902     		.2byte	0x2c9
 2715 0462 00000000 		.4byte	.LFB44
 2716 0466 24000000 		.4byte	.LFE44-.LFB44
 2717 046a 01       		.uleb128 0x1
 2718 046b 9C       		.byte	0x9c
 2719 046c 8F040000 		.4byte	0x48f
 2720 0470 14       		.uleb128 0x14
 2721 0471 D4030000 		.4byte	.LASF40
 2722 0475 01       		.byte	0x1
 2723 0476 C902     		.2byte	0x2c9
 2724 0478 81000000 		.4byte	0x81
 2725 047c 02       		.uleb128 0x2
 2726 047d 91       		.byte	0x91
 2727 047e 74       		.sleb128 -12
 2728 047f 14       		.uleb128 0x14
 2729 0480 AD030000 		.4byte	.LASF58
 2730 0484 01       		.byte	0x1
 2731 0485 C902     		.2byte	0x2c9
 2732 0487 76000000 		.4byte	0x76
 2733 048b 02       		.uleb128 0x2
 2734 048c 91       		.byte	0x91
 2735 048d 72       		.sleb128 -14
 2736 048e 00       		.byte	0
 2737 048f 15       		.uleb128 0x15
 2738 0490 67040000 		.4byte	.LASF60
 2739 0494 01       		.byte	0x1
 2740 0495 E402     		.2byte	0x2e4
 2741 0497 6B000000 		.4byte	0x6b
 2742 049b 00000000 		.4byte	.LFB45
 2743 049f 1C000000 		.4byte	.LFE45-.LFB45
 2744 04a3 01       		.uleb128 0x1
 2745 04a4 9C       		.byte	0x9c
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 99


 2746 04a5 B9040000 		.4byte	0x4b9
 2747 04a9 14       		.uleb128 0x14
 2748 04aa D4030000 		.4byte	.LASF40
 2749 04ae 01       		.byte	0x1
 2750 04af E402     		.2byte	0x2e4
 2751 04b1 81000000 		.4byte	0x81
 2752 04b5 02       		.uleb128 0x2
 2753 04b6 91       		.byte	0x91
 2754 04b7 74       		.sleb128 -12
 2755 04b8 00       		.byte	0
 2756 04b9 16       		.uleb128 0x16
 2757 04ba 49080000 		.4byte	.LASF61
 2758 04be 01       		.byte	0x1
 2759 04bf FF02     		.2byte	0x2ff
 2760 04c1 00000000 		.4byte	.LFB46
 2761 04c5 24000000 		.4byte	.LFE46-.LFB46
 2762 04c9 01       		.uleb128 0x1
 2763 04ca 9C       		.byte	0x9c
 2764 04cb EE040000 		.4byte	0x4ee
 2765 04cf 14       		.uleb128 0x14
 2766 04d0 D4030000 		.4byte	.LASF40
 2767 04d4 01       		.byte	0x1
 2768 04d5 FF02     		.2byte	0x2ff
 2769 04d7 81000000 		.4byte	0x81
 2770 04db 02       		.uleb128 0x2
 2771 04dc 91       		.byte	0x91
 2772 04dd 74       		.sleb128 -12
 2773 04de 14       		.uleb128 0x14
 2774 04df 15030000 		.4byte	.LASF62
 2775 04e3 01       		.byte	0x1
 2776 04e4 FF02     		.2byte	0x2ff
 2777 04e6 6B000000 		.4byte	0x6b
 2778 04ea 02       		.uleb128 0x2
 2779 04eb 91       		.byte	0x91
 2780 04ec 73       		.sleb128 -13
 2781 04ed 00       		.byte	0
 2782 04ee 15       		.uleb128 0x15
 2783 04ef EB070000 		.4byte	.LASF63
 2784 04f3 01       		.byte	0x1
 2785 04f4 1A03     		.2byte	0x31a
 2786 04f6 6B000000 		.4byte	0x6b
 2787 04fa 00000000 		.4byte	.LFB47
 2788 04fe 1C000000 		.4byte	.LFE47-.LFB47
 2789 0502 01       		.uleb128 0x1
 2790 0503 9C       		.byte	0x9c
 2791 0504 18050000 		.4byte	0x518
 2792 0508 14       		.uleb128 0x14
 2793 0509 01070000 		.4byte	.LASF42
 2794 050d 01       		.byte	0x1
 2795 050e 1A03     		.2byte	0x31a
 2796 0510 81000000 		.4byte	0x81
 2797 0514 02       		.uleb128 0x2
 2798 0515 91       		.byte	0x91
 2799 0516 74       		.sleb128 -12
 2800 0517 00       		.byte	0
 2801 0518 15       		.uleb128 0x15
 2802 0519 54010000 		.4byte	.LASF64
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 100


 2803 051d 01       		.byte	0x1
 2804 051e 3503     		.2byte	0x335
 2805 0520 6B000000 		.4byte	0x6b
 2806 0524 00000000 		.4byte	.LFB48
 2807 0528 1C000000 		.4byte	.LFE48-.LFB48
 2808 052c 01       		.uleb128 0x1
 2809 052d 9C       		.byte	0x9c
 2810 052e 42050000 		.4byte	0x542
 2811 0532 14       		.uleb128 0x14
 2812 0533 01070000 		.4byte	.LASF42
 2813 0537 01       		.byte	0x1
 2814 0538 3503     		.2byte	0x335
 2815 053a 81000000 		.4byte	0x81
 2816 053e 02       		.uleb128 0x2
 2817 053f 91       		.byte	0x91
 2818 0540 74       		.sleb128 -12
 2819 0541 00       		.byte	0
 2820 0542 15       		.uleb128 0x15
 2821 0543 B4070000 		.4byte	.LASF65
 2822 0547 01       		.byte	0x1
 2823 0548 5103     		.2byte	0x351
 2824 054a 6B000000 		.4byte	0x6b
 2825 054e 00000000 		.4byte	.LFB49
 2826 0552 1C000000 		.4byte	.LFE49-.LFB49
 2827 0556 01       		.uleb128 0x1
 2828 0557 9C       		.byte	0x9c
 2829 0558 6C050000 		.4byte	0x56c
 2830 055c 14       		.uleb128 0x14
 2831 055d 01070000 		.4byte	.LASF42
 2832 0561 01       		.byte	0x1
 2833 0562 5103     		.2byte	0x351
 2834 0564 81000000 		.4byte	0x81
 2835 0568 02       		.uleb128 0x2
 2836 0569 91       		.byte	0x91
 2837 056a 74       		.sleb128 -12
 2838 056b 00       		.byte	0
 2839 056c 15       		.uleb128 0x15
 2840 056d 57000000 		.4byte	.LASF66
 2841 0571 01       		.byte	0x1
 2842 0572 6D03     		.2byte	0x36d
 2843 0574 6B000000 		.4byte	0x6b
 2844 0578 00000000 		.4byte	.LFB50
 2845 057c 1C000000 		.4byte	.LFE50-.LFB50
 2846 0580 01       		.uleb128 0x1
 2847 0581 9C       		.byte	0x9c
 2848 0582 96050000 		.4byte	0x596
 2849 0586 14       		.uleb128 0x14
 2850 0587 01070000 		.4byte	.LASF42
 2851 058b 01       		.byte	0x1
 2852 058c 6D03     		.2byte	0x36d
 2853 058e 81000000 		.4byte	0x81
 2854 0592 02       		.uleb128 0x2
 2855 0593 91       		.byte	0x91
 2856 0594 74       		.sleb128 -12
 2857 0595 00       		.byte	0
 2858 0596 16       		.uleb128 0x16
 2859 0597 C4020000 		.4byte	.LASF67
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 101


 2860 059b 01       		.byte	0x1
 2861 059c 8E03     		.2byte	0x38e
 2862 059e 00000000 		.4byte	.LFB51
 2863 05a2 24000000 		.4byte	.LFE51-.LFB51
 2864 05a6 01       		.uleb128 0x1
 2865 05a7 9C       		.byte	0x9c
 2866 05a8 CB050000 		.4byte	0x5cb
 2867 05ac 14       		.uleb128 0x14
 2868 05ad 01070000 		.4byte	.LASF42
 2869 05b1 01       		.byte	0x1
 2870 05b2 8E03     		.2byte	0x38e
 2871 05b4 81000000 		.4byte	0x81
 2872 05b8 02       		.uleb128 0x2
 2873 05b9 91       		.byte	0x91
 2874 05ba 74       		.sleb128 -12
 2875 05bb 14       		.uleb128 0x14
 2876 05bc 15030000 		.4byte	.LASF62
 2877 05c0 01       		.byte	0x1
 2878 05c1 8E03     		.2byte	0x38e
 2879 05c3 6B000000 		.4byte	0x6b
 2880 05c7 02       		.uleb128 0x2
 2881 05c8 91       		.byte	0x91
 2882 05c9 73       		.sleb128 -13
 2883 05ca 00       		.byte	0
 2884 05cb 16       		.uleb128 0x16
 2885 05cc 62070000 		.4byte	.LASF68
 2886 05d0 01       		.byte	0x1
 2887 05d1 AA03     		.2byte	0x3aa
 2888 05d3 00000000 		.4byte	.LFB52
 2889 05d7 24000000 		.4byte	.LFE52-.LFB52
 2890 05db 01       		.uleb128 0x1
 2891 05dc 9C       		.byte	0x9c
 2892 05dd 00060000 		.4byte	0x600
 2893 05e1 14       		.uleb128 0x14
 2894 05e2 01070000 		.4byte	.LASF42
 2895 05e6 01       		.byte	0x1
 2896 05e7 AA03     		.2byte	0x3aa
 2897 05e9 81000000 		.4byte	0x81
 2898 05ed 02       		.uleb128 0x2
 2899 05ee 91       		.byte	0x91
 2900 05ef 74       		.sleb128 -12
 2901 05f0 14       		.uleb128 0x14
 2902 05f1 15030000 		.4byte	.LASF62
 2903 05f5 01       		.byte	0x1
 2904 05f6 AA03     		.2byte	0x3aa
 2905 05f8 6B000000 		.4byte	0x6b
 2906 05fc 02       		.uleb128 0x2
 2907 05fd 91       		.byte	0x91
 2908 05fe 73       		.sleb128 -13
 2909 05ff 00       		.byte	0
 2910 0600 16       		.uleb128 0x16
 2911 0601 05050000 		.4byte	.LASF69
 2912 0605 01       		.byte	0x1
 2913 0606 C603     		.2byte	0x3c6
 2914 0608 00000000 		.4byte	.LFB53
 2915 060c 24000000 		.4byte	.LFE53-.LFB53
 2916 0610 01       		.uleb128 0x1
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 102


 2917 0611 9C       		.byte	0x9c
 2918 0612 35060000 		.4byte	0x635
 2919 0616 14       		.uleb128 0x14
 2920 0617 01070000 		.4byte	.LASF42
 2921 061b 01       		.byte	0x1
 2922 061c C603     		.2byte	0x3c6
 2923 061e 81000000 		.4byte	0x81
 2924 0622 02       		.uleb128 0x2
 2925 0623 91       		.byte	0x91
 2926 0624 74       		.sleb128 -12
 2927 0625 14       		.uleb128 0x14
 2928 0626 15030000 		.4byte	.LASF62
 2929 062a 01       		.byte	0x1
 2930 062b C603     		.2byte	0x3c6
 2931 062d 6B000000 		.4byte	0x6b
 2932 0631 02       		.uleb128 0x2
 2933 0632 91       		.byte	0x91
 2934 0633 73       		.sleb128 -13
 2935 0634 00       		.byte	0
 2936 0635 16       		.uleb128 0x16
 2937 0636 8A000000 		.4byte	.LASF70
 2938 063a 01       		.byte	0x1
 2939 063b E303     		.2byte	0x3e3
 2940 063d 00000000 		.4byte	.LFB54
 2941 0641 24000000 		.4byte	.LFE54-.LFB54
 2942 0645 01       		.uleb128 0x1
 2943 0646 9C       		.byte	0x9c
 2944 0647 6A060000 		.4byte	0x66a
 2945 064b 14       		.uleb128 0x14
 2946 064c 01070000 		.4byte	.LASF42
 2947 0650 01       		.byte	0x1
 2948 0651 E303     		.2byte	0x3e3
 2949 0653 81000000 		.4byte	0x81
 2950 0657 02       		.uleb128 0x2
 2951 0658 91       		.byte	0x91
 2952 0659 74       		.sleb128 -12
 2953 065a 14       		.uleb128 0x14
 2954 065b 15030000 		.4byte	.LASF62
 2955 065f 01       		.byte	0x1
 2956 0660 E303     		.2byte	0x3e3
 2957 0662 6B000000 		.4byte	0x6b
 2958 0666 02       		.uleb128 0x2
 2959 0667 91       		.byte	0x91
 2960 0668 73       		.sleb128 -13
 2961 0669 00       		.byte	0
 2962 066a 16       		.uleb128 0x16
 2963 066b E0020000 		.4byte	.LASF71
 2964 066f 01       		.byte	0x1
 2965 0670 FF03     		.2byte	0x3ff
 2966 0672 00000000 		.4byte	.LFB55
 2967 0676 24000000 		.4byte	.LFE55-.LFB55
 2968 067a 01       		.uleb128 0x1
 2969 067b 9C       		.byte	0x9c
 2970 067c 9F060000 		.4byte	0x69f
 2971 0680 14       		.uleb128 0x14
 2972 0681 01070000 		.4byte	.LASF42
 2973 0685 01       		.byte	0x1
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 103


 2974 0686 FF03     		.2byte	0x3ff
 2975 0688 81000000 		.4byte	0x81
 2976 068c 02       		.uleb128 0x2
 2977 068d 91       		.byte	0x91
 2978 068e 74       		.sleb128 -12
 2979 068f 14       		.uleb128 0x14
 2980 0690 15030000 		.4byte	.LASF62
 2981 0694 01       		.byte	0x1
 2982 0695 FF03     		.2byte	0x3ff
 2983 0697 6B000000 		.4byte	0x6b
 2984 069b 02       		.uleb128 0x2
 2985 069c 91       		.byte	0x91
 2986 069d 73       		.sleb128 -13
 2987 069e 00       		.byte	0
 2988 069f 16       		.uleb128 0x16
 2989 06a0 1B030000 		.4byte	.LASF72
 2990 06a4 01       		.byte	0x1
 2991 06a5 1B04     		.2byte	0x41b
 2992 06a7 00000000 		.4byte	.LFB56
 2993 06ab 24000000 		.4byte	.LFE56-.LFB56
 2994 06af 01       		.uleb128 0x1
 2995 06b0 9C       		.byte	0x9c
 2996 06b1 D4060000 		.4byte	0x6d4
 2997 06b5 14       		.uleb128 0x14
 2998 06b6 D4030000 		.4byte	.LASF40
 2999 06ba 01       		.byte	0x1
 3000 06bb 1B04     		.2byte	0x41b
 3001 06bd 81000000 		.4byte	0x81
 3002 06c1 02       		.uleb128 0x2
 3003 06c2 91       		.byte	0x91
 3004 06c3 74       		.sleb128 -12
 3005 06c4 14       		.uleb128 0x14
 3006 06c5 15030000 		.4byte	.LASF62
 3007 06c9 01       		.byte	0x1
 3008 06ca 1B04     		.2byte	0x41b
 3009 06cc 6B000000 		.4byte	0x6b
 3010 06d0 02       		.uleb128 0x2
 3011 06d1 91       		.byte	0x91
 3012 06d2 73       		.sleb128 -13
 3013 06d3 00       		.byte	0
 3014 06d4 17       		.uleb128 0x17
 3015 06d5 22050000 		.4byte	.LASF73
 3016 06d9 01       		.byte	0x1
 3017 06da 4904     		.2byte	0x449
 3018 06dc 81000000 		.4byte	0x81
 3019 06e0 00000000 		.4byte	.LFB57
 3020 06e4 38010000 		.4byte	.LFE57-.LFB57
 3021 06e8 01       		.uleb128 0x1
 3022 06e9 9C       		.byte	0x9c
 3023 06ea 49070000 		.4byte	0x749
 3024 06ee 14       		.uleb128 0x14
 3025 06ef D4030000 		.4byte	.LASF40
 3026 06f3 01       		.byte	0x1
 3027 06f4 4904     		.2byte	0x449
 3028 06f6 81000000 		.4byte	0x81
 3029 06fa 02       		.uleb128 0x2
 3030 06fb 91       		.byte	0x91
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 104


 3031 06fc 6C       		.sleb128 -20
 3032 06fd 13       		.uleb128 0x13
 3033 06fe 01070000 		.4byte	.LASF42
 3034 0702 01       		.byte	0x1
 3035 0703 4B04     		.2byte	0x44b
 3036 0705 6B000000 		.4byte	0x6b
 3037 0709 02       		.uleb128 0x2
 3038 070a 91       		.byte	0x91
 3039 070b 77       		.sleb128 -9
 3040 070c 13       		.uleb128 0x13
 3041 070d 8A040000 		.4byte	.LASF74
 3042 0711 01       		.byte	0x1
 3043 0712 4C04     		.2byte	0x44c
 3044 0714 6B000000 		.4byte	0x6b
 3045 0718 02       		.uleb128 0x2
 3046 0719 91       		.byte	0x91
 3047 071a 74       		.sleb128 -12
 3048 071b 13       		.uleb128 0x13
 3049 071c DD070000 		.4byte	.LASF75
 3050 0720 01       		.byte	0x1
 3051 0721 4D04     		.2byte	0x44d
 3052 0723 6B000000 		.4byte	0x6b
 3053 0727 02       		.uleb128 0x2
 3054 0728 91       		.byte	0x91
 3055 0729 73       		.sleb128 -13
 3056 072a 13       		.uleb128 0x13
 3057 072b 7A000000 		.4byte	.LASF76
 3058 072f 01       		.byte	0x1
 3059 0730 4F04     		.2byte	0x44f
 3060 0732 6B000000 		.4byte	0x6b
 3061 0736 02       		.uleb128 0x2
 3062 0737 91       		.byte	0x91
 3063 0738 76       		.sleb128 -10
 3064 0739 13       		.uleb128 0x13
 3065 073a B9020000 		.4byte	.LASF77
 3066 073e 01       		.byte	0x1
 3067 073f 5004     		.2byte	0x450
 3068 0741 6B000000 		.4byte	0x6b
 3069 0745 02       		.uleb128 0x2
 3070 0746 91       		.byte	0x91
 3071 0747 75       		.sleb128 -11
 3072 0748 00       		.byte	0
 3073 0749 17       		.uleb128 0x17
 3074 074a 73060000 		.4byte	.LASF78
 3075 074e 01       		.byte	0x1
 3076 074f 9B04     		.2byte	0x49b
 3077 0751 81000000 		.4byte	0x81
 3078 0755 00000000 		.4byte	.LFB58
 3079 0759 44000000 		.4byte	.LFE58-.LFB58
 3080 075d 01       		.uleb128 0x1
 3081 075e 9C       		.byte	0x9c
 3082 075f A0070000 		.4byte	0x7a0
 3083 0763 14       		.uleb128 0x14
 3084 0764 01070000 		.4byte	.LASF42
 3085 0768 01       		.byte	0x1
 3086 0769 9B04     		.2byte	0x49b
 3087 076b 81000000 		.4byte	0x81
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 105


 3088 076f 02       		.uleb128 0x2
 3089 0770 91       		.byte	0x91
 3090 0771 64       		.sleb128 -28
 3091 0772 13       		.uleb128 0x13
 3092 0773 E4010000 		.4byte	.LASF79
 3093 0777 01       		.byte	0x1
 3094 0778 9D04     		.2byte	0x49d
 3095 077a 81000000 		.4byte	0x81
 3096 077e 02       		.uleb128 0x2
 3097 077f 91       		.byte	0x91
 3098 0780 74       		.sleb128 -12
 3099 0781 13       		.uleb128 0x13
 3100 0782 17080000 		.4byte	.LASF80
 3101 0786 01       		.byte	0x1
 3102 0787 9E04     		.2byte	0x49e
 3103 0789 81000000 		.4byte	0x81
 3104 078d 02       		.uleb128 0x2
 3105 078e 91       		.byte	0x91
 3106 078f 6C       		.sleb128 -20
 3107 0790 13       		.uleb128 0x13
 3108 0791 27020000 		.4byte	.LASF81
 3109 0795 01       		.byte	0x1
 3110 0796 9F04     		.2byte	0x49f
 3111 0798 81000000 		.4byte	0x81
 3112 079c 02       		.uleb128 0x2
 3113 079d 91       		.byte	0x91
 3114 079e 70       		.sleb128 -16
 3115 079f 00       		.byte	0
 3116 07a0 17       		.uleb128 0x17
 3117 07a1 36020000 		.4byte	.LASF82
 3118 07a5 01       		.byte	0x1
 3119 07a6 C904     		.2byte	0x4c9
 3120 07a8 81000000 		.4byte	0x81
 3121 07ac 00000000 		.4byte	.LFB59
 3122 07b0 38000000 		.4byte	.LFE59-.LFB59
 3123 07b4 01       		.uleb128 0x1
 3124 07b5 9C       		.byte	0x9c
 3125 07b6 D7070000 		.4byte	0x7d7
 3126 07ba 12       		.uleb128 0x12
 3127 07bb 6900     		.ascii	"i\000"
 3128 07bd 01       		.byte	0x1
 3129 07be CC04     		.2byte	0x4cc
 3130 07c0 81000000 		.4byte	0x81
 3131 07c4 02       		.uleb128 0x2
 3132 07c5 91       		.byte	0x91
 3133 07c6 74       		.sleb128 -12
 3134 07c7 13       		.uleb128 0x13
 3135 07c8 27020000 		.4byte	.LASF81
 3136 07cc 01       		.byte	0x1
 3137 07cd CD04     		.2byte	0x4cd
 3138 07cf 81000000 		.4byte	0x81
 3139 07d3 02       		.uleb128 0x2
 3140 07d4 91       		.byte	0x91
 3141 07d5 70       		.sleb128 -16
 3142 07d6 00       		.byte	0
 3143 07d7 11       		.uleb128 0x11
 3144 07d8 AA040000 		.4byte	.LASF83
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 106


 3145 07dc 01       		.byte	0x1
 3146 07dd F804     		.2byte	0x4f8
 3147 07df 00000000 		.4byte	.LFB60
 3148 07e3 5C000000 		.4byte	.LFE60-.LFB60
 3149 07e7 01       		.uleb128 0x1
 3150 07e8 9C       		.byte	0x9c
 3151 07e9 1B080000 		.4byte	0x81b
 3152 07ed 14       		.uleb128 0x14
 3153 07ee 01070000 		.4byte	.LASF42
 3154 07f2 01       		.byte	0x1
 3155 07f3 F804     		.2byte	0x4f8
 3156 07f5 81000000 		.4byte	0x81
 3157 07f9 02       		.uleb128 0x2
 3158 07fa 91       		.byte	0x91
 3159 07fb 6C       		.sleb128 -20
 3160 07fc 13       		.uleb128 0x13
 3161 07fd E4010000 		.4byte	.LASF79
 3162 0801 01       		.byte	0x1
 3163 0802 FB04     		.2byte	0x4fb
 3164 0804 6B000000 		.4byte	0x6b
 3165 0808 02       		.uleb128 0x2
 3166 0809 91       		.byte	0x91
 3167 080a 77       		.sleb128 -9
 3168 080b 13       		.uleb128 0x13
 3169 080c 17080000 		.4byte	.LASF80
 3170 0810 01       		.byte	0x1
 3171 0811 FC04     		.2byte	0x4fc
 3172 0813 6B000000 		.4byte	0x6b
 3173 0817 02       		.uleb128 0x2
 3174 0818 91       		.byte	0x91
 3175 0819 76       		.sleb128 -10
 3176 081a 00       		.byte	0
 3177 081b 11       		.uleb128 0x11
 3178 081c CD010000 		.4byte	.LASF84
 3179 0820 01       		.byte	0x1
 3180 0821 2305     		.2byte	0x523
 3181 0823 00000000 		.4byte	.LFB61
 3182 0827 5C000000 		.4byte	.LFE61-.LFB61
 3183 082b 01       		.uleb128 0x1
 3184 082c 9C       		.byte	0x9c
 3185 082d 5F080000 		.4byte	0x85f
 3186 0831 14       		.uleb128 0x14
 3187 0832 01070000 		.4byte	.LASF42
 3188 0836 01       		.byte	0x1
 3189 0837 2305     		.2byte	0x523
 3190 0839 81000000 		.4byte	0x81
 3191 083d 02       		.uleb128 0x2
 3192 083e 91       		.byte	0x91
 3193 083f 6C       		.sleb128 -20
 3194 0840 13       		.uleb128 0x13
 3195 0841 E4010000 		.4byte	.LASF79
 3196 0845 01       		.byte	0x1
 3197 0846 2505     		.2byte	0x525
 3198 0848 6B000000 		.4byte	0x6b
 3199 084c 02       		.uleb128 0x2
 3200 084d 91       		.byte	0x91
 3201 084e 77       		.sleb128 -9
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 107


 3202 084f 13       		.uleb128 0x13
 3203 0850 17080000 		.4byte	.LASF80
 3204 0854 01       		.byte	0x1
 3205 0855 2605     		.2byte	0x526
 3206 0857 6B000000 		.4byte	0x6b
 3207 085b 02       		.uleb128 0x2
 3208 085c 91       		.byte	0x91
 3209 085d 76       		.sleb128 -10
 3210 085e 00       		.byte	0
 3211 085f 15       		.uleb128 0x15
 3212 0860 11010000 		.4byte	.LASF85
 3213 0864 01       		.byte	0x1
 3214 0865 3F09     		.2byte	0x93f
 3215 0867 76000000 		.4byte	0x76
 3216 086b 00000000 		.4byte	.LFB62
 3217 086f 6A000000 		.4byte	.LFE62-.LFB62
 3218 0873 01       		.uleb128 0x1
 3219 0874 9C       		.byte	0x9c
 3220 0875 B3080000 		.4byte	0x8b3
 3221 0879 18       		.uleb128 0x18
 3222 087a 783100   		.ascii	"x1\000"
 3223 087d 01       		.byte	0x1
 3224 087e 3F09     		.2byte	0x93f
 3225 0880 76000000 		.4byte	0x76
 3226 0884 02       		.uleb128 0x2
 3227 0885 91       		.byte	0x91
 3228 0886 6E       		.sleb128 -18
 3229 0887 18       		.uleb128 0x18
 3230 0888 783200   		.ascii	"x2\000"
 3231 088b 01       		.byte	0x1
 3232 088c 3F09     		.2byte	0x93f
 3233 088e 76000000 		.4byte	0x76
 3234 0892 02       		.uleb128 0x2
 3235 0893 91       		.byte	0x91
 3236 0894 6C       		.sleb128 -20
 3237 0895 18       		.uleb128 0x18
 3238 0896 783300   		.ascii	"x3\000"
 3239 0899 01       		.byte	0x1
 3240 089a 3F09     		.2byte	0x93f
 3241 089c 76000000 		.4byte	0x76
 3242 08a0 02       		.uleb128 0x2
 3243 08a1 91       		.byte	0x91
 3244 08a2 6A       		.sleb128 -22
 3245 08a3 12       		.uleb128 0x12
 3246 08a4 746D7000 		.ascii	"tmp\000"
 3247 08a8 01       		.byte	0x1
 3248 08a9 4109     		.2byte	0x941
 3249 08ab 76000000 		.4byte	0x76
 3250 08af 02       		.uleb128 0x2
 3251 08b0 91       		.byte	0x91
 3252 08b1 76       		.sleb128 -10
 3253 08b2 00       		.byte	0
 3254 08b3 15       		.uleb128 0x15
 3255 08b4 C2080000 		.4byte	.LASF86
 3256 08b8 01       		.byte	0x1
 3257 08b9 B709     		.2byte	0x9b7
 3258 08bb 76000000 		.4byte	0x76
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 108


 3259 08bf 00000000 		.4byte	.LFB63
 3260 08c3 3C000000 		.4byte	.LFE63-.LFB63
 3261 08c7 01       		.uleb128 0x1
 3262 08c8 9C       		.byte	0x9c
 3263 08c9 F9080000 		.4byte	0x8f9
 3264 08cd 18       		.uleb128 0x18
 3265 08ce 783100   		.ascii	"x1\000"
 3266 08d1 01       		.byte	0x1
 3267 08d2 B709     		.2byte	0x9b7
 3268 08d4 76000000 		.4byte	0x76
 3269 08d8 02       		.uleb128 0x2
 3270 08d9 91       		.byte	0x91
 3271 08da 6E       		.sleb128 -18
 3272 08db 18       		.uleb128 0x18
 3273 08dc 783200   		.ascii	"x2\000"
 3274 08df 01       		.byte	0x1
 3275 08e0 B709     		.2byte	0x9b7
 3276 08e2 76000000 		.4byte	0x76
 3277 08e6 02       		.uleb128 0x2
 3278 08e7 91       		.byte	0x91
 3279 08e8 6C       		.sleb128 -20
 3280 08e9 12       		.uleb128 0x12
 3281 08ea 746D7000 		.ascii	"tmp\000"
 3282 08ee 01       		.byte	0x1
 3283 08ef B909     		.2byte	0x9b9
 3284 08f1 81000000 		.4byte	0x81
 3285 08f5 02       		.uleb128 0x2
 3286 08f6 91       		.byte	0x91
 3287 08f7 74       		.sleb128 -12
 3288 08f8 00       		.byte	0
 3289 08f9 15       		.uleb128 0x15
 3290 08fa 72080000 		.4byte	.LASF87
 3291 08fe 01       		.byte	0x1
 3292 08ff A00A     		.2byte	0xaa0
 3293 0901 81000000 		.4byte	0x81
 3294 0905 00000000 		.4byte	.LFB64
 3295 0909 1C000000 		.4byte	.LFE64-.LFB64
 3296 090d 01       		.uleb128 0x1
 3297 090e 9C       		.byte	0x9c
 3298 090f 23090000 		.4byte	0x923
 3299 0913 14       		.uleb128 0x14
 3300 0914 D4030000 		.4byte	.LASF40
 3301 0918 01       		.byte	0x1
 3302 0919 A00A     		.2byte	0xaa0
 3303 091b 81000000 		.4byte	0x81
 3304 091f 02       		.uleb128 0x2
 3305 0920 91       		.byte	0x91
 3306 0921 74       		.sleb128 -12
 3307 0922 00       		.byte	0
 3308 0923 15       		.uleb128 0x15
 3309 0924 DA050000 		.4byte	.LASF88
 3310 0928 01       		.byte	0x1
 3311 0929 BA0A     		.2byte	0xaba
 3312 092b 6B000000 		.4byte	0x6b
 3313 092f 00000000 		.4byte	.LFB65
 3314 0933 1C000000 		.4byte	.LFE65-.LFB65
 3315 0937 01       		.uleb128 0x1
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 109


 3316 0938 9C       		.byte	0x9c
 3317 0939 4D090000 		.4byte	0x94d
 3318 093d 14       		.uleb128 0x14
 3319 093e D4030000 		.4byte	.LASF40
 3320 0942 01       		.byte	0x1
 3321 0943 BA0A     		.2byte	0xaba
 3322 0945 81000000 		.4byte	0x81
 3323 0949 02       		.uleb128 0x2
 3324 094a 91       		.byte	0x91
 3325 094b 74       		.sleb128 -12
 3326 094c 00       		.byte	0
 3327 094d 15       		.uleb128 0x15
 3328 094e FC000000 		.4byte	.LASF89
 3329 0952 01       		.byte	0x1
 3330 0953 D40A     		.2byte	0xad4
 3331 0955 6B000000 		.4byte	0x6b
 3332 0959 00000000 		.4byte	.LFB66
 3333 095d 1C000000 		.4byte	.LFE66-.LFB66
 3334 0961 01       		.uleb128 0x1
 3335 0962 9C       		.byte	0x9c
 3336 0963 77090000 		.4byte	0x977
 3337 0967 14       		.uleb128 0x14
 3338 0968 01070000 		.4byte	.LASF42
 3339 096c 01       		.byte	0x1
 3340 096d D40A     		.2byte	0xad4
 3341 096f 81000000 		.4byte	0x81
 3342 0973 02       		.uleb128 0x2
 3343 0974 91       		.byte	0x91
 3344 0975 74       		.sleb128 -12
 3345 0976 00       		.byte	0
 3346 0977 19       		.uleb128 0x19
 3347 0978 8B080000 		.4byte	.LASF90
 3348 097c 01       		.byte	0x1
 3349 097d EE0A     		.2byte	0xaee
 3350 097f 00000000 		.4byte	.LFB67
 3351 0983 14000000 		.4byte	.LFE67-.LFB67
 3352 0987 01       		.uleb128 0x1
 3353 0988 9C       		.byte	0x9c
 3354 0989 19       		.uleb128 0x19
 3355 098a 76020000 		.4byte	.LASF91
 3356 098e 01       		.byte	0x1
 3357 098f 070B     		.2byte	0xb07
 3358 0991 00000000 		.4byte	.LFB68
 3359 0995 14000000 		.4byte	.LFE68-.LFB68
 3360 0999 01       		.uleb128 0x1
 3361 099a 9C       		.byte	0x9c
 3362 099b 1A       		.uleb128 0x1a
 3363 099c 6B000000 		.4byte	0x6b
 3364 09a0 AB090000 		.4byte	0x9ab
 3365 09a4 1B       		.uleb128 0x1b
 3366 09a5 A1000000 		.4byte	0xa1
 3367 09a9 01       		.byte	0x1
 3368 09aa 00       		.byte	0
 3369 09ab 0E       		.uleb128 0xe
 3370 09ac A9080000 		.4byte	.LASF92
 3371 09b0 01       		.byte	0x1
 3372 09b1 55       		.byte	0x55
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 110


 3373 09b2 9B090000 		.4byte	0x99b
 3374 09b6 05       		.uleb128 0x5
 3375 09b7 03       		.byte	0x3
 3376 09b8 10000000 		.4byte	CapSense_debounceCounter
 3377 09bc 1A       		.uleb128 0x1a
 3378 09bd 76000000 		.4byte	0x76
 3379 09c1 CC090000 		.4byte	0x9cc
 3380 09c5 1B       		.uleb128 0x1b
 3381 09c6 A1000000 		.4byte	0xa1
 3382 09ca 00       		.byte	0
 3383 09cb 00       		.byte	0
 3384 09cc 1C       		.uleb128 0x1c
 3385 09cd 36080000 		.4byte	.LASF93
 3386 09d1 01       		.byte	0x1
 3387 09d2 2C       		.byte	0x2c
 3388 09d3 BC090000 		.4byte	0x9bc
 3389 09d7 1A       		.uleb128 0x1a
 3390 09d8 6B000000 		.4byte	0x6b
 3391 09dc E7090000 		.4byte	0x9e7
 3392 09e0 1B       		.uleb128 0x1b
 3393 09e1 A1000000 		.4byte	0xa1
 3394 09e5 00       		.byte	0
 3395 09e6 00       		.byte	0
 3396 09e7 1C       		.uleb128 0x1c
 3397 09e8 DB030000 		.4byte	.LASF94
 3398 09ec 01       		.byte	0x1
 3399 09ed 2D       		.byte	0x2d
 3400 09ee D7090000 		.4byte	0x9d7
 3401 09f2 1C       		.uleb128 0x1c
 3402 09f3 9C020000 		.4byte	.LASF95
 3403 09f7 01       		.byte	0x1
 3404 09f8 2E       		.byte	0x2e
 3405 09f9 FD090000 		.4byte	0x9fd
 3406 09fd 08       		.uleb128 0x8
 3407 09fe D7090000 		.4byte	0x9d7
 3408 0a02 1D       		.uleb128 0x1d
 3409 0a03 7D070000 		.4byte	.LASF96
 3410 0a07 01       		.byte	0x1
 3411 0a08 34       		.byte	0x34
 3412 0a09 BC090000 		.4byte	0x9bc
 3413 0a0d 05       		.uleb128 0x5
 3414 0a0e 03       		.byte	0x3
 3415 0a0f 00000000 		.4byte	CapSense_sensorBaseline
 3416 0a13 1D       		.uleb128 0x1d
 3417 0a14 62030000 		.4byte	.LASF97
 3418 0a18 01       		.byte	0x1
 3419 0a19 35       		.byte	0x35
 3420 0a1a D7090000 		.4byte	0x9d7
 3421 0a1e 05       		.uleb128 0x5
 3422 0a1f 03       		.byte	0x3
 3423 0a20 00000000 		.4byte	CapSense_sensorBaselineLow
 3424 0a24 1D       		.uleb128 0x1d
 3425 0a25 3E010000 		.4byte	.LASF98
 3426 0a29 01       		.byte	0x1
 3427 0a2a 36       		.byte	0x36
 3428 0a2b D7090000 		.4byte	0x9d7
 3429 0a2f 05       		.uleb128 0x5
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 111


 3430 0a30 03       		.byte	0x3
 3431 0a31 00000000 		.4byte	CapSense_sensorSignal
 3432 0a35 1D       		.uleb128 0x1d
 3433 0a36 41000000 		.4byte	.LASF99
 3434 0a3a 01       		.byte	0x1
 3435 0a3b 37       		.byte	0x37
 3436 0a3c D7090000 		.4byte	0x9d7
 3437 0a40 05       		.uleb128 0x5
 3438 0a41 03       		.byte	0x3
 3439 0a42 00000000 		.4byte	CapSense_sensorOnMask
 3440 0a46 1D       		.uleb128 0x1d
 3441 0a47 45070000 		.4byte	.LASF100
 3442 0a4b 01       		.byte	0x1
 3443 0a4c 39       		.byte	0x39
 3444 0a4d D7090000 		.4byte	0x9d7
 3445 0a51 05       		.uleb128 0x5
 3446 0a52 03       		.byte	0x3
 3447 0a53 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3448 0a57 1D       		.uleb128 0x1d
 3449 0a58 5C020000 		.4byte	.LASF101
 3450 0a5c 01       		.byte	0x1
 3451 0a5d 3A       		.byte	0x3a
 3452 0a5e D7090000 		.4byte	0x9d7
 3453 0a62 05       		.uleb128 0x5
 3454 0a63 03       		.byte	0x3
 3455 0a64 00000000 		.4byte	CapSense_lowBaselineReset
 3456 0a68 1D       		.uleb128 0x1d
 3457 0a69 75050000 		.4byte	.LASF102
 3458 0a6d 01       		.byte	0x1
 3459 0a6e 49       		.byte	0x49
 3460 0a6f D7090000 		.4byte	0x9d7
 3461 0a73 05       		.uleb128 0x5
 3462 0a74 03       		.byte	0x3
 3463 0a75 00000000 		.4byte	CapSense_fingerThreshold
 3464 0a79 1D       		.uleb128 0x1d
 3465 0a7a 5D050000 		.4byte	.LASF103
 3466 0a7e 01       		.byte	0x1
 3467 0a7f 4B       		.byte	0x4b
 3468 0a80 D7090000 		.4byte	0x9d7
 3469 0a84 05       		.uleb128 0x5
 3470 0a85 03       		.byte	0x3
 3471 0a86 00000000 		.4byte	CapSense_noiseThreshold
 3472 0a8a 1D       		.uleb128 0x1d
 3473 0a8b 3F090000 		.4byte	.LASF104
 3474 0a8f 01       		.byte	0x1
 3475 0a90 4D       		.byte	0x4d
 3476 0a91 D7090000 		.4byte	0x9d7
 3477 0a95 05       		.uleb128 0x5
 3478 0a96 03       		.byte	0x3
 3479 0a97 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3480 0a9b 1D       		.uleb128 0x1d
 3481 0a9c 17000000 		.4byte	.LASF105
 3482 0aa0 01       		.byte	0x1
 3483 0aa1 4F       		.byte	0x4f
 3484 0aa2 D7090000 		.4byte	0x9d7
 3485 0aa6 05       		.uleb128 0x5
 3486 0aa7 03       		.byte	0x3
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 112


 3487 0aa8 00000000 		.4byte	CapSense_hysteresis
 3488 0aac 1D       		.uleb128 0x1d
 3489 0aad 9B030000 		.4byte	.LASF106
 3490 0ab1 01       		.byte	0x1
 3491 0ab2 51       		.byte	0x51
 3492 0ab3 D7090000 		.4byte	0x9d7
 3493 0ab7 05       		.uleb128 0x5
 3494 0ab8 03       		.byte	0x3
 3495 0ab9 00000000 		.4byte	CapSense_debounce
 3496 0abd 1D       		.uleb128 0x1d
 3497 0abe 2B000000 		.4byte	.LASF107
 3498 0ac2 01       		.byte	0x1
 3499 0ac3 59       		.byte	0x59
 3500 0ac4 CE0A0000 		.4byte	0xace
 3501 0ac8 05       		.uleb128 0x5
 3502 0ac9 03       		.byte	0x3
 3503 0aca 00000000 		.4byte	CapSense_rawDataIndex
 3504 0ace 08       		.uleb128 0x8
 3505 0acf D7090000 		.4byte	0x9d7
 3506 0ad3 1D       		.uleb128 0x1d
 3507 0ad4 F5030000 		.4byte	.LASF108
 3508 0ad8 01       		.byte	0x1
 3509 0ad9 5D       		.byte	0x5d
 3510 0ada E40A0000 		.4byte	0xae4
 3511 0ade 05       		.uleb128 0x5
 3512 0adf 03       		.byte	0x3
 3513 0ae0 00000000 		.4byte	CapSense_numberOfSensors
 3514 0ae4 08       		.uleb128 0x8
 3515 0ae5 D7090000 		.4byte	0x9d7
 3516 0ae9 1D       		.uleb128 0x1d
 3517 0aea 8E050000 		.4byte	.LASF109
 3518 0aee 01       		.byte	0x1
 3519 0aef 27       		.byte	0x27
 3520 0af0 BC090000 		.4byte	0x9bc
 3521 0af4 05       		.uleb128 0x5
 3522 0af5 03       		.byte	0x3
 3523 0af6 00000000 		.4byte	CapSense_rawFilterData1
 3524 0afa 1C       		.uleb128 0x1c
 3525 0afb C4050000 		.4byte	.LASF110
 3526 0aff 01       		.byte	0x1
 3527 0b00 41       		.byte	0x41
 3528 0b01 32020000 		.4byte	0x232
 3529 0b05 1D       		.uleb128 0x1d
 3530 0b06 9A070000 		.4byte	.LASF111
 3531 0b0a 01       		.byte	0x1
 3532 0b0b 45       		.byte	0x45
 3533 0b0c 6B000000 		.4byte	0x6b
 3534 0b10 05       		.uleb128 0x5
 3535 0b11 03       		.byte	0x3
 3536 0b12 00000000 		.4byte	CapSense_enableRawFilters
 3537 0b16 00       		.byte	0
 3538              		.section	.debug_abbrev,"",%progbits
 3539              	.Ldebug_abbrev0:
 3540 0000 01       		.uleb128 0x1
 3541 0001 11       		.uleb128 0x11
 3542 0002 01       		.byte	0x1
 3543 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 113


 3544 0004 0E       		.uleb128 0xe
 3545 0005 13       		.uleb128 0x13
 3546 0006 0B       		.uleb128 0xb
 3547 0007 03       		.uleb128 0x3
 3548 0008 0E       		.uleb128 0xe
 3549 0009 1B       		.uleb128 0x1b
 3550 000a 0E       		.uleb128 0xe
 3551 000b 55       		.uleb128 0x55
 3552 000c 17       		.uleb128 0x17
 3553 000d 11       		.uleb128 0x11
 3554 000e 01       		.uleb128 0x1
 3555 000f 10       		.uleb128 0x10
 3556 0010 17       		.uleb128 0x17
 3557 0011 00       		.byte	0
 3558 0012 00       		.byte	0
 3559 0013 02       		.uleb128 0x2
 3560 0014 24       		.uleb128 0x24
 3561 0015 00       		.byte	0
 3562 0016 0B       		.uleb128 0xb
 3563 0017 0B       		.uleb128 0xb
 3564 0018 3E       		.uleb128 0x3e
 3565 0019 0B       		.uleb128 0xb
 3566 001a 03       		.uleb128 0x3
 3567 001b 0E       		.uleb128 0xe
 3568 001c 00       		.byte	0
 3569 001d 00       		.byte	0
 3570 001e 03       		.uleb128 0x3
 3571 001f 24       		.uleb128 0x24
 3572 0020 00       		.byte	0
 3573 0021 0B       		.uleb128 0xb
 3574 0022 0B       		.uleb128 0xb
 3575 0023 3E       		.uleb128 0x3e
 3576 0024 0B       		.uleb128 0xb
 3577 0025 03       		.uleb128 0x3
 3578 0026 08       		.uleb128 0x8
 3579 0027 00       		.byte	0
 3580 0028 00       		.byte	0
 3581 0029 04       		.uleb128 0x4
 3582 002a 16       		.uleb128 0x16
 3583 002b 00       		.byte	0
 3584 002c 03       		.uleb128 0x3
 3585 002d 0E       		.uleb128 0xe
 3586 002e 3A       		.uleb128 0x3a
 3587 002f 0B       		.uleb128 0xb
 3588 0030 3B       		.uleb128 0x3b
 3589 0031 0B       		.uleb128 0xb
 3590 0032 49       		.uleb128 0x49
 3591 0033 13       		.uleb128 0x13
 3592 0034 00       		.byte	0
 3593 0035 00       		.byte	0
 3594 0036 05       		.uleb128 0x5
 3595 0037 13       		.uleb128 0x13
 3596 0038 01       		.byte	0x1
 3597 0039 0B       		.uleb128 0xb
 3598 003a 0B       		.uleb128 0xb
 3599 003b 3A       		.uleb128 0x3a
 3600 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 114


 3601 003d 3B       		.uleb128 0x3b
 3602 003e 0B       		.uleb128 0xb
 3603 003f 01       		.uleb128 0x1
 3604 0040 13       		.uleb128 0x13
 3605 0041 00       		.byte	0
 3606 0042 00       		.byte	0
 3607 0043 06       		.uleb128 0x6
 3608 0044 0D       		.uleb128 0xd
 3609 0045 00       		.byte	0
 3610 0046 03       		.uleb128 0x3
 3611 0047 0E       		.uleb128 0xe
 3612 0048 3A       		.uleb128 0x3a
 3613 0049 0B       		.uleb128 0xb
 3614 004a 3B       		.uleb128 0x3b
 3615 004b 0B       		.uleb128 0xb
 3616 004c 49       		.uleb128 0x49
 3617 004d 13       		.uleb128 0x13
 3618 004e 38       		.uleb128 0x38
 3619 004f 0B       		.uleb128 0xb
 3620 0050 00       		.byte	0
 3621 0051 00       		.byte	0
 3622 0052 07       		.uleb128 0x7
 3623 0053 0F       		.uleb128 0xf
 3624 0054 00       		.byte	0
 3625 0055 0B       		.uleb128 0xb
 3626 0056 0B       		.uleb128 0xb
 3627 0057 49       		.uleb128 0x49
 3628 0058 13       		.uleb128 0x13
 3629 0059 00       		.byte	0
 3630 005a 00       		.byte	0
 3631 005b 08       		.uleb128 0x8
 3632 005c 26       		.uleb128 0x26
 3633 005d 00       		.byte	0
 3634 005e 49       		.uleb128 0x49
 3635 005f 13       		.uleb128 0x13
 3636 0060 00       		.byte	0
 3637 0061 00       		.byte	0
 3638 0062 09       		.uleb128 0x9
 3639 0063 15       		.uleb128 0x15
 3640 0064 01       		.byte	0x1
 3641 0065 27       		.uleb128 0x27
 3642 0066 19       		.uleb128 0x19
 3643 0067 49       		.uleb128 0x49
 3644 0068 13       		.uleb128 0x13
 3645 0069 01       		.uleb128 0x1
 3646 006a 13       		.uleb128 0x13
 3647 006b 00       		.byte	0
 3648 006c 00       		.byte	0
 3649 006d 0A       		.uleb128 0xa
 3650 006e 05       		.uleb128 0x5
 3651 006f 00       		.byte	0
 3652 0070 49       		.uleb128 0x49
 3653 0071 13       		.uleb128 0x13
 3654 0072 00       		.byte	0
 3655 0073 00       		.byte	0
 3656 0074 0B       		.uleb128 0xb
 3657 0075 15       		.uleb128 0x15
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 115


 3658 0076 01       		.byte	0x1
 3659 0077 27       		.uleb128 0x27
 3660 0078 19       		.uleb128 0x19
 3661 0079 01       		.uleb128 0x1
 3662 007a 13       		.uleb128 0x13
 3663 007b 00       		.byte	0
 3664 007c 00       		.byte	0
 3665 007d 0C       		.uleb128 0xc
 3666 007e 2E       		.uleb128 0x2e
 3667 007f 01       		.byte	0x1
 3668 0080 3F       		.uleb128 0x3f
 3669 0081 19       		.uleb128 0x19
 3670 0082 03       		.uleb128 0x3
 3671 0083 0E       		.uleb128 0xe
 3672 0084 3A       		.uleb128 0x3a
 3673 0085 0B       		.uleb128 0xb
 3674 0086 3B       		.uleb128 0x3b
 3675 0087 0B       		.uleb128 0xb
 3676 0088 27       		.uleb128 0x27
 3677 0089 19       		.uleb128 0x19
 3678 008a 11       		.uleb128 0x11
 3679 008b 01       		.uleb128 0x1
 3680 008c 12       		.uleb128 0x12
 3681 008d 06       		.uleb128 0x6
 3682 008e 40       		.uleb128 0x40
 3683 008f 18       		.uleb128 0x18
 3684 0090 9742     		.uleb128 0x2117
 3685 0092 19       		.uleb128 0x19
 3686 0093 01       		.uleb128 0x1
 3687 0094 13       		.uleb128 0x13
 3688 0095 00       		.byte	0
 3689 0096 00       		.byte	0
 3690 0097 0D       		.uleb128 0xd
 3691 0098 05       		.uleb128 0x5
 3692 0099 00       		.byte	0
 3693 009a 03       		.uleb128 0x3
 3694 009b 0E       		.uleb128 0xe
 3695 009c 3A       		.uleb128 0x3a
 3696 009d 0B       		.uleb128 0xb
 3697 009e 3B       		.uleb128 0x3b
 3698 009f 0B       		.uleb128 0xb
 3699 00a0 49       		.uleb128 0x49
 3700 00a1 13       		.uleb128 0x13
 3701 00a2 02       		.uleb128 0x2
 3702 00a3 18       		.uleb128 0x18
 3703 00a4 00       		.byte	0
 3704 00a5 00       		.byte	0
 3705 00a6 0E       		.uleb128 0xe
 3706 00a7 34       		.uleb128 0x34
 3707 00a8 00       		.byte	0
 3708 00a9 03       		.uleb128 0x3
 3709 00aa 0E       		.uleb128 0xe
 3710 00ab 3A       		.uleb128 0x3a
 3711 00ac 0B       		.uleb128 0xb
 3712 00ad 3B       		.uleb128 0x3b
 3713 00ae 0B       		.uleb128 0xb
 3714 00af 49       		.uleb128 0x49
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 116


 3715 00b0 13       		.uleb128 0x13
 3716 00b1 02       		.uleb128 0x2
 3717 00b2 18       		.uleb128 0x18
 3718 00b3 00       		.byte	0
 3719 00b4 00       		.byte	0
 3720 00b5 0F       		.uleb128 0xf
 3721 00b6 2E       		.uleb128 0x2e
 3722 00b7 01       		.byte	0x1
 3723 00b8 3F       		.uleb128 0x3f
 3724 00b9 19       		.uleb128 0x19
 3725 00ba 03       		.uleb128 0x3
 3726 00bb 0E       		.uleb128 0xe
 3727 00bc 3A       		.uleb128 0x3a
 3728 00bd 0B       		.uleb128 0xb
 3729 00be 3B       		.uleb128 0x3b
 3730 00bf 0B       		.uleb128 0xb
 3731 00c0 27       		.uleb128 0x27
 3732 00c1 19       		.uleb128 0x19
 3733 00c2 11       		.uleb128 0x11
 3734 00c3 01       		.uleb128 0x1
 3735 00c4 12       		.uleb128 0x12
 3736 00c5 06       		.uleb128 0x6
 3737 00c6 40       		.uleb128 0x40
 3738 00c7 18       		.uleb128 0x18
 3739 00c8 9642     		.uleb128 0x2116
 3740 00ca 19       		.uleb128 0x19
 3741 00cb 01       		.uleb128 0x1
 3742 00cc 13       		.uleb128 0x13
 3743 00cd 00       		.byte	0
 3744 00ce 00       		.byte	0
 3745 00cf 10       		.uleb128 0x10
 3746 00d0 34       		.uleb128 0x34
 3747 00d1 00       		.byte	0
 3748 00d2 03       		.uleb128 0x3
 3749 00d3 08       		.uleb128 0x8
 3750 00d4 3A       		.uleb128 0x3a
 3751 00d5 0B       		.uleb128 0xb
 3752 00d6 3B       		.uleb128 0x3b
 3753 00d7 0B       		.uleb128 0xb
 3754 00d8 49       		.uleb128 0x49
 3755 00d9 13       		.uleb128 0x13
 3756 00da 02       		.uleb128 0x2
 3757 00db 18       		.uleb128 0x18
 3758 00dc 00       		.byte	0
 3759 00dd 00       		.byte	0
 3760 00de 11       		.uleb128 0x11
 3761 00df 2E       		.uleb128 0x2e
 3762 00e0 01       		.byte	0x1
 3763 00e1 3F       		.uleb128 0x3f
 3764 00e2 19       		.uleb128 0x19
 3765 00e3 03       		.uleb128 0x3
 3766 00e4 0E       		.uleb128 0xe
 3767 00e5 3A       		.uleb128 0x3a
 3768 00e6 0B       		.uleb128 0xb
 3769 00e7 3B       		.uleb128 0x3b
 3770 00e8 05       		.uleb128 0x5
 3771 00e9 27       		.uleb128 0x27
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 117


 3772 00ea 19       		.uleb128 0x19
 3773 00eb 11       		.uleb128 0x11
 3774 00ec 01       		.uleb128 0x1
 3775 00ed 12       		.uleb128 0x12
 3776 00ee 06       		.uleb128 0x6
 3777 00ef 40       		.uleb128 0x40
 3778 00f0 18       		.uleb128 0x18
 3779 00f1 9642     		.uleb128 0x2116
 3780 00f3 19       		.uleb128 0x19
 3781 00f4 01       		.uleb128 0x1
 3782 00f5 13       		.uleb128 0x13
 3783 00f6 00       		.byte	0
 3784 00f7 00       		.byte	0
 3785 00f8 12       		.uleb128 0x12
 3786 00f9 34       		.uleb128 0x34
 3787 00fa 00       		.byte	0
 3788 00fb 03       		.uleb128 0x3
 3789 00fc 08       		.uleb128 0x8
 3790 00fd 3A       		.uleb128 0x3a
 3791 00fe 0B       		.uleb128 0xb
 3792 00ff 3B       		.uleb128 0x3b
 3793 0100 05       		.uleb128 0x5
 3794 0101 49       		.uleb128 0x49
 3795 0102 13       		.uleb128 0x13
 3796 0103 02       		.uleb128 0x2
 3797 0104 18       		.uleb128 0x18
 3798 0105 00       		.byte	0
 3799 0106 00       		.byte	0
 3800 0107 13       		.uleb128 0x13
 3801 0108 34       		.uleb128 0x34
 3802 0109 00       		.byte	0
 3803 010a 03       		.uleb128 0x3
 3804 010b 0E       		.uleb128 0xe
 3805 010c 3A       		.uleb128 0x3a
 3806 010d 0B       		.uleb128 0xb
 3807 010e 3B       		.uleb128 0x3b
 3808 010f 05       		.uleb128 0x5
 3809 0110 49       		.uleb128 0x49
 3810 0111 13       		.uleb128 0x13
 3811 0112 02       		.uleb128 0x2
 3812 0113 18       		.uleb128 0x18
 3813 0114 00       		.byte	0
 3814 0115 00       		.byte	0
 3815 0116 14       		.uleb128 0x14
 3816 0117 05       		.uleb128 0x5
 3817 0118 00       		.byte	0
 3818 0119 03       		.uleb128 0x3
 3819 011a 0E       		.uleb128 0xe
 3820 011b 3A       		.uleb128 0x3a
 3821 011c 0B       		.uleb128 0xb
 3822 011d 3B       		.uleb128 0x3b
 3823 011e 05       		.uleb128 0x5
 3824 011f 49       		.uleb128 0x49
 3825 0120 13       		.uleb128 0x13
 3826 0121 02       		.uleb128 0x2
 3827 0122 18       		.uleb128 0x18
 3828 0123 00       		.byte	0
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 118


 3829 0124 00       		.byte	0
 3830 0125 15       		.uleb128 0x15
 3831 0126 2E       		.uleb128 0x2e
 3832 0127 01       		.byte	0x1
 3833 0128 3F       		.uleb128 0x3f
 3834 0129 19       		.uleb128 0x19
 3835 012a 03       		.uleb128 0x3
 3836 012b 0E       		.uleb128 0xe
 3837 012c 3A       		.uleb128 0x3a
 3838 012d 0B       		.uleb128 0xb
 3839 012e 3B       		.uleb128 0x3b
 3840 012f 05       		.uleb128 0x5
 3841 0130 27       		.uleb128 0x27
 3842 0131 19       		.uleb128 0x19
 3843 0132 49       		.uleb128 0x49
 3844 0133 13       		.uleb128 0x13
 3845 0134 11       		.uleb128 0x11
 3846 0135 01       		.uleb128 0x1
 3847 0136 12       		.uleb128 0x12
 3848 0137 06       		.uleb128 0x6
 3849 0138 40       		.uleb128 0x40
 3850 0139 18       		.uleb128 0x18
 3851 013a 9742     		.uleb128 0x2117
 3852 013c 19       		.uleb128 0x19
 3853 013d 01       		.uleb128 0x1
 3854 013e 13       		.uleb128 0x13
 3855 013f 00       		.byte	0
 3856 0140 00       		.byte	0
 3857 0141 16       		.uleb128 0x16
 3858 0142 2E       		.uleb128 0x2e
 3859 0143 01       		.byte	0x1
 3860 0144 3F       		.uleb128 0x3f
 3861 0145 19       		.uleb128 0x19
 3862 0146 03       		.uleb128 0x3
 3863 0147 0E       		.uleb128 0xe
 3864 0148 3A       		.uleb128 0x3a
 3865 0149 0B       		.uleb128 0xb
 3866 014a 3B       		.uleb128 0x3b
 3867 014b 05       		.uleb128 0x5
 3868 014c 27       		.uleb128 0x27
 3869 014d 19       		.uleb128 0x19
 3870 014e 11       		.uleb128 0x11
 3871 014f 01       		.uleb128 0x1
 3872 0150 12       		.uleb128 0x12
 3873 0151 06       		.uleb128 0x6
 3874 0152 40       		.uleb128 0x40
 3875 0153 18       		.uleb128 0x18
 3876 0154 9742     		.uleb128 0x2117
 3877 0156 19       		.uleb128 0x19
 3878 0157 01       		.uleb128 0x1
 3879 0158 13       		.uleb128 0x13
 3880 0159 00       		.byte	0
 3881 015a 00       		.byte	0
 3882 015b 17       		.uleb128 0x17
 3883 015c 2E       		.uleb128 0x2e
 3884 015d 01       		.byte	0x1
 3885 015e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 119


 3886 015f 19       		.uleb128 0x19
 3887 0160 03       		.uleb128 0x3
 3888 0161 0E       		.uleb128 0xe
 3889 0162 3A       		.uleb128 0x3a
 3890 0163 0B       		.uleb128 0xb
 3891 0164 3B       		.uleb128 0x3b
 3892 0165 05       		.uleb128 0x5
 3893 0166 27       		.uleb128 0x27
 3894 0167 19       		.uleb128 0x19
 3895 0168 49       		.uleb128 0x49
 3896 0169 13       		.uleb128 0x13
 3897 016a 11       		.uleb128 0x11
 3898 016b 01       		.uleb128 0x1
 3899 016c 12       		.uleb128 0x12
 3900 016d 06       		.uleb128 0x6
 3901 016e 40       		.uleb128 0x40
 3902 016f 18       		.uleb128 0x18
 3903 0170 9642     		.uleb128 0x2116
 3904 0172 19       		.uleb128 0x19
 3905 0173 01       		.uleb128 0x1
 3906 0174 13       		.uleb128 0x13
 3907 0175 00       		.byte	0
 3908 0176 00       		.byte	0
 3909 0177 18       		.uleb128 0x18
 3910 0178 05       		.uleb128 0x5
 3911 0179 00       		.byte	0
 3912 017a 03       		.uleb128 0x3
 3913 017b 08       		.uleb128 0x8
 3914 017c 3A       		.uleb128 0x3a
 3915 017d 0B       		.uleb128 0xb
 3916 017e 3B       		.uleb128 0x3b
 3917 017f 05       		.uleb128 0x5
 3918 0180 49       		.uleb128 0x49
 3919 0181 13       		.uleb128 0x13
 3920 0182 02       		.uleb128 0x2
 3921 0183 18       		.uleb128 0x18
 3922 0184 00       		.byte	0
 3923 0185 00       		.byte	0
 3924 0186 19       		.uleb128 0x19
 3925 0187 2E       		.uleb128 0x2e
 3926 0188 00       		.byte	0
 3927 0189 3F       		.uleb128 0x3f
 3928 018a 19       		.uleb128 0x19
 3929 018b 03       		.uleb128 0x3
 3930 018c 0E       		.uleb128 0xe
 3931 018d 3A       		.uleb128 0x3a
 3932 018e 0B       		.uleb128 0xb
 3933 018f 3B       		.uleb128 0x3b
 3934 0190 05       		.uleb128 0x5
 3935 0191 27       		.uleb128 0x27
 3936 0192 19       		.uleb128 0x19
 3937 0193 11       		.uleb128 0x11
 3938 0194 01       		.uleb128 0x1
 3939 0195 12       		.uleb128 0x12
 3940 0196 06       		.uleb128 0x6
 3941 0197 40       		.uleb128 0x40
 3942 0198 18       		.uleb128 0x18
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 120


 3943 0199 9742     		.uleb128 0x2117
 3944 019b 19       		.uleb128 0x19
 3945 019c 00       		.byte	0
 3946 019d 00       		.byte	0
 3947 019e 1A       		.uleb128 0x1a
 3948 019f 01       		.uleb128 0x1
 3949 01a0 01       		.byte	0x1
 3950 01a1 49       		.uleb128 0x49
 3951 01a2 13       		.uleb128 0x13
 3952 01a3 01       		.uleb128 0x1
 3953 01a4 13       		.uleb128 0x13
 3954 01a5 00       		.byte	0
 3955 01a6 00       		.byte	0
 3956 01a7 1B       		.uleb128 0x1b
 3957 01a8 21       		.uleb128 0x21
 3958 01a9 00       		.byte	0
 3959 01aa 49       		.uleb128 0x49
 3960 01ab 13       		.uleb128 0x13
 3961 01ac 2F       		.uleb128 0x2f
 3962 01ad 0B       		.uleb128 0xb
 3963 01ae 00       		.byte	0
 3964 01af 00       		.byte	0
 3965 01b0 1C       		.uleb128 0x1c
 3966 01b1 34       		.uleb128 0x34
 3967 01b2 00       		.byte	0
 3968 01b3 03       		.uleb128 0x3
 3969 01b4 0E       		.uleb128 0xe
 3970 01b5 3A       		.uleb128 0x3a
 3971 01b6 0B       		.uleb128 0xb
 3972 01b7 3B       		.uleb128 0x3b
 3973 01b8 0B       		.uleb128 0xb
 3974 01b9 49       		.uleb128 0x49
 3975 01ba 13       		.uleb128 0x13
 3976 01bb 3F       		.uleb128 0x3f
 3977 01bc 19       		.uleb128 0x19
 3978 01bd 3C       		.uleb128 0x3c
 3979 01be 19       		.uleb128 0x19
 3980 01bf 00       		.byte	0
 3981 01c0 00       		.byte	0
 3982 01c1 1D       		.uleb128 0x1d
 3983 01c2 34       		.uleb128 0x34
 3984 01c3 00       		.byte	0
 3985 01c4 03       		.uleb128 0x3
 3986 01c5 0E       		.uleb128 0xe
 3987 01c6 3A       		.uleb128 0x3a
 3988 01c7 0B       		.uleb128 0xb
 3989 01c8 3B       		.uleb128 0x3b
 3990 01c9 0B       		.uleb128 0xb
 3991 01ca 49       		.uleb128 0x49
 3992 01cb 13       		.uleb128 0x13
 3993 01cc 3F       		.uleb128 0x3f
 3994 01cd 19       		.uleb128 0x19
 3995 01ce 02       		.uleb128 0x2
 3996 01cf 18       		.uleb128 0x18
 3997 01d0 00       		.byte	0
 3998 01d1 00       		.byte	0
 3999 01d2 00       		.byte	0
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 121


 4000              		.section	.debug_aranges,"",%progbits
 4001 0000 24010000 		.4byte	0x124
 4002 0004 0200     		.2byte	0x2
 4003 0006 00000000 		.4byte	.Ldebug_info0
 4004 000a 04       		.byte	0x4
 4005 000b 00       		.byte	0
 4006 000c 0000     		.2byte	0
 4007 000e 0000     		.2byte	0
 4008 0010 00000000 		.4byte	.LFB35
 4009 0014 84000000 		.4byte	.LFE35-.LFB35
 4010 0018 00000000 		.4byte	.LFB36
 4011 001c 2A000000 		.4byte	.LFE36-.LFB36
 4012 0020 00000000 		.4byte	.LFB37
 4013 0024 26000000 		.4byte	.LFE37-.LFB37
 4014 0028 00000000 		.4byte	.LFB38
 4015 002c 50000000 		.4byte	.LFE38-.LFB38
 4016 0030 00000000 		.4byte	.LFB39
 4017 0034 28020000 		.4byte	.LFE39-.LFB39
 4018 0038 00000000 		.4byte	.LFB40
 4019 003c 1E000000 		.4byte	.LFE40-.LFB40
 4020 0040 00000000 		.4byte	.LFB41
 4021 0044 40000000 		.4byte	.LFE41-.LFB41
 4022 0048 00000000 		.4byte	.LFB42
 4023 004c 58000000 		.4byte	.LFE42-.LFB42
 4024 0050 00000000 		.4byte	.LFB43
 4025 0054 1C000000 		.4byte	.LFE43-.LFB43
 4026 0058 00000000 		.4byte	.LFB44
 4027 005c 24000000 		.4byte	.LFE44-.LFB44
 4028 0060 00000000 		.4byte	.LFB45
 4029 0064 1C000000 		.4byte	.LFE45-.LFB45
 4030 0068 00000000 		.4byte	.LFB46
 4031 006c 24000000 		.4byte	.LFE46-.LFB46
 4032 0070 00000000 		.4byte	.LFB47
 4033 0074 1C000000 		.4byte	.LFE47-.LFB47
 4034 0078 00000000 		.4byte	.LFB48
 4035 007c 1C000000 		.4byte	.LFE48-.LFB48
 4036 0080 00000000 		.4byte	.LFB49
 4037 0084 1C000000 		.4byte	.LFE49-.LFB49
 4038 0088 00000000 		.4byte	.LFB50
 4039 008c 1C000000 		.4byte	.LFE50-.LFB50
 4040 0090 00000000 		.4byte	.LFB51
 4041 0094 24000000 		.4byte	.LFE51-.LFB51
 4042 0098 00000000 		.4byte	.LFB52
 4043 009c 24000000 		.4byte	.LFE52-.LFB52
 4044 00a0 00000000 		.4byte	.LFB53
 4045 00a4 24000000 		.4byte	.LFE53-.LFB53
 4046 00a8 00000000 		.4byte	.LFB54
 4047 00ac 24000000 		.4byte	.LFE54-.LFB54
 4048 00b0 00000000 		.4byte	.LFB55
 4049 00b4 24000000 		.4byte	.LFE55-.LFB55
 4050 00b8 00000000 		.4byte	.LFB56
 4051 00bc 24000000 		.4byte	.LFE56-.LFB56
 4052 00c0 00000000 		.4byte	.LFB57
 4053 00c4 38010000 		.4byte	.LFE57-.LFB57
 4054 00c8 00000000 		.4byte	.LFB58
 4055 00cc 44000000 		.4byte	.LFE58-.LFB58
 4056 00d0 00000000 		.4byte	.LFB59
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 122


 4057 00d4 38000000 		.4byte	.LFE59-.LFB59
 4058 00d8 00000000 		.4byte	.LFB60
 4059 00dc 5C000000 		.4byte	.LFE60-.LFB60
 4060 00e0 00000000 		.4byte	.LFB61
 4061 00e4 5C000000 		.4byte	.LFE61-.LFB61
 4062 00e8 00000000 		.4byte	.LFB62
 4063 00ec 6A000000 		.4byte	.LFE62-.LFB62
 4064 00f0 00000000 		.4byte	.LFB63
 4065 00f4 3C000000 		.4byte	.LFE63-.LFB63
 4066 00f8 00000000 		.4byte	.LFB64
 4067 00fc 1C000000 		.4byte	.LFE64-.LFB64
 4068 0100 00000000 		.4byte	.LFB65
 4069 0104 1C000000 		.4byte	.LFE65-.LFB65
 4070 0108 00000000 		.4byte	.LFB66
 4071 010c 1C000000 		.4byte	.LFE66-.LFB66
 4072 0110 00000000 		.4byte	.LFB67
 4073 0114 14000000 		.4byte	.LFE67-.LFB67
 4074 0118 00000000 		.4byte	.LFB68
 4075 011c 14000000 		.4byte	.LFE68-.LFB68
 4076 0120 00000000 		.4byte	0
 4077 0124 00000000 		.4byte	0
 4078              		.section	.debug_ranges,"",%progbits
 4079              	.Ldebug_ranges0:
 4080 0000 00000000 		.4byte	.LFB35
 4081 0004 84000000 		.4byte	.LFE35
 4082 0008 00000000 		.4byte	.LFB36
 4083 000c 2A000000 		.4byte	.LFE36
 4084 0010 00000000 		.4byte	.LFB37
 4085 0014 26000000 		.4byte	.LFE37
 4086 0018 00000000 		.4byte	.LFB38
 4087 001c 50000000 		.4byte	.LFE38
 4088 0020 00000000 		.4byte	.LFB39
 4089 0024 28020000 		.4byte	.LFE39
 4090 0028 00000000 		.4byte	.LFB40
 4091 002c 1E000000 		.4byte	.LFE40
 4092 0030 00000000 		.4byte	.LFB41
 4093 0034 40000000 		.4byte	.LFE41
 4094 0038 00000000 		.4byte	.LFB42
 4095 003c 58000000 		.4byte	.LFE42
 4096 0040 00000000 		.4byte	.LFB43
 4097 0044 1C000000 		.4byte	.LFE43
 4098 0048 00000000 		.4byte	.LFB44
 4099 004c 24000000 		.4byte	.LFE44
 4100 0050 00000000 		.4byte	.LFB45
 4101 0054 1C000000 		.4byte	.LFE45
 4102 0058 00000000 		.4byte	.LFB46
 4103 005c 24000000 		.4byte	.LFE46
 4104 0060 00000000 		.4byte	.LFB47
 4105 0064 1C000000 		.4byte	.LFE47
 4106 0068 00000000 		.4byte	.LFB48
 4107 006c 1C000000 		.4byte	.LFE48
 4108 0070 00000000 		.4byte	.LFB49
 4109 0074 1C000000 		.4byte	.LFE49
 4110 0078 00000000 		.4byte	.LFB50
 4111 007c 1C000000 		.4byte	.LFE50
 4112 0080 00000000 		.4byte	.LFB51
 4113 0084 24000000 		.4byte	.LFE51
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 123


 4114 0088 00000000 		.4byte	.LFB52
 4115 008c 24000000 		.4byte	.LFE52
 4116 0090 00000000 		.4byte	.LFB53
 4117 0094 24000000 		.4byte	.LFE53
 4118 0098 00000000 		.4byte	.LFB54
 4119 009c 24000000 		.4byte	.LFE54
 4120 00a0 00000000 		.4byte	.LFB55
 4121 00a4 24000000 		.4byte	.LFE55
 4122 00a8 00000000 		.4byte	.LFB56
 4123 00ac 24000000 		.4byte	.LFE56
 4124 00b0 00000000 		.4byte	.LFB57
 4125 00b4 38010000 		.4byte	.LFE57
 4126 00b8 00000000 		.4byte	.LFB58
 4127 00bc 44000000 		.4byte	.LFE58
 4128 00c0 00000000 		.4byte	.LFB59
 4129 00c4 38000000 		.4byte	.LFE59
 4130 00c8 00000000 		.4byte	.LFB60
 4131 00cc 5C000000 		.4byte	.LFE60
 4132 00d0 00000000 		.4byte	.LFB61
 4133 00d4 5C000000 		.4byte	.LFE61
 4134 00d8 00000000 		.4byte	.LFB62
 4135 00dc 6A000000 		.4byte	.LFE62
 4136 00e0 00000000 		.4byte	.LFB63
 4137 00e4 3C000000 		.4byte	.LFE63
 4138 00e8 00000000 		.4byte	.LFB64
 4139 00ec 1C000000 		.4byte	.LFE64
 4140 00f0 00000000 		.4byte	.LFB65
 4141 00f4 1C000000 		.4byte	.LFE65
 4142 00f8 00000000 		.4byte	.LFB66
 4143 00fc 1C000000 		.4byte	.LFE66
 4144 0100 00000000 		.4byte	.LFB67
 4145 0104 14000000 		.4byte	.LFE67
 4146 0108 00000000 		.4byte	.LFB68
 4147 010c 14000000 		.4byte	.LFE68
 4148 0110 00000000 		.4byte	0
 4149 0114 00000000 		.4byte	0
 4150              		.section	.debug_line,"",%progbits
 4151              	.Ldebug_line0:
 4152 0000 D0030000 		.section	.debug_str,"MS",%progbits,1
 4152      02005E00 
 4152      00000201 
 4152      FB0E0D00 
 4152      01010101 
 4153              	.LASF10:
 4154 0000 75696E74 		.ascii	"uint16\000"
 4154      313600
 4155              	.LASF49:
 4156 0007 66696C74 		.ascii	"filteredRawData\000"
 4156      65726564 
 4156      52617744 
 4156      61746100 
 4157              	.LASF105:
 4158 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 4158      656E7365 
 4158      5F687973 
 4158      74657265 
 4158      73697300 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 124


 4159              	.LASF107:
 4160 002b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4160      656E7365 
 4160      5F726177 
 4160      44617461 
 4160      496E6465 
 4161              	.LASF99:
 4162 0041 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4162      656E7365 
 4162      5F73656E 
 4162      736F724F 
 4162      6E4D6173 
 4163              	.LASF66:
 4164 0057 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4164      656E7365 
 4164      5F476574 
 4164      4E656761 
 4164      74697665 
 4165              	.LASF76:
 4166 007a 66696E67 		.ascii	"fingerThreshold\000"
 4166      65725468 
 4166      72657368 
 4166      6F6C6400 
 4167              	.LASF70:
 4168 008a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4168      656E7365 
 4168      5F536574 
 4168      4E656761 
 4168      74697665 
 4169              	.LASF53:
 4170 00ad 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4170      656E7365 
 4170      5F557064 
 4170      61746557 
 4170      69646765 
 4171              	.LASF25:
 4172 00cb 70747247 		.ascii	"ptrGetRaw\000"
 4172      65745261 
 4172      7700
 4173              	.LASF30:
 4174 00d5 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_10\000"
 4174      656E7365 
 4174      5F434F4E 
 4174      4649475F 
 4174      54595045 
 4175              	.LASF89:
 4176 00fc 43617053 		.ascii	"CapSense_GetDebounce\000"
 4176      656E7365 
 4176      5F476574 
 4176      4465626F 
 4176      756E6365 
 4177              	.LASF85:
 4178 0111 43617053 		.ascii	"CapSense_MedianFilter\000"
 4178      656E7365 
 4178      5F4D6564 
 4178      69616E46 
 4178      696C7465 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 125


 4179              	.LASF7:
 4180 0127 6C6F6E67 		.ascii	"long long unsigned int\000"
 4180      206C6F6E 
 4180      6720756E 
 4180      7369676E 
 4180      65642069 
 4181              	.LASF98:
 4182 013e 43617053 		.ascii	"CapSense_sensorSignal\000"
 4182      656E7365 
 4182      5F73656E 
 4182      736F7253 
 4182      69676E61 
 4183              	.LASF64:
 4184 0154 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4184      656E7365 
 4184      5F476574 
 4184      4E6F6973 
 4184      65546872 
 4185              	.LASF43:
 4186 016f 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4186      656E7365 
 4186      5F496E69 
 4186      7469616C 
 4186      697A6545 
 4187              	.LASF52:
 4188 0193 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4188      656E7365 
 4188      5F557064 
 4188      61746545 
 4188      6E61626C 
 4189              	.LASF6:
 4190 01b3 6C6F6E67 		.ascii	"long long int\000"
 4190      206C6F6E 
 4190      6720696E 
 4190      7400
 4191              	.LASF0:
 4192 01c1 7369676E 		.ascii	"signed char\000"
 4192      65642063 
 4192      68617200 
 4193              	.LASF84:
 4194 01cd 43617053 		.ascii	"CapSense_DisableWidget\000"
 4194      656E7365 
 4194      5F446973 
 4194      61626C65 
 4194      57696467 
 4195              	.LASF79:
 4196 01e4 72617749 		.ascii	"rawIndex\000"
 4196      6E646578 
 4196      00
 4197              	.LASF24:
 4198 01ed 6E756D62 		.ascii	"numberOfSensors\000"
 4198      65724F66 
 4198      53656E73 
 4198      6F727300 
 4199              	.LASF21:
 4200 01fd 77696467 		.ascii	"widgetNubmersTbl\000"
 4200      65744E75 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 126


 4200      626D6572 
 4200      7354626C 
 4200      00
 4201              	.LASF59:
 4202 020e 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4202      656E7365 
 4202      5F476574 
 4202      42617365 
 4202      6C696E65 
 4203              	.LASF81:
 4204 0227 73746174 		.ascii	"state\000"
 4204      6500
 4205              	.LASF4:
 4206 022d 6C6F6E67 		.ascii	"long int\000"
 4206      20696E74 
 4206      00
 4207              	.LASF82:
 4208 0236 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4208      656E7365 
 4208      5F436865 
 4208      636B4973 
 4208      416E7957 
 4209              	.LASF9:
 4210 0256 75696E74 		.ascii	"uint8\000"
 4210      3800
 4211              	.LASF101:
 4212 025c 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4212      656E7365 
 4212      5F6C6F77 
 4212      42617365 
 4212      6C696E65 
 4213              	.LASF91:
 4214 0276 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4214      656E7365 
 4214      5F446973 
 4214      61626C65 
 4214      52617744 
 4215              	.LASF13:
 4216 0295 646F7562 		.ascii	"double\000"
 4216      6C6500
 4217              	.LASF95:
 4218 029c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4218      656E7365 
 4218      5F776964 
 4218      6765744E 
 4218      756D6265 
 4219              	.LASF11:
 4220 02b2 75696E74 		.ascii	"uint32\000"
 4220      333200
 4221              	.LASF77:
 4222 02b9 68797374 		.ascii	"hysteresis\000"
 4222      65726573 
 4222      697300
 4223              	.LASF67:
 4224 02c4 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4224      656E7365 
 4224      5F536574 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 127


 4224      46696E67 
 4224      65725468 
 4225              	.LASF71:
 4226 02e0 43617053 		.ascii	"CapSense_SetDebounce\000"
 4226      656E7365 
 4226      5F536574 
 4226      4465626F 
 4226      756E6365 
 4227              	.LASF34:
 4228 02f5 73656E73 		.ascii	"sensetivitySeed\000"
 4228      65746976 
 4228      69747953 
 4228      65656400 
 4229              	.LASF33:
 4230 0305 746F7461 		.ascii	"totalSensorsNum\000"
 4230      6C53656E 
 4230      736F7273 
 4230      4E756D00 
 4231              	.LASF62:
 4232 0315 76616C75 		.ascii	"value\000"
 4232      6500
 4233              	.LASF72:
 4234 031b 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4234      656E7365 
 4234      5F536574 
 4234      4C6F7742 
 4234      6173656C 
 4235              	.LASF56:
 4236 0338 6C617374 		.ascii	"lastSensor\000"
 4236      53656E73 
 4236      6F7200
 4237              	.LASF8:
 4238 0343 756E7369 		.ascii	"unsigned int\000"
 4238      676E6564 
 4238      20696E74 
 4238      00
 4239              	.LASF5:
 4240 0350 6C6F6E67 		.ascii	"long unsigned int\000"
 4240      20756E73 
 4240      69676E65 
 4240      6420696E 
 4240      7400
 4241              	.LASF97:
 4242 0362 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4242      656E7365 
 4242      5F73656E 
 4242      736F7242 
 4242      6173656C 
 4243              	.LASF22:
 4244 037d 7265736F 		.ascii	"resolutionsTbl\000"
 4244      6C757469 
 4244      6F6E7354 
 4244      626C00
 4245              	.LASF28:
 4246 038c 70747247 		.ascii	"ptrGetBitValue\000"
 4246      65744269 
 4246      7456616C 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 128


 4246      756500
 4247              	.LASF106:
 4248 039b 43617053 		.ascii	"CapSense_debounce\000"
 4248      656E7365 
 4248      5F646562 
 4248      6F756E63 
 4248      6500
 4249              	.LASF58:
 4250 03ad 64617461 		.ascii	"data\000"
 4250      00
 4251              	.LASF3:
 4252 03b2 73686F72 		.ascii	"short unsigned int\000"
 4252      7420756E 
 4252      7369676E 
 4252      65642069 
 4252      6E7400
 4253              	.LASF18:
 4254 03c5 73656E73 		.ascii	"sensetivityTbl\000"
 4254      65746976 
 4254      69747954 
 4254      626C00
 4255              	.LASF40:
 4256 03d4 73656E73 		.ascii	"sensor\000"
 4256      6F7200
 4257              	.LASF94:
 4258 03db 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4258      656E7365 
 4258      5F73656E 
 4258      736F7245 
 4258      6E61626C 
 4259              	.LASF108:
 4260 03f5 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4260      656E7365 
 4260      5F6E756D 
 4260      6265724F 
 4260      6653656E 
 4261              	.LASF51:
 4262 040e 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4262      656E7365 
 4262      5F557064 
 4262      61746553 
 4262      656E736F 
 4263              	.LASF46:
 4264 042c 63616C63 		.ascii	"calc\000"
 4264      00
 4265              	.LASF19:
 4266 0431 63686172 		.ascii	"chargeDivTbl\000"
 4266      67654469 
 4266      7654626C 
 4266      00
 4267              	.LASF113:
 4268 043e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4268      6E657261 
 4268      7465645F 
 4268      536F7572 
 4268      63655C50 
 4269              	.LASF60:
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 129


 4270 0467 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4270      656E7365 
 4270      5F476574 
 4270      44696666 
 4270      436F756E 
 4271              	.LASF36:
 4272 0481 706F696E 		.ascii	"pointers\000"
 4272      74657273 
 4272      00
 4273              	.LASF74:
 4274 048a 6465626F 		.ascii	"debounce\000"
 4274      756E6365 
 4274      00
 4275              	.LASF35:
 4276 0493 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4276      6B467265 
 4276      715F4D48 
 4276      7A00
 4277              	.LASF15:
 4278 04a1 73697A65 		.ascii	"sizetype\000"
 4278      74797065 
 4278      00
 4279              	.LASF83:
 4280 04aa 43617053 		.ascii	"CapSense_EnableWidget\000"
 4280      656E7365 
 4280      5F456E61 
 4280      626C6557 
 4280      69646765 
 4281              	.LASF45:
 4282 04c0 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4282      656E7365 
 4282      5F557064 
 4282      61746542 
 4282      6173656C 
 4283              	.LASF39:
 4284 04e3 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4284      656E7365 
 4284      5F496E69 
 4284      7469616C 
 4284      697A6553 
 4285              	.LASF69:
 4286 0505 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4286      656E7365 
 4286      5F536574 
 4286      46696E67 
 4286      65724879 
 4287              	.LASF73:
 4288 0522 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4288      656E7365 
 4288      5F436865 
 4288      636B4973 
 4288      53656E73 
 4289              	.LASF16:
 4290 053f 69646163 		.ascii	"idac1LevelsTbl\000"
 4290      314C6576 
 4290      656C7354 
 4290      626C00
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 130


 4291              	.LASF17:
 4292 054e 69646163 		.ascii	"idac2LevelsTbl\000"
 4292      324C6576 
 4292      656C7354 
 4292      626C00
 4293              	.LASF103:
 4294 055d 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4294      656E7365 
 4294      5F6E6F69 
 4294      73655468 
 4294      72657368 
 4295              	.LASF102:
 4296 0575 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4296      656E7365 
 4296      5F66696E 
 4296      67657254 
 4296      68726573 
 4297              	.LASF109:
 4298 058e 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4298      656E7365 
 4298      5F726177 
 4298      46696C74 
 4298      65724461 
 4299              	.LASF37:
 4300 05a6 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_10\000"
 4300      656E7365 
 4300      5F434F4E 
 4300      4649475F 
 4300      54595045 
 4301              	.LASF110:
 4302 05c4 43617053 		.ascii	"CapSense_config\000"
 4302      656E7365 
 4302      5F636F6E 
 4302      66696700 
 4303              	.LASF12:
 4304 05d4 666C6F61 		.ascii	"float\000"
 4304      7400
 4305              	.LASF88:
 4306 05da 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4306      656E7365 
 4306      5F476574 
 4306      4C6F7742 
 4306      6173656C 
 4307              	.LASF112:
 4308 05f7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4308      4320342E 
 4308      382E3420 
 4308      32303134 
 4308      30353236 
 4309 062a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4309      20726576 
 4309      6973696F 
 4309      6E203231 
 4309      31333538 
 4310 065d 30202D66 		.ascii	"0 -ffunction-sections\000"
 4310      66756E63 
 4310      74696F6E 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 131


 4310      2D736563 
 4310      74696F6E 
 4311              	.LASF78:
 4312 0673 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4312      656E7365 
 4312      5F436865 
 4312      636B4973 
 4312      57696467 
 4313              	.LASF1:
 4314 0690 756E7369 		.ascii	"unsigned char\000"
 4314      676E6564 
 4314      20636861 
 4314      7200
 4315              	.LASF41:
 4316 069e 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4316      656E7365 
 4316      5F496E69 
 4316      7469616C 
 4316      697A6541 
 4317              	.LASF27:
 4318 06be 70747252 		.ascii	"ptrReadSensorRaw\000"
 4318      65616453 
 4318      656E736F 
 4318      72526177 
 4318      00
 4319              	.LASF57:
 4320 06cf 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4320      656E7365 
 4320      5F536574 
 4320      42617365 
 4320      6C696E65 
 4321              	.LASF50:
 4322 06e8 6E6F6973 		.ascii	"noiseThreshold\000"
 4322      65546872 
 4322      6573686F 
 4322      6C6400
 4323              	.LASF2:
 4324 06f7 73686F72 		.ascii	"short int\000"
 4324      7420696E 
 4324      7400
 4325              	.LASF42:
 4326 0701 77696467 		.ascii	"widget\000"
 4326      657400
 4327              	.LASF20:
 4328 0708 6D6F6444 		.ascii	"modDivTbl\000"
 4328      69765462 
 4328      6C00
 4329              	.LASF44:
 4330 0712 69735365 		.ascii	"isSensorEnabled\000"
 4330      6E736F72 
 4330      456E6162 
 4330      6C656400 
 4331              	.LASF38:
 4332 0722 43617053 		.ascii	"CapSense_BaseInit\000"
 4332      656E7365 
 4332      5F426173 
 4332      65496E69 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 132


 4332      7400
 4333              	.LASF54:
 4334 0734 73656E73 		.ascii	"sensorsPerWidget\000"
 4334      6F727350 
 4334      65725769 
 4334      64676574 
 4334      00
 4335              	.LASF100:
 4336 0745 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4336      656E7365 
 4336      5F6C6F77 
 4336      42617365 
 4336      6C696E65 
 4337              	.LASF68:
 4338 0762 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4338      656E7365 
 4338      5F536574 
 4338      4E6F6973 
 4338      65546872 
 4339              	.LASF96:
 4340 077d 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4340      656E7365 
 4340      5F73656E 
 4340      736F7242 
 4340      6173656C 
 4341              	.LASF14:
 4342 0795 63686172 		.ascii	"char\000"
 4342      00
 4343              	.LASF111:
 4344 079a 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4344      656E7365 
 4344      5F656E61 
 4344      626C6552 
 4344      61774669 
 4345              	.LASF65:
 4346 07b4 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4346      656E7365 
 4346      5F476574 
 4346      46696E67 
 4346      65724879 
 4347              	.LASF55:
 4348 07d1 66697273 		.ascii	"firstSensor\000"
 4348      7453656E 
 4348      736F7200 
 4349              	.LASF75:
 4350 07dd 6465626F 		.ascii	"debounceIndex\000"
 4350      756E6365 
 4350      496E6465 
 4350      7800
 4351              	.LASF63:
 4352 07eb 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4352      656E7365 
 4352      5F476574 
 4352      46696E67 
 4352      65725468 
 4353              	.LASF26:
 4354 0807 70747250 		.ascii	"ptrPreScan\000"
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 133


 4354      72655363 
 4354      616E00
 4355              	.LASF47:
 4356 0812 7369676E 		.ascii	"sign\000"
 4356      00
 4357              	.LASF80:
 4358 0817 6E756D4F 		.ascii	"numOfSensors\000"
 4358      6653656E 
 4358      736F7273 
 4358      00
 4359              	.LASF31:
 4360 0824 746F7461 		.ascii	"totalScanslotsNum\000"
 4360      6C536361 
 4360      6E736C6F 
 4360      74734E75 
 4360      6D00
 4361              	.LASF93:
 4362 0836 43617053 		.ascii	"CapSense_sensorRaw\000"
 4362      656E7365 
 4362      5F73656E 
 4362      736F7252 
 4362      617700
 4363              	.LASF61:
 4364 0849 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4364      656E7365 
 4364      5F536574 
 4364      44696666 
 4364      436F756E 
 4365              	.LASF29:
 4366 0863 70747253 		.ascii	"ptrSetBitValue\000"
 4366      65744269 
 4366      7456616C 
 4366      756500
 4367              	.LASF87:
 4368 0872 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4368      656E7365 
 4368      5F476574 
 4368      57696467 
 4368      65744E75 
 4369              	.LASF90:
 4370 088b 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4370      656E7365 
 4370      5F456E61 
 4370      626C6552 
 4370      61774461 
 4371              	.LASF92:
 4372 08a9 43617053 		.ascii	"CapSense_debounceCounter\000"
 4372      656E7365 
 4372      5F646562 
 4372      6F756E63 
 4372      65436F75 
 4373              	.LASF86:
 4374 08c2 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4374      656E7365 
 4374      5F494952 
 4374      3446696C 
 4374      74657200 
ARM GAS  C:\Users\jsing\AppData\Local\Temp\ccHQxQnh.s 			page 134


 4375              	.LASF23:
 4376 08d6 72617744 		.ascii	"rawDataIndex\000"
 4376      61746149 
 4376      6E646578 
 4376      00
 4377              	.LASF48:
 4378 08e3 74656D70 		.ascii	"tempRaw\000"
 4378      52617700 
 4379              	.LASF114:
 4380 08eb 443A5C55 		.ascii	"D:\\Users\\jsing\\Desktop\\BLE Lab 4\\Lab 4 Additio"
 4380      73657273 
 4380      5C6A7369 
 4380      6E675C44 
 4380      65736B74 
 4381 0919 6E616C20 		.ascii	"nal 1\\BLE Lab 4.cydsn\000"
 4381      315C424C 
 4381      45204C61 
 4381      6220342E 
 4381      63796473 
 4382              	.LASF32:
 4383 092f 746F7461 		.ascii	"totalWidgetsNum\000"
 4383      6C576964 
 4383      67657473 
 4383      4E756D00 
 4384              	.LASF104:
 4385 093f 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4385      656E7365 
 4385      5F6E6567 
 4385      61746976 
 4385      654E6F69 
 4386              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
